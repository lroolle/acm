#+TITLE: Leetcode-cn Problems List
#+DATE: 2020-10-11 13:38
#+LAST_MODIFIED: 2020-10-11 13:38
#+STARTUP: overview
#+HUGO_WEIGHT: auto
#+HUGO_AUTO_SET_LASTMOD: t
#+EXPORT_FILE_NAME: leetcode-cn-problems-list
#+HUGO_BASE_DIR:~/G/blog
#+HUGO_SECTION: leetcode
#+HUGO_CATEGORIES:leetcode
#+HUGO_TAGS: Leetcode Algorithms

* Problems List
:PROPERTIES:
:VISIBILITY: children
:END:

** TODO [[https://leetcode-cn.com/problems/two-sum/][1. Two Sum]] :Array:HashTable:
** TODO [[https://leetcode-cn.com/problems/add-two-numbers/][2. Add Two Numbers]] :LinkedList:Math:
** TODO [[https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/][3. Longest Substring Without Repeating Characters]] :HashTable:TwoPointers:String:SlidingWindow:
** TODO [[https://leetcode-cn.com/problems/median-of-two-sorted-arrays/][4. Median of Two Sorted Arrays]] :Array:BinarySearch:DivideandConquer:
** TODO [[https://leetcode-cn.com/problems/longest-palindromic-substring/][5. Longest Palindromic Substring]] :String:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/zigzag-conversion/][6. ZigZag Conversion]] :String:
** TODO [[https://leetcode-cn.com/problems/reverse-integer/][7. Reverse Integer]] :Math:
** TODO [[https://leetcode-cn.com/problems/string-to-integer-atoi/][8. String to Integer (atoi)]] :Math:String:
** TODO [[https://leetcode-cn.com/problems/palindrome-number/][9. Palindrome Number]] :Math:
** TODO [[https://leetcode-cn.com/problems/regular-expression-matching/][10. Regular Expression Matching]] :String:DynamicProgramming:Backtracking:
** TODO [[https://leetcode-cn.com/problems/container-with-most-water/][11. Container With Most Water]] :Array:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/integer-to-roman/][12. Integer to Roman]] :Math:String:
** TODO [[https://leetcode-cn.com/problems/roman-to-integer/][13. Roman to Integer]] :Math:String:
** TODO [[https://leetcode-cn.com/problems/longest-common-prefix/][14. Longest Common Prefix]] :String:
** TODO [[https://leetcode-cn.com/problems/3sum/][15. 3Sum]] :Array:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/3sum-closest/][16. 3Sum Closest]] :Array:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/letter-combinations-of-a-phone-number/][17. Letter Combinations of a Phone Number]] :String:Backtracking:
** TODO [[https://leetcode-cn.com/problems/4sum/][18. 4Sum]] :Array:HashTable:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/][19. Remove Nth Node From End of List]] :LinkedList:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/valid-parentheses/][20. Valid Parentheses]] :Stack:String:
** TODO [[https://leetcode-cn.com/problems/merge-two-sorted-lists/][21. Merge Two Sorted Lists]] :LinkedList:
** TODO [[https://leetcode-cn.com/problems/generate-parentheses/][22. Generate Parentheses]] :String:Backtracking:
** TODO [[https://leetcode-cn.com/problems/merge-k-sorted-lists/][23. Merge k Sorted Lists]] :Heap:LinkedList:DivideandConquer:
** TODO [[https://leetcode-cn.com/problems/swap-nodes-in-pairs/][24. Swap Nodes in Pairs]] :LinkedList:
** TODO [[https://leetcode-cn.com/problems/reverse-nodes-in-k-group/][25. Reverse Nodes in k-Group]] :LinkedList:
** TODO [[https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/][26. Remove Duplicates from Sorted Array]] :Array:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/remove-element/][27. Remove Element]] :Array:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/implement-strstr/][28. Implement strStr()]] :TwoPointers:String:
** TODO [[https://leetcode-cn.com/problems/divide-two-integers/][29. Divide Two Integers]] :Math:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/substring-with-concatenation-of-all-words/][30. Substring with Concatenation of All Words]] :HashTable:TwoPointers:String:
** TODO [[https://leetcode-cn.com/problems/next-permutation/][31. Next Permutation]] :Array:
** TODO [[https://leetcode-cn.com/problems/longest-valid-parentheses/][32. Longest Valid Parentheses]] :String:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/search-in-rotated-sorted-array/][33. Search in Rotated Sorted Array]] :Array:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/find-first-and-last-position-of-element-in-sorted-array/][34. Find First and Last Position of Element in Sorted Array]] :Array:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/search-insert-position/][35. Search Insert Position]] :Array:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/valid-sudoku/][36. Valid Sudoku]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/sudoku-solver/][37. Sudoku Solver]] :HashTable:Backtracking:
** TODO [[https://leetcode-cn.com/problems/count-and-say/][38. Count and Say]] :String:
** TODO [[https://leetcode-cn.com/problems/combination-sum/][39. Combination Sum]] :Array:Backtracking:
** TODO [[https://leetcode-cn.com/problems/combination-sum-ii/][40. Combination Sum II]] :Array:Backtracking:
** TODO [[https://leetcode-cn.com/problems/first-missing-positive/][41. First Missing Positive]] :Array:
** TODO [[https://leetcode-cn.com/problems/trapping-rain-water/][42. Trapping Rain Water]] :Stack:Array:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/multiply-strings/][43. Multiply Strings]] :Math:String:
** TODO [[https://leetcode-cn.com/problems/wildcard-matching/][44. Wildcard Matching]] :Greedy:String:DynamicProgramming:Backtracking:
** TODO [[https://leetcode-cn.com/problems/jump-game-ii/][45. Jump Game II]] :Greedy:Array:
** TODO [[https://leetcode-cn.com/problems/permutations/][46. Permutations]] :Backtracking:
** TODO [[https://leetcode-cn.com/problems/permutations-ii/][47. Permutations II]] :Backtracking:
** TODO [[https://leetcode-cn.com/problems/rotate-image/][48. Rotate Image]] :Array:
** TODO [[https://leetcode-cn.com/problems/group-anagrams/][49. Group Anagrams]] :HashTable:String:
** TODO [[https://leetcode-cn.com/problems/powx-n/][50. Pow(x, n)]] :Math:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/n-queens/][51. N-Queens]] :Backtracking:
** TODO [[https://leetcode-cn.com/problems/n-queens-ii/][52. N-Queens II]] :Backtracking:
** TODO [[https://leetcode-cn.com/problems/maximum-subarray/][53. Maximum Subarray]] :Array:DivideandConquer:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/spiral-matrix/][54. Spiral Matrix]] :Array:
** TODO [[https://leetcode-cn.com/problems/jump-game/][55. Jump Game]] :Greedy:Array:
** TODO [[https://leetcode-cn.com/problems/merge-intervals/][56. Merge Intervals]] :Sort:Array:
** TODO [[https://leetcode-cn.com/problems/insert-interval/][57. Insert Interval]] :Sort:Array:
** TODO [[https://leetcode-cn.com/problems/length-of-last-word/][58. Length of Last Word]] :String:
** TODO [[https://leetcode-cn.com/problems/spiral-matrix-ii/][59. Spiral Matrix II]] :Array:
** TODO [[https://leetcode-cn.com/problems/permutation-sequence/][60. Permutation Sequence]] :Math:Backtracking:
** TODO [[https://leetcode-cn.com/problems/rotate-list/][61. Rotate List]] :LinkedList:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/unique-paths/][62. Unique Paths]] :Array:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/unique-paths-ii/][63. Unique Paths II]] :Array:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/minimum-path-sum/][64. Minimum Path Sum]] :Array:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/valid-number/][65. Valid Number]] :Math:String:
** TODO [[https://leetcode-cn.com/problems/plus-one/][66. Plus One]] :Array:
** TODO [[https://leetcode-cn.com/problems/add-binary/][67. Add Binary]] :Math:String:
** TODO [[https://leetcode-cn.com/problems/text-justification/][68. Text Justification]] :String:
** TODO [[https://leetcode-cn.com/problems/sqrtx/][69. Sqrt(x)]] :Math:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/climbing-stairs/][70. Climbing Stairs]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/simplify-path/][71. Simplify Path]] :Stack:String:
** TODO [[https://leetcode-cn.com/problems/edit-distance/][72. Edit Distance]] :String:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/set-matrix-zeroes/][73. Set Matrix Zeroes]] :Array:
** TODO [[https://leetcode-cn.com/problems/search-a-2d-matrix/][74. Search a 2D Matrix]] :Array:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/sort-colors/][75. Sort Colors]] :Sort:Array:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/minimum-window-substring/][76. Minimum Window Substring]] :HashTable:TwoPointers:String:SlidingWindow:
** TODO [[https://leetcode-cn.com/problems/combinations/][77. Combinations]] :Backtracking:
** TODO [[https://leetcode-cn.com/problems/subsets/][78. Subsets]] :BitManipulation:Array:Backtracking:
** TODO [[https://leetcode-cn.com/problems/word-search/][79. Word Search]] :Array:Backtracking:
** TODO [[https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array-ii/][80. Remove Duplicates from Sorted Array II]] :Array:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/search-in-rotated-sorted-array-ii/][81. Search in Rotated Sorted Array II]] :Array:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/remove-duplicates-from-sorted-list-ii/][82. Remove Duplicates from Sorted List II]] :LinkedList:
** TODO [[https://leetcode-cn.com/problems/remove-duplicates-from-sorted-list/][83. Remove Duplicates from Sorted List]] :LinkedList:
** TODO [[https://leetcode-cn.com/problems/largest-rectangle-in-histogram/][84. Largest Rectangle in Histogram]] :Stack:Array:
** TODO [[https://leetcode-cn.com/problems/maximal-rectangle/][85. Maximal Rectangle]] :Stack:Array:HashTable:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/partition-list/][86. Partition List]] :LinkedList:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/scramble-string/][87. Scramble String]] :String:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/merge-sorted-array/][88. Merge Sorted Array]] :Array:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/gray-code/][89. Gray Code]] :Backtracking:
** TODO [[https://leetcode-cn.com/problems/subsets-ii/][90. Subsets II]] :Array:Backtracking:
** TODO [[https://leetcode-cn.com/problems/decode-ways/][91. Decode Ways]] :String:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/reverse-linked-list-ii/][92. Reverse Linked List II]] :LinkedList:
** TODO [[https://leetcode-cn.com/problems/restore-ip-addresses/][93. Restore IP Addresses]] :String:Backtracking:
** TODO [[https://leetcode-cn.com/problems/binary-tree-inorder-traversal/][94. Binary Tree Inorder Traversal]] :Stack:Tree:HashTable:
** TODO [[https://leetcode-cn.com/problems/unique-binary-search-trees-ii/][95. Unique Binary Search Trees II]] :Tree:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/unique-binary-search-trees/][96. Unique Binary Search Trees]] :Tree:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/interleaving-string/][97. Interleaving String]] :String:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/validate-binary-search-tree/][98. Validate Binary Search Tree]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/recover-binary-search-tree/][99. Recover Binary Search Tree]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/same-tree/][100. Same Tree]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/symmetric-tree/][101. Symmetric Tree]] :Tree:DepthfirstSearch:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/binary-tree-level-order-traversal/][102. Binary Tree Level Order Traversal]] :Tree:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/binary-tree-zigzag-level-order-traversal/][103. Binary Tree Zigzag Level Order Traversal]] :Stack:Tree:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/maximum-depth-of-binary-tree/][104. Maximum Depth of Binary Tree]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/][105. Construct Binary Tree from Preorder and Inorder Traversal]] :Tree:DepthfirstSearch:Array:
** TODO [[https://leetcode-cn.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/][106. Construct Binary Tree from Inorder and Postorder Traversal]] :Tree:DepthfirstSearch:Array:
** TODO [[https://leetcode-cn.com/problems/binary-tree-level-order-traversal-ii/][107. Binary Tree Level Order Traversal II]] :Tree:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/convert-sorted-array-to-binary-search-tree/][108. Convert Sorted Array to Binary Search Tree]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/convert-sorted-list-to-binary-search-tree/][109. Convert Sorted List to Binary Search Tree]] :DepthfirstSearch:LinkedList:
** TODO [[https://leetcode-cn.com/problems/balanced-binary-tree/][110. Balanced Binary Tree]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/minimum-depth-of-binary-tree/][111. Minimum Depth of Binary Tree]] :Tree:DepthfirstSearch:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/path-sum/][112. Path Sum]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/path-sum-ii/][113. Path Sum II]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/flatten-binary-tree-to-linked-list/][114. Flatten Binary Tree to Linked List]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/distinct-subsequences/][115. Distinct Subsequences]] :String:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/populating-next-right-pointers-in-each-node/][116. Populating Next Right Pointers in Each Node]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/populating-next-right-pointers-in-each-node-ii/][117. Populating Next Right Pointers in Each Node II]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/pascals-triangle/][118. Pascal's Triangle]] :Array:
** TODO [[https://leetcode-cn.com/problems/pascals-triangle-ii/][119. Pascal's Triangle II]] :Array:
** TODO [[https://leetcode-cn.com/problems/triangle/][120. Triangle]] :Array:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/][121. Best Time to Buy and Sell Stock]] :Array:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-ii/][122. Best Time to Buy and Sell Stock II]] :Greedy:Array:
** TODO [[https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iii/][123. Best Time to Buy and Sell Stock III]] :Array:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/binary-tree-maximum-path-sum/][124. Binary Tree Maximum Path Sum]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/valid-palindrome/][125. Valid Palindrome]] :TwoPointers:String:
** TODO [[https://leetcode-cn.com/problems/word-ladder-ii/][126. Word Ladder II]] :BreadthfirstSearch:Array:String:Backtracking:
** TODO [[https://leetcode-cn.com/problems/word-ladder/][127. Word Ladder]] :BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/longest-consecutive-sequence/][128. Longest Consecutive Sequence]] :UnionFind:Array:
** TODO [[https://leetcode-cn.com/problems/sum-root-to-leaf-numbers/][129. Sum Root to Leaf Numbers]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/surrounded-regions/][130. Surrounded Regions]] :DepthfirstSearch:BreadthfirstSearch:UnionFind:
** TODO [[https://leetcode-cn.com/problems/palindrome-partitioning/][131. Palindrome Partitioning]] :Backtracking:
** TODO [[https://leetcode-cn.com/problems/palindrome-partitioning-ii/][132. Palindrome Partitioning II]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/clone-graph/][133. Clone Graph]] :DepthfirstSearch:BreadthfirstSearch:Graph:
** TODO [[https://leetcode-cn.com/problems/gas-station/][134. Gas Station]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/candy/][135. Candy]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/single-number/][136. Single Number]] :BitManipulation:HashTable:
** TODO [[https://leetcode-cn.com/problems/single-number-ii/][137. Single Number II]] :BitManipulation:
** TODO [[https://leetcode-cn.com/problems/copy-list-with-random-pointer/][138. Copy List with Random Pointer]] :HashTable:LinkedList:
** TODO [[https://leetcode-cn.com/problems/word-break/][139. Word Break]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/word-break-ii/][140. Word Break II]] :DynamicProgramming:Backtracking:
** TODO [[https://leetcode-cn.com/problems/linked-list-cycle/][141. Linked List Cycle]] :LinkedList:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/linked-list-cycle-ii/][142. Linked List Cycle II]] :LinkedList:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/reorder-list/][143. Reorder List]] :LinkedList:
** TODO [[https://leetcode-cn.com/problems/binary-tree-preorder-traversal/][144. Binary Tree Preorder Traversal]] :Stack:Tree:
** TODO [[https://leetcode-cn.com/problems/binary-tree-postorder-traversal/][145. Binary Tree Postorder Traversal]] :Stack:Tree:
** TODO [[https://leetcode-cn.com/problems/lru-cache/][146. LRU Cache]] :Design:
** TODO [[https://leetcode-cn.com/problems/insertion-sort-list/][147. Insertion Sort List]] :Sort:LinkedList:
** TODO [[https://leetcode-cn.com/problems/sort-list/][148. Sort List]] :Sort:LinkedList:
** TODO [[https://leetcode-cn.com/problems/max-points-on-a-line/][149. Max Points on a Line]] :HashTable:Math:
** TODO [[https://leetcode-cn.com/problems/evaluate-reverse-polish-notation/][150. Evaluate Reverse Polish Notation]] :Stack:
** TODO [[https://leetcode-cn.com/problems/reverse-words-in-a-string/][151. Reverse Words in a String]] :String:
** TODO [[https://leetcode-cn.com/problems/maximum-product-subarray/][152. Maximum Product Subarray]] :Array:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array/][153. Find Minimum in Rotated Sorted Array]] :Array:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array-ii/][154. Find Minimum in Rotated Sorted Array II]] :Array:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/min-stack/][155. Min Stack]] :Stack:Design:
** TODO [[https://leetcode-cn.com/problems/binary-tree-upside-down/][156. Binary Tree Upside Down]] :Tree:
** TODO [[https://leetcode-cn.com/problems/read-n-characters-given-read4/][157. Read N Characters Given Read4]] :String:
** TODO [[https://leetcode-cn.com/problems/read-n-characters-given-read4-ii-call-multiple-times/][158. Read N Characters Given Read4 II - Call multiple times]] :String:
** TODO [[https://leetcode-cn.com/problems/longest-substring-with-at-most-two-distinct-characters/][159. Longest Substring with At Most Two Distinct Characters]] :HashTable:TwoPointers:String:SlidingWindow:
** TODO [[https://leetcode-cn.com/problems/intersection-of-two-linked-lists/][160. Intersection of Two Linked Lists]] :LinkedList:
** TODO [[https://leetcode-cn.com/problems/one-edit-distance/][161. One Edit Distance]] :String:
** TODO [[https://leetcode-cn.com/problems/find-peak-element/][162. Find Peak Element]] :Array:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/missing-ranges/][163. Missing Ranges]] :Array:
** TODO [[https://leetcode-cn.com/problems/maximum-gap/][164. Maximum Gap]] :Sort:
** TODO [[https://leetcode-cn.com/problems/compare-version-numbers/][165. Compare Version Numbers]] :String:
** TODO [[https://leetcode-cn.com/problems/fraction-to-recurring-decimal/][166. Fraction to Recurring Decimal]] :HashTable:Math:
** TODO [[https://leetcode-cn.com/problems/two-sum-ii-input-array-is-sorted/][167. Two Sum II - Input array is sorted]] :Array:TwoPointers:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/excel-sheet-column-title/][168. Excel Sheet Column Title]] :Math:
** TODO [[https://leetcode-cn.com/problems/majority-element/][169. Majority Element]] :BitManipulation:Array:DivideandConquer:
** TODO [[https://leetcode-cn.com/problems/two-sum-iii-data-structure-design/][170. Two Sum III - Data structure design]] :Design:HashTable:
** TODO [[https://leetcode-cn.com/problems/excel-sheet-column-number/][171. Excel Sheet Column Number]] :Math:
** TODO [[https://leetcode-cn.com/problems/factorial-trailing-zeroes/][172. Factorial Trailing Zeroes]] :Math:
** TODO [[https://leetcode-cn.com/problems/binary-search-tree-iterator/][173. Binary Search Tree Iterator]] :Stack:Tree:Design:
** TODO [[https://leetcode-cn.com/problems/dungeon-game/][174. Dungeon Game]] :BinarySearch:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/combine-two-tables/][175. Combine Two Tables]] 
** TODO [[https://leetcode-cn.com/problems/second-highest-salary/][176. Second Highest Salary]] 
** TODO [[https://leetcode-cn.com/problems/nth-highest-salary/][177. Nth Highest Salary]] 
** TODO [[https://leetcode-cn.com/problems/rank-scores/][178. Rank Scores]] 
** TODO [[https://leetcode-cn.com/problems/largest-number/][179. Largest Number]] :Sort:
** TODO [[https://leetcode-cn.com/problems/consecutive-numbers/][180. Consecutive Numbers]] 
** TODO [[https://leetcode-cn.com/problems/employees-earning-more-than-their-managers/][181. Employees Earning More Than Their Managers]] 
** TODO [[https://leetcode-cn.com/problems/duplicate-emails/][182. Duplicate Emails]] 
** TODO [[https://leetcode-cn.com/problems/customers-who-never-order/][183. Customers Who Never Order]] 
** TODO [[https://leetcode-cn.com/problems/department-highest-salary/][184. Department Highest Salary]] 
** TODO [[https://leetcode-cn.com/problems/department-top-three-salaries/][185. Department Top Three Salaries]] 
** TODO [[https://leetcode-cn.com/problems/reverse-words-in-a-string-ii/][186. Reverse Words in a String II]] :String:
** TODO [[https://leetcode-cn.com/problems/repeated-dna-sequences/][187. Repeated DNA Sequences]] :BitManipulation:HashTable:
** TODO [[https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iv/][188. Best Time to Buy and Sell Stock IV]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/rotate-array/][189. Rotate Array]] :Array:
** TODO [[https://leetcode-cn.com/problems/reverse-bits/][190. Reverse Bits]] :BitManipulation:
** TODO [[https://leetcode-cn.com/problems/number-of-1-bits/][191. Number of 1 Bits]] :BitManipulation:
** TODO [[https://leetcode-cn.com/problems/word-frequency/][192. Word Frequency]] 
** TODO [[https://leetcode-cn.com/problems/valid-phone-numbers/][193. Valid Phone Numbers]] 
** TODO [[https://leetcode-cn.com/problems/transpose-file/][194. Transpose File]] 
** TODO [[https://leetcode-cn.com/problems/tenth-line/][195. Tenth Line]] 
** TODO [[https://leetcode-cn.com/problems/delete-duplicate-emails/][196. Delete Duplicate Emails]] 
** TODO [[https://leetcode-cn.com/problems/rising-temperature/][197. Rising Temperature]] 
** TODO [[https://leetcode-cn.com/problems/house-robber/][198. House Robber]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/binary-tree-right-side-view/][199. Binary Tree Right Side View]] :Tree:DepthfirstSearch:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/number-of-islands/][200. Number of Islands]] :DepthfirstSearch:BreadthfirstSearch:UnionFind:
** TODO [[https://leetcode-cn.com/problems/bitwise-and-of-numbers-range/][201. Bitwise AND of Numbers Range]] :BitManipulation:
** TODO [[https://leetcode-cn.com/problems/happy-number/][202. Happy Number]] :HashTable:Math:
** TODO [[https://leetcode-cn.com/problems/remove-linked-list-elements/][203. Remove Linked List Elements]] :LinkedList:
** TODO [[https://leetcode-cn.com/problems/count-primes/][204. Count Primes]] :HashTable:Math:
** TODO [[https://leetcode-cn.com/problems/isomorphic-strings/][205. Isomorphic Strings]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/reverse-linked-list/][206. Reverse Linked List]] :LinkedList:
** TODO [[https://leetcode-cn.com/problems/course-schedule/][207. Course Schedule]] :DepthfirstSearch:BreadthfirstSearch:Graph:TopologicalSort:
** TODO [[https://leetcode-cn.com/problems/implement-trie-prefix-tree/][208. Implement Trie (Prefix Tree)]] :Design:Trie:
** TODO [[https://leetcode-cn.com/problems/minimum-size-subarray-sum/][209. Minimum Size Subarray Sum]] :Array:TwoPointers:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/course-schedule-ii/][210. Course Schedule II]] :DepthfirstSearch:BreadthfirstSearch:Graph:TopologicalSort:
** TODO [[https://leetcode-cn.com/problems/design-add-and-search-words-data-structure/][211. Design Add and Search Words Data Structure]] :Design:Trie:Backtracking:
** TODO [[https://leetcode-cn.com/problems/word-search-ii/][212. Word Search II]] :Trie:Backtracking:
** TODO [[https://leetcode-cn.com/problems/house-robber-ii/][213. House Robber II]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/shortest-palindrome/][214. Shortest Palindrome]] :String:
** TODO [[https://leetcode-cn.com/problems/kth-largest-element-in-an-array/][215. Kth Largest Element in an Array]] :Heap:DivideandConquer:
** TODO [[https://leetcode-cn.com/problems/combination-sum-iii/][216. Combination Sum III]] :Array:Backtracking:
** TODO [[https://leetcode-cn.com/problems/contains-duplicate/][217. Contains Duplicate]] :Array:HashTable:
** TODO [[https://leetcode-cn.com/problems/the-skyline-problem/][218. The Skyline Problem]] :Heap:BinaryIndexedTree:SegmentTree:DivideandConquer:LineSweep:
** TODO [[https://leetcode-cn.com/problems/contains-duplicate-ii/][219. Contains Duplicate II]] :Array:HashTable:
** TODO [[https://leetcode-cn.com/problems/contains-duplicate-iii/][220. Contains Duplicate III]] :Sort:OrderedMap:
** TODO [[https://leetcode-cn.com/problems/maximal-square/][221. Maximal Square]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/count-complete-tree-nodes/][222. Count Complete Tree Nodes]] :Tree:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/rectangle-area/][223. Rectangle Area]] :Math:
** TODO [[https://leetcode-cn.com/problems/basic-calculator/][224. Basic Calculator]] :Stack:Math:
** TODO [[https://leetcode-cn.com/problems/implement-stack-using-queues/][225. Implement Stack using Queues]] :Stack:Design:
** TODO [[https://leetcode-cn.com/problems/invert-binary-tree/][226. Invert Binary Tree]] :Tree:
** TODO [[https://leetcode-cn.com/problems/basic-calculator-ii/][227. Basic Calculator II]] :String:
** TODO [[https://leetcode-cn.com/problems/summary-ranges/][228. Summary Ranges]] :Array:
** TODO [[https://leetcode-cn.com/problems/majority-element-ii/][229. Majority Element II]] :Array:
** TODO [[https://leetcode-cn.com/problems/kth-smallest-element-in-a-bst/][230. Kth Smallest Element in a BST]] :Tree:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/power-of-two/][231. Power of Two]] :BitManipulation:Math:
** TODO [[https://leetcode-cn.com/problems/implement-queue-using-stacks/][232. Implement Queue using Stacks]] :Stack:Design:
** TODO [[https://leetcode-cn.com/problems/number-of-digit-one/][233. Number of Digit One]] :Math:
** TODO [[https://leetcode-cn.com/problems/palindrome-linked-list/][234. Palindrome Linked List]] :LinkedList:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-search-tree/][235. Lowest Common Ancestor of a Binary Search Tree]] :Tree:
** TODO [[https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-tree/][236. Lowest Common Ancestor of a Binary Tree]] :Tree:
** TODO [[https://leetcode-cn.com/problems/delete-node-in-a-linked-list/][237. Delete Node in a Linked List]] :LinkedList:
** TODO [[https://leetcode-cn.com/problems/product-of-array-except-self/][238. Product of Array Except Self]] :Array:
** TODO [[https://leetcode-cn.com/problems/sliding-window-maximum/][239. Sliding Window Maximum]] :Heap:SlidingWindow:
** TODO [[https://leetcode-cn.com/problems/search-a-2d-matrix-ii/][240. Search a 2D Matrix II]] :BinarySearch:DivideandConquer:
** TODO [[https://leetcode-cn.com/problems/different-ways-to-add-parentheses/][241. Different Ways to Add Parentheses]] :DivideandConquer:
** TODO [[https://leetcode-cn.com/problems/valid-anagram/][242. Valid Anagram]] :Sort:HashTable:
** TODO [[https://leetcode-cn.com/problems/shortest-word-distance/][243. Shortest Word Distance]] :Array:
** TODO [[https://leetcode-cn.com/problems/shortest-word-distance-ii/][244. Shortest Word Distance II]] :Design:HashTable:
** TODO [[https://leetcode-cn.com/problems/shortest-word-distance-iii/][245. Shortest Word Distance III]] :Array:
** TODO [[https://leetcode-cn.com/problems/strobogrammatic-number/][246. Strobogrammatic Number]] :HashTable:Math:
** TODO [[https://leetcode-cn.com/problems/strobogrammatic-number-ii/][247. Strobogrammatic Number II]] :Recursion:Math:
** TODO [[https://leetcode-cn.com/problems/strobogrammatic-number-iii/][248. Strobogrammatic Number III]] :Recursion:Math:
** TODO [[https://leetcode-cn.com/problems/group-shifted-strings/][249. Group Shifted Strings]] :HashTable:String:
** TODO [[https://leetcode-cn.com/problems/count-univalue-subtrees/][250. Count Univalue Subtrees]] :Tree:
** TODO [[https://leetcode-cn.com/problems/flatten-2d-vector/][251. Flatten 2D Vector]] :Design:
** TODO [[https://leetcode-cn.com/problems/meeting-rooms/][252. Meeting Rooms]] :Sort:
** TODO [[https://leetcode-cn.com/problems/meeting-rooms-ii/][253. Meeting Rooms II]] :Heap:Greedy:Sort:
** TODO [[https://leetcode-cn.com/problems/factor-combinations/][254. Factor Combinations]] :Backtracking:
** TODO [[https://leetcode-cn.com/problems/verify-preorder-sequence-in-binary-search-tree/][255. Verify Preorder Sequence in Binary Search Tree]] :Stack:Tree:
** TODO [[https://leetcode-cn.com/problems/paint-house/][256. Paint House]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/binary-tree-paths/][257. Binary Tree Paths]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/add-digits/][258. Add Digits]] :Math:
** TODO [[https://leetcode-cn.com/problems/3sum-smaller/][259. 3Sum Smaller]] :Array:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/single-number-iii/][260. Single Number III]] :BitManipulation:
** TODO [[https://leetcode-cn.com/problems/graph-valid-tree/][261. Graph Valid Tree]] :DepthfirstSearch:BreadthfirstSearch:UnionFind:Graph:
** TODO [[https://leetcode-cn.com/problems/trips-and-users/][262. Trips and Users]] 
** TODO [[https://leetcode-cn.com/problems/ugly-number/][263. Ugly Number]] :Math:
** TODO [[https://leetcode-cn.com/problems/ugly-number-ii/][264. Ugly Number II]] :Heap:Math:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/paint-house-ii/][265. Paint House II]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/palindrome-permutation/][266. Palindrome Permutation]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/palindrome-permutation-ii/][267. Palindrome Permutation II]] :Backtracking:
** TODO [[https://leetcode-cn.com/problems/missing-number/][268. Missing Number]] :BitManipulation:Array:Math:
** TODO [[https://leetcode-cn.com/problems/alien-dictionary/][269. Alien Dictionary]] :Graph:TopologicalSort:
** TODO [[https://leetcode-cn.com/problems/closest-binary-search-tree-value/][270. Closest Binary Search Tree Value]] :Tree:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/encode-and-decode-strings/][271. Encode and Decode Strings]] :String:
** TODO [[https://leetcode-cn.com/problems/closest-binary-search-tree-value-ii/][272. Closest Binary Search Tree Value II]] :Stack:Tree:
** TODO [[https://leetcode-cn.com/problems/integer-to-english-words/][273. Integer to English Words]] :Math:String:
** TODO [[https://leetcode-cn.com/problems/h-index/][274. H-Index]] :Sort:HashTable:
** TODO [[https://leetcode-cn.com/problems/h-index-ii/][275. H-Index II]] :BinarySearch:
** TODO [[https://leetcode-cn.com/problems/paint-fence/][276. Paint Fence]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/find-the-celebrity/][277. Find the Celebrity]] :Array:
** TODO [[https://leetcode-cn.com/problems/first-bad-version/][278. First Bad Version]] :BinarySearch:
** TODO [[https://leetcode-cn.com/problems/perfect-squares/][279. Perfect Squares]] :BreadthfirstSearch:Math:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/wiggle-sort/][280. Wiggle Sort]] :Sort:Array:
** TODO [[https://leetcode-cn.com/problems/zigzag-iterator/][281. Zigzag Iterator]] :Design:
** TODO [[https://leetcode-cn.com/problems/expression-add-operators/][282. Expression Add Operators]] :DivideandConquer:
** TODO [[https://leetcode-cn.com/problems/move-zeroes/][283. Move Zeroes]] :Array:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/peeking-iterator/][284. Peeking Iterator]] :Design:
** TODO [[https://leetcode-cn.com/problems/inorder-successor-in-bst/][285. Inorder Successor in BST]] :Tree:
** TODO [[https://leetcode-cn.com/problems/walls-and-gates/][286. Walls and Gates]] :BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/find-the-duplicate-number/][287. Find the Duplicate Number]] :Array:TwoPointers:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/unique-word-abbreviation/][288. Unique Word Abbreviation]] :Design:HashTable:
** TODO [[https://leetcode-cn.com/problems/game-of-life/][289. Game of Life]] :Array:
** TODO [[https://leetcode-cn.com/problems/word-pattern/][290. Word Pattern]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/word-pattern-ii/][291. Word Pattern II]] :Backtracking:
** TODO [[https://leetcode-cn.com/problems/nim-game/][292. Nim Game]] :Brainteaser:Minimax:
** TODO [[https://leetcode-cn.com/problems/flip-game/][293. Flip Game]] :String:
** TODO [[https://leetcode-cn.com/problems/flip-game-ii/][294. Flip Game II]] :Minimax:Backtracking:
** TODO [[https://leetcode-cn.com/problems/find-median-from-data-stream/][295. Find Median from Data Stream]] :Heap:Design:
** TODO [[https://leetcode-cn.com/problems/best-meeting-point/][296. Best Meeting Point]] :Sort:Math:
** TODO [[https://leetcode-cn.com/problems/serialize-and-deserialize-binary-tree/][297. Serialize and Deserialize Binary Tree]] :Tree:Design:
** TODO [[https://leetcode-cn.com/problems/binary-tree-longest-consecutive-sequence/][298. Binary Tree Longest Consecutive Sequence]] :Tree:
** TODO [[https://leetcode-cn.com/problems/bulls-and-cows/][299. Bulls and Cows]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/longest-increasing-subsequence/][300. Longest Increasing Subsequence]] :BinarySearch:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/remove-invalid-parentheses/][301. Remove Invalid Parentheses]] :DepthfirstSearch:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/smallest-rectangle-enclosing-black-pixels/][302. Smallest Rectangle Enclosing Black Pixels]] :BinarySearch:
** TODO [[https://leetcode-cn.com/problems/range-sum-query-immutable/][303. Range Sum Query - Immutable]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/range-sum-query-2d-immutable/][304. Range Sum Query 2D - Immutable]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/number-of-islands-ii/][305. Number of Islands II]] :UnionFind:
** TODO [[https://leetcode-cn.com/problems/additive-number/][306. Additive Number]] :Backtracking:
** TODO [[https://leetcode-cn.com/problems/range-sum-query-mutable/][307. Range Sum Query - Mutable]] :BinaryIndexedTree:SegmentTree:
** TODO [[https://leetcode-cn.com/problems/range-sum-query-2d-mutable/][308. Range Sum Query 2D - Mutable]] :BinaryIndexedTree:SegmentTree:
** TODO [[https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/][309. Best Time to Buy and Sell Stock with Cooldown]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/minimum-height-trees/][310. Minimum Height Trees]] :BreadthfirstSearch:Graph:
** TODO [[https://leetcode-cn.com/problems/sparse-matrix-multiplication/][311. Sparse Matrix Multiplication]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/burst-balloons/][312. Burst Balloons]] :DivideandConquer:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/super-ugly-number/][313. Super Ugly Number]] :Heap:Math:
** TODO [[https://leetcode-cn.com/problems/binary-tree-vertical-order-traversal/][314. Binary Tree Vertical Order Traversal]] :DepthfirstSearch:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/count-of-smaller-numbers-after-self/][315. Count of Smaller Numbers After Self]] :Sort:BinaryIndexedTree:SegmentTree:BinarySearch:DivideandConquer:
** TODO [[https://leetcode-cn.com/problems/remove-duplicate-letters/][316. Remove Duplicate Letters]] :Stack:Greedy:String:
** TODO [[https://leetcode-cn.com/problems/shortest-distance-from-all-buildings/][317. Shortest Distance from All Buildings]] :BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/maximum-product-of-word-lengths/][318. Maximum Product of Word Lengths]] :BitManipulation:
** TODO [[https://leetcode-cn.com/problems/bulb-switcher/][319. Bulb Switcher]] :Brainteaser:Math:
** TODO [[https://leetcode-cn.com/problems/generalized-abbreviation/][320. Generalized Abbreviation]] :BitManipulation:Backtracking:
** TODO [[https://leetcode-cn.com/problems/create-maximum-number/][321. Create Maximum Number]] :Greedy:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/coin-change/][322. Coin Change]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/number-of-connected-components-in-an-undirected-graph/][323. Number of Connected Components in an Undirected Graph]] :DepthfirstSearch:BreadthfirstSearch:UnionFind:Graph:
** TODO [[https://leetcode-cn.com/problems/wiggle-sort-ii/][324. Wiggle Sort II]] :Sort:
** TODO [[https://leetcode-cn.com/problems/maximum-size-subarray-sum-equals-k/][325. Maximum Size Subarray Sum Equals k]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/power-of-three/][326. Power of Three]] :Math:
** TODO [[https://leetcode-cn.com/problems/count-of-range-sum/][327. Count of Range Sum]] :Sort:BinaryIndexedTree:SegmentTree:BinarySearch:DivideandConquer:
** TODO [[https://leetcode-cn.com/problems/odd-even-linked-list/][328. Odd Even Linked List]] :LinkedList:
** TODO [[https://leetcode-cn.com/problems/longest-increasing-path-in-a-matrix/][329. Longest Increasing Path in a Matrix]] :DepthfirstSearch:TopologicalSort:Memoization:
** TODO [[https://leetcode-cn.com/problems/patching-array/][330. Patching Array]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/verify-preorder-serialization-of-a-binary-tree/][331. Verify Preorder Serialization of a Binary Tree]] :Stack:
** TODO [[https://leetcode-cn.com/problems/reconstruct-itinerary/][332. Reconstruct Itinerary]] :DepthfirstSearch:Graph:
** TODO [[https://leetcode-cn.com/problems/largest-bst-subtree/][333. Largest BST Subtree]] :Tree:
** TODO [[https://leetcode-cn.com/problems/increasing-triplet-subsequence/][334. Increasing Triplet Subsequence]] 
** TODO [[https://leetcode-cn.com/problems/self-crossing/][335. Self Crossing]] :Math:
** TODO [[https://leetcode-cn.com/problems/palindrome-pairs/][336. Palindrome Pairs]] :Trie:HashTable:String:
** TODO [[https://leetcode-cn.com/problems/house-robber-iii/][337. House Robber III]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/counting-bits/][338. Counting Bits]] :BitManipulation:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/nested-list-weight-sum/][339. Nested List Weight Sum]] :DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/longest-substring-with-at-most-k-distinct-characters/][340. Longest Substring with At Most K Distinct Characters]] :HashTable:String:SlidingWindow:
** TODO [[https://leetcode-cn.com/problems/flatten-nested-list-iterator/][341. Flatten Nested List Iterator]] :Stack:Design:
** TODO [[https://leetcode-cn.com/problems/power-of-four/][342. Power of Four]] :BitManipulation:
** TODO [[https://leetcode-cn.com/problems/integer-break/][343. Integer Break]] :Math:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/reverse-string/][344. Reverse String]] :TwoPointers:String:
** TODO [[https://leetcode-cn.com/problems/reverse-vowels-of-a-string/][345. Reverse Vowels of a String]] :TwoPointers:String:
** TODO [[https://leetcode-cn.com/problems/moving-average-from-data-stream/][346. Moving Average from Data Stream]] :Design:Queue:
** TODO [[https://leetcode-cn.com/problems/top-k-frequent-elements/][347. Top K Frequent Elements]] :Heap:HashTable:
** TODO [[https://leetcode-cn.com/problems/design-tic-tac-toe/][348. Design Tic-Tac-Toe]] :Design:
** TODO [[https://leetcode-cn.com/problems/intersection-of-two-arrays/][349. Intersection of Two Arrays]] :Sort:HashTable:TwoPointers:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/intersection-of-two-arrays-ii/][350. Intersection of Two Arrays II]] :Sort:HashTable:TwoPointers:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/android-unlock-patterns/][351. Android Unlock Patterns]] :DynamicProgramming:Backtracking:
** TODO [[https://leetcode-cn.com/problems/data-stream-as-disjoint-intervals/][352. Data Stream as Disjoint Intervals]] :BinarySearch:OrderedMap:
** TODO [[https://leetcode-cn.com/problems/design-snake-game/][353. Design Snake Game]] :Design:Queue:
** TODO [[https://leetcode-cn.com/problems/russian-doll-envelopes/][354. Russian Doll Envelopes]] :BinarySearch:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/design-twitter/][355. Design Twitter]] :Heap:Design:HashTable:
** TODO [[https://leetcode-cn.com/problems/line-reflection/][356. Line Reflection]] :HashTable:Math:
** TODO [[https://leetcode-cn.com/problems/count-numbers-with-unique-digits/][357. Count Numbers with Unique Digits]] :Math:DynamicProgramming:Backtracking:
** TODO [[https://leetcode-cn.com/problems/rearrange-string-k-distance-apart/][358. Rearrange String k Distance Apart]] :Heap:Greedy:HashTable:
** TODO [[https://leetcode-cn.com/problems/logger-rate-limiter/][359. Logger Rate Limiter]] :Design:HashTable:
** TODO [[https://leetcode-cn.com/problems/sort-transformed-array/][360. Sort Transformed Array]] :Math:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/bomb-enemy/][361. Bomb Enemy]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/design-hit-counter/][362. Design Hit Counter]] :Design:
** TODO [[https://leetcode-cn.com/problems/max-sum-of-rectangle-no-larger-than-k/][363. Max Sum of Rectangle No Larger Than K]] :Queue:BinarySearch:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/nested-list-weight-sum-ii/][364. Nested List Weight Sum II]] :DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/water-and-jug-problem/][365. Water and Jug Problem]] :Math:
** TODO [[https://leetcode-cn.com/problems/find-leaves-of-binary-tree/][366. Find Leaves of Binary Tree]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/valid-perfect-square/][367. Valid Perfect Square]] :Math:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/largest-divisible-subset/][368. Largest Divisible Subset]] :Math:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/plus-one-linked-list/][369. Plus One Linked List]] :LinkedList:
** TODO [[https://leetcode-cn.com/problems/range-addition/][370. Range Addition]] :Array:
** TODO [[https://leetcode-cn.com/problems/sum-of-two-integers/][371. Sum of Two Integers]] :BitManipulation:
** TODO [[https://leetcode-cn.com/problems/super-pow/][372. Super Pow]] :Math:
** TODO [[https://leetcode-cn.com/problems/find-k-pairs-with-smallest-sums/][373. Find K Pairs with Smallest Sums]] :Heap:
** TODO [[https://leetcode-cn.com/problems/guess-number-higher-or-lower/][374. Guess Number Higher or Lower]] :BinarySearch:
** TODO [[https://leetcode-cn.com/problems/guess-number-higher-or-lower-ii/][375. Guess Number Higher or Lower II]] :Minimax:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/wiggle-subsequence/][376. Wiggle Subsequence]] :Greedy:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/combination-sum-iv/][377. Combination Sum IV]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/kth-smallest-element-in-a-sorted-matrix/][378. Kth Smallest Element in a Sorted Matrix]] :Heap:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/design-phone-directory/][379. Design Phone Directory]] :Design:LinkedList:
** TODO [[https://leetcode-cn.com/problems/insert-delete-getrandom-o1/][380. Insert Delete GetRandom O(1)]] :Design:Array:HashTable:
** TODO [[https://leetcode-cn.com/problems/insert-delete-getrandom-o1-duplicates-allowed/][381. Insert Delete GetRandom O(1) - Duplicates allowed]] :Design:Array:HashTable:
** TODO [[https://leetcode-cn.com/problems/linked-list-random-node/][382. Linked List Random Node]] :ReservoirSampling:
** TODO [[https://leetcode-cn.com/problems/ransom-note/][383. Ransom Note]] :String:
** TODO [[https://leetcode-cn.com/problems/shuffle-an-array/][384. Shuffle an Array]] 
** TODO [[https://leetcode-cn.com/problems/mini-parser/][385. Mini Parser]] :Stack:String:
** TODO [[https://leetcode-cn.com/problems/lexicographical-numbers/][386. Lexicographical Numbers]] 
** TODO [[https://leetcode-cn.com/problems/first-unique-character-in-a-string/][387. First Unique Character in a String]] :HashTable:String:
** TODO [[https://leetcode-cn.com/problems/longest-absolute-file-path/][388. Longest Absolute File Path]] 
** TODO [[https://leetcode-cn.com/problems/find-the-difference/][389. Find the Difference]] :BitManipulation:HashTable:
** TODO [[https://leetcode-cn.com/problems/elimination-game/][390. Elimination Game]] 
** TODO [[https://leetcode-cn.com/problems/perfect-rectangle/][391. Perfect Rectangle]] :LineSweep:
** TODO [[https://leetcode-cn.com/problems/is-subsequence/][392. Is Subsequence]] :Greedy:BinarySearch:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/utf-8-validation/][393. UTF-8 Validation]] :BitManipulation:
** TODO [[https://leetcode-cn.com/problems/decode-string/][394. Decode String]] :Stack:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/longest-substring-with-at-least-k-repeating-characters/][395. Longest Substring with At Least K Repeating Characters]] 
** TODO [[https://leetcode-cn.com/problems/rotate-function/][396. Rotate Function]] :Math:
** TODO [[https://leetcode-cn.com/problems/integer-replacement/][397. Integer Replacement]] :BitManipulation:Math:
** TODO [[https://leetcode-cn.com/problems/random-pick-index/][398. Random Pick Index]] :ReservoirSampling:
** TODO [[https://leetcode-cn.com/problems/evaluate-division/][399. Evaluate Division]] :UnionFind:Graph:
** TODO [[https://leetcode-cn.com/problems/nth-digit/][400. Nth Digit]] :Math:
** TODO [[https://leetcode-cn.com/problems/binary-watch/][401. Binary Watch]] :BitManipulation:Backtracking:
** TODO [[https://leetcode-cn.com/problems/remove-k-digits/][402. Remove K Digits]] :Stack:Greedy:
** TODO [[https://leetcode-cn.com/problems/frog-jump/][403. Frog Jump]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/sum-of-left-leaves/][404. Sum of Left Leaves]] :Tree:
** TODO [[https://leetcode-cn.com/problems/convert-a-number-to-hexadecimal/][405. Convert a Number to Hexadecimal]] :BitManipulation:
** TODO [[https://leetcode-cn.com/problems/queue-reconstruction-by-height/][406. Queue Reconstruction by Height]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/trapping-rain-water-ii/][407. Trapping Rain Water II]] :Heap:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/valid-word-abbreviation/][408. Valid Word Abbreviation]] :String:
** TODO [[https://leetcode-cn.com/problems/longest-palindrome/][409. Longest Palindrome]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/split-array-largest-sum/][410. Split Array Largest Sum]] :BinarySearch:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/minimum-unique-word-abbreviation/][411. Minimum Unique Word Abbreviation]] :BitManipulation:Backtracking:
** TODO [[https://leetcode-cn.com/problems/fizz-buzz/][412. Fizz Buzz]] 
** TODO [[https://leetcode-cn.com/problems/arithmetic-slices/][413. Arithmetic Slices]] :Math:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/third-maximum-number/][414. Third Maximum Number]] :Array:
** TODO [[https://leetcode-cn.com/problems/add-strings/][415. Add Strings]] :String:
** TODO [[https://leetcode-cn.com/problems/partition-equal-subset-sum/][416. Partition Equal Subset Sum]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/pacific-atlantic-water-flow/][417. Pacific Atlantic Water Flow]] :DepthfirstSearch:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/sentence-screen-fitting/][418. Sentence Screen Fitting]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/battleships-in-a-board/][419. Battleships in a Board]] 
** TODO [[https://leetcode-cn.com/problems/strong-password-checker/][420. Strong Password Checker]] 
** TODO [[https://leetcode-cn.com/problems/maximum-xor-of-two-numbers-in-an-array/][421. Maximum XOR of Two Numbers in an Array]] :BitManipulation:Trie:
** TODO [[https://leetcode-cn.com/problems/valid-word-square/][422. Valid Word Square]] 
** TODO [[https://leetcode-cn.com/problems/reconstruct-original-digits-from-english/][423. Reconstruct Original Digits from English]] :Math:
** TODO [[https://leetcode-cn.com/problems/longest-repeating-character-replacement/][424. Longest Repeating Character Replacement]] :TwoPointers:SlidingWindow:
** TODO [[https://leetcode-cn.com/problems/word-squares/][425. Word Squares]] :Trie:Backtracking:
** TODO [[https://leetcode-cn.com/problems/all-oone-data-structure/][432. All O`one Data Structure]] :Design:
** TODO [[https://leetcode-cn.com/problems/minimum-genetic-mutation/][433. Minimum Genetic Mutation]] 
** TODO [[https://leetcode-cn.com/problems/number-of-segments-in-a-string/][434. Number of Segments in a String]] :String:
** TODO [[https://leetcode-cn.com/problems/non-overlapping-intervals/][435. Non-overlapping Intervals]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/find-right-interval/][436. Find Right Interval]] :BinarySearch:
** TODO [[https://leetcode-cn.com/problems/path-sum-iii/][437. Path Sum III]] :Tree:
** TODO [[https://leetcode-cn.com/problems/find-all-anagrams-in-a-string/][438. Find All Anagrams in a String]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/ternary-expression-parser/][439. Ternary Expression Parser]] :Stack:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/k-th-smallest-in-lexicographical-order/][440. K-th Smallest in Lexicographical Order]] 
** TODO [[https://leetcode-cn.com/problems/arranging-coins/][441. Arranging Coins]] :Math:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/find-all-duplicates-in-an-array/][442. Find All Duplicates in an Array]] :Array:
** TODO [[https://leetcode-cn.com/problems/string-compression/][443. String Compression]] :String:
** TODO [[https://leetcode-cn.com/problems/sequence-reconstruction/][444. Sequence Reconstruction]] :Graph:TopologicalSort:
** TODO [[https://leetcode-cn.com/problems/add-two-numbers-ii/][445. Add Two Numbers II]] :LinkedList:
** TODO [[https://leetcode-cn.com/problems/arithmetic-slices-ii-subsequence/][446. Arithmetic Slices II - Subsequence]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/number-of-boomerangs/][447. Number of Boomerangs]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/find-all-numbers-disappeared-in-an-array/][448. Find All Numbers Disappeared in an Array]] :Array:
** TODO [[https://leetcode-cn.com/problems/serialize-and-deserialize-bst/][449. Serialize and Deserialize BST]] :Tree:
** TODO [[https://leetcode-cn.com/problems/delete-node-in-a-bst/][450. Delete Node in a BST]] :Tree:
** TODO [[https://leetcode-cn.com/problems/sort-characters-by-frequency/][451. Sort Characters By Frequency]] :Heap:HashTable:
** TODO [[https://leetcode-cn.com/problems/minimum-number-of-arrows-to-burst-balloons/][452. Minimum Number of Arrows to Burst Balloons]] :Greedy:Sort:
** TODO [[https://leetcode-cn.com/problems/minimum-moves-to-equal-array-elements/][453. Minimum Moves to Equal Array Elements]] :Math:
** TODO [[https://leetcode-cn.com/problems/4sum-ii/][454. 4Sum II]] :HashTable:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/assign-cookies/][455. Assign Cookies]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/132-pattern/][456. 132 Pattern]] :Stack:
** TODO [[https://leetcode-cn.com/problems/circular-array-loop/][457. Circular Array Loop]] :Array:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/poor-pigs/][458. Poor Pigs]] :Math:
** TODO [[https://leetcode-cn.com/problems/repeated-substring-pattern/][459. Repeated Substring Pattern]] :String:
** TODO [[https://leetcode-cn.com/problems/lfu-cache/][460. LFU Cache]] :Design:
** TODO [[https://leetcode-cn.com/problems/hamming-distance/][461. Hamming Distance]] :BitManipulation:
** TODO [[https://leetcode-cn.com/problems/minimum-moves-to-equal-array-elements-ii/][462. Minimum Moves to Equal Array Elements II]] :Math:
** TODO [[https://leetcode-cn.com/problems/island-perimeter/][463. Island Perimeter]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/can-i-win/][464. Can I Win]] :Minimax:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/optimal-account-balancing/][465. Optimal Account Balancing]] 
** TODO [[https://leetcode-cn.com/problems/count-the-repetitions/][466. Count The Repetitions]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/unique-substrings-in-wraparound-string/][467. Unique Substrings in Wraparound String]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/validate-ip-address/][468. Validate IP Address]] :String:
** TODO [[https://leetcode-cn.com/problems/convex-polygon/][469. Convex Polygon]] :Math:
** TODO [[https://leetcode-cn.com/problems/encode-string-with-shortest-length/][471. Encode String with Shortest Length]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/concatenated-words/][472. Concatenated Words]] :DepthfirstSearch:Trie:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/matchsticks-to-square/][473. Matchsticks to Square]] :DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/ones-and-zeroes/][474. Ones and Zeroes]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/heaters/][475. Heaters]] :BinarySearch:
** TODO [[https://leetcode-cn.com/problems/number-complement/][476. Number Complement]] :BitManipulation:
** TODO [[https://leetcode-cn.com/problems/total-hamming-distance/][477. Total Hamming Distance]] :BitManipulation:
** TODO [[https://leetcode-cn.com/problems/largest-palindrome-product/][479. Largest Palindrome Product]] 
** TODO [[https://leetcode-cn.com/problems/sliding-window-median/][480. Sliding Window Median]] :SlidingWindow:
** TODO [[https://leetcode-cn.com/problems/magical-string/][481. Magical String]] 
** TODO [[https://leetcode-cn.com/problems/license-key-formatting/][482. License Key Formatting]] 
** TODO [[https://leetcode-cn.com/problems/smallest-good-base/][483. Smallest Good Base]] :Math:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/find-permutation/][484. Find Permutation]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/max-consecutive-ones/][485. Max Consecutive Ones]] :Array:
** TODO [[https://leetcode-cn.com/problems/predict-the-winner/][486. Predict the Winner]] :Minimax:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/max-consecutive-ones-ii/][487. Max Consecutive Ones II]] :TwoPointers:
** TODO [[https://leetcode-cn.com/problems/zuma-game/][488. Zuma Game]] :DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/the-maze/][490. The Maze]] :DepthfirstSearch:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/increasing-subsequences/][491. Increasing Subsequences]] :DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/construct-the-rectangle/][492. Construct the Rectangle]] :Math:
** TODO [[https://leetcode-cn.com/problems/reverse-pairs/][493. Reverse Pairs]] :Sort:BinaryIndexedTree:SegmentTree:BinarySearch:DivideandConquer:
** TODO [[https://leetcode-cn.com/problems/target-sum/][494. Target Sum]] :DepthfirstSearch:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/teemo-attacking/][495. Teemo Attacking]] :Array:
** TODO [[https://leetcode-cn.com/problems/next-greater-element-i/][496. Next Greater Element I]] :Stack:
** TODO [[https://leetcode-cn.com/problems/diagonal-traverse/][498. Diagonal Traverse]] 
** TODO [[https://leetcode-cn.com/problems/the-maze-iii/][499. The Maze III]] :DepthfirstSearch:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/keyboard-row/][500. Keyboard Row]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/find-mode-in-binary-search-tree/][501. Find Mode in Binary Search Tree]] :Tree:
** TODO [[https://leetcode-cn.com/problems/ipo/][502. IPO]] :Heap:Greedy:
** TODO [[https://leetcode-cn.com/problems/next-greater-element-ii/][503. Next Greater Element II]] :Stack:
** TODO [[https://leetcode-cn.com/problems/base-7/][504. Base 7]] 
** TODO [[https://leetcode-cn.com/problems/the-maze-ii/][505. The Maze II]] :DepthfirstSearch:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/relative-ranks/][506. Relative Ranks]] 
** TODO [[https://leetcode-cn.com/problems/perfect-number/][507. Perfect Number]] :Math:
** TODO [[https://leetcode-cn.com/problems/most-frequent-subtree-sum/][508. Most Frequent Subtree Sum]] :Tree:HashTable:
** TODO [[https://leetcode-cn.com/problems/inorder-successor-in-bst-ii/][510. Inorder Successor in BST II]] :Tree:
** TODO [[https://leetcode-cn.com/problems/all-paths-from-source-lead-to-destination/][1059. All Paths from Source Lead to Destination]] :DepthfirstSearch:Graph:
** TODO [[https://leetcode-cn.com/problems/find-bottom-left-tree-value/][513. Find Bottom Left Tree Value]] :Tree:DepthfirstSearch:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/freedom-trail/][514. Freedom Trail]] :DepthfirstSearch:DivideandConquer:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/find-largest-value-in-each-tree-row/][515. Find Largest Value in Each Tree Row]] :Tree:DepthfirstSearch:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/longest-palindromic-subsequence/][516. Longest Palindromic Subsequence]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/super-washing-machines/][517. Super Washing Machines]] :Math:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/coin-change-2/][518. Coin Change 2]] 
** TODO [[https://leetcode-cn.com/problems/detect-capital/][520. Detect Capital]] :String:
** TODO [[https://leetcode-cn.com/problems/longest-uncommon-subsequence-i/][521. Longest Uncommon Subsequence I]] :Brainteaser:String:
** TODO [[https://leetcode-cn.com/problems/longest-uncommon-subsequence-ii/][522. Longest Uncommon Subsequence II]] :String:
** TODO [[https://leetcode-cn.com/problems/continuous-subarray-sum/][523. Continuous Subarray Sum]] :Math:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/longest-word-in-dictionary-through-deleting/][524. Longest Word in Dictionary through Deleting]] :Sort:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/contiguous-array/][525. Contiguous Array]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/beautiful-arrangement/][526. Beautiful Arrangement]] :Backtracking:
** TODO [[https://leetcode-cn.com/problems/word-abbreviation/][527. Word Abbreviation]] :Sort:String:
** TODO [[https://leetcode-cn.com/problems/minesweeper/][529. Minesweeper]] :DepthfirstSearch:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/minimum-absolute-difference-in-bst/][530. Minimum Absolute Difference in BST]] :Tree:
** TODO [[https://leetcode-cn.com/problems/lonely-pixel-i/][531. Lonely Pixel I]] :DepthfirstSearch:Array:
** TODO [[https://leetcode-cn.com/problems/k-diff-pairs-in-an-array/][532. K-diff Pairs in an Array]] :Array:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/lonely-pixel-ii/][533. Lonely Pixel II]] :DepthfirstSearch:Array:
** TODO [[https://leetcode-cn.com/problems/encode-and-decode-tinyurl/][535. Encode and Decode TinyURL]] :HashTable:Math:
** TODO [[https://leetcode-cn.com/problems/construct-binary-tree-from-string/][536. Construct Binary Tree from String]] :Tree:String:
** TODO [[https://leetcode-cn.com/problems/complex-number-multiplication/][537. Complex Number Multiplication]] :Math:String:
** TODO [[https://leetcode-cn.com/problems/convert-bst-to-greater-tree/][538. Convert BST to Greater Tree]] :Tree:
** TODO [[https://leetcode-cn.com/problems/minimum-time-difference/][539. Minimum Time Difference]] :String:
** TODO [[https://leetcode-cn.com/problems/single-element-in-a-sorted-array/][540. Single Element in a Sorted Array]] 
** TODO [[https://leetcode-cn.com/problems/reverse-string-ii/][541. Reverse String II]] :String:
** TODO [[https://leetcode-cn.com/problems/01-matrix/][542. 01 Matrix]] :DepthfirstSearch:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/diameter-of-binary-tree/][543. Diameter of Binary Tree]] :Tree:
** TODO [[https://leetcode-cn.com/problems/output-contest-matches/][544. Output Contest Matches]] :Recursion:String:
** TODO [[https://leetcode-cn.com/problems/boundary-of-binary-tree/][545. Boundary of Binary Tree]] :Tree:
** TODO [[https://leetcode-cn.com/problems/remove-boxes/][546. Remove Boxes]] :DepthfirstSearch:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/friend-circles/][547. Friend Circles]] :DepthfirstSearch:UnionFind:
** TODO [[https://leetcode-cn.com/problems/split-array-with-equal-sum/][548. Split Array with Equal Sum]] :Array:
** TODO [[https://leetcode-cn.com/problems/binary-tree-longest-consecutive-sequence-ii/][549. Binary Tree Longest Consecutive Sequence II]] :Tree:
** TODO [[https://leetcode-cn.com/problems/student-attendance-record-i/][551. Student Attendance Record I]] :String:
** TODO [[https://leetcode-cn.com/problems/student-attendance-record-ii/][552. Student Attendance Record II]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/optimal-division/][553. Optimal Division]] :Math:String:
** TODO [[https://leetcode-cn.com/problems/brick-wall/][554. Brick Wall]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/split-concatenated-strings/][555. Split Concatenated Strings]] :String:
** TODO [[https://leetcode-cn.com/problems/next-greater-element-iii/][556. Next Greater Element III]] :String:
** TODO [[https://leetcode-cn.com/problems/reverse-words-in-a-string-iii/][557. Reverse Words in a String III]] :String:
** TODO [[https://leetcode-cn.com/problems/subarray-sum-equals-k/][560. Subarray Sum Equals K]] :Array:HashTable:
** TODO [[https://leetcode-cn.com/problems/array-partition-i/][561. Array Partition I]] :Array:
** TODO [[https://leetcode-cn.com/problems/longest-line-of-consecutive-one-in-matrix/][562. Longest Line of Consecutive One in Matrix]] :Array:
** TODO [[https://leetcode-cn.com/problems/binary-tree-tilt/][563. Binary Tree Tilt]] :Tree:
** TODO [[https://leetcode-cn.com/problems/find-the-closest-palindrome/][564. Find the Closest Palindrome]] :String:
** TODO [[https://leetcode-cn.com/problems/array-nesting/][565. Array Nesting]] :Array:
** TODO [[https://leetcode-cn.com/problems/reshape-the-matrix/][566. Reshape the Matrix]] :Array:
** TODO [[https://leetcode-cn.com/problems/permutation-in-string/][567. Permutation in String]] :TwoPointers:SlidingWindow:
** TODO [[https://leetcode-cn.com/problems/maximum-vacation-days/][568. Maximum Vacation Days]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/median-employee-salary/][569. Median Employee Salary]] 
** TODO [[https://leetcode-cn.com/problems/managers-with-at-least-5-direct-reports/][570. Managers with at Least 5 Direct Reports]] 
** TODO [[https://leetcode-cn.com/problems/find-median-given-frequency-of-numbers/][571. Find Median Given Frequency of Numbers]] 
** TODO [[https://leetcode-cn.com/problems/subtree-of-another-tree/][572. Subtree of Another Tree]] :Tree:
** TODO [[https://leetcode-cn.com/problems/squirrel-simulation/][573. Squirrel Simulation]] :Math:
** TODO [[https://leetcode-cn.com/problems/winning-candidate/][574. Winning Candidate]] 
** TODO [[https://leetcode-cn.com/problems/distribute-candies/][575. Distribute Candies]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/out-of-boundary-paths/][576. Out of Boundary Paths]] :DepthfirstSearch:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/employee-bonus/][577. Employee Bonus]] 
** TODO [[https://leetcode-cn.com/problems/get-highest-answer-rate-question/][578. Get Highest Answer Rate Question]] 
** TODO [[https://leetcode-cn.com/problems/find-cumulative-salary-of-an-employee/][579. Find Cumulative Salary of an Employee]] 
** TODO [[https://leetcode-cn.com/problems/count-student-number-in-departments/][580. Count Student Number in Departments]] 
** TODO [[https://leetcode-cn.com/problems/shortest-unsorted-continuous-subarray/][581. Shortest Unsorted Continuous Subarray]] :Array:
** TODO [[https://leetcode-cn.com/problems/kill-process/][582. Kill Process]] :Tree:Queue:
** TODO [[https://leetcode-cn.com/problems/delete-operation-for-two-strings/][583. Delete Operation for Two Strings]] :String:
** TODO [[https://leetcode-cn.com/problems/find-customer-referee/][584. Find Customer Referee]] 
** TODO [[https://leetcode-cn.com/problems/investments-in-2016/][585. Investments in 2016]] 
** TODO [[https://leetcode-cn.com/problems/customer-placing-the-largest-number-of-orders/][586. Customer Placing the Largest Number of Orders]] 
** TODO [[https://leetcode-cn.com/problems/erect-the-fence/][587. Erect the Fence]] :Geometry:
** TODO [[https://leetcode-cn.com/problems/design-in-memory-file-system/][588. Design In-Memory File System]] :Design:
** TODO [[https://leetcode-cn.com/problems/tag-validator/][591. Tag Validator]] :Stack:String:
** TODO [[https://leetcode-cn.com/problems/fraction-addition-and-subtraction/][592. Fraction Addition and Subtraction]] :Math:
** TODO [[https://leetcode-cn.com/problems/valid-square/][593. Valid Square]] :Math:
** TODO [[https://leetcode-cn.com/problems/longest-harmonious-subsequence/][594. Longest Harmonious Subsequence]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/big-countries/][595. Big Countries]] 
** TODO [[https://leetcode-cn.com/problems/classes-more-than-5-students/][596. Classes More Than 5 Students]] 
** TODO [[https://leetcode-cn.com/problems/friend-requests-i-overall-acceptance-rate/][597. Friend Requests I: Overall Acceptance Rate]] 
** TODO [[https://leetcode-cn.com/problems/range-addition-ii/][598. Range Addition II]] :Math:
** TODO [[https://leetcode-cn.com/problems/minimum-index-sum-of-two-lists/][599. Minimum Index Sum of Two Lists]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/non-negative-integers-without-consecutive-ones/][600. Non-negative Integers without Consecutive Ones]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/human-traffic-of-stadium/][601. Human Traffic of Stadium]] 
** TODO [[https://leetcode-cn.com/problems/friend-requests-ii-who-has-the-most-friends/][602. Friend Requests II: Who Has the Most Friends]] 
** TODO [[https://leetcode-cn.com/problems/consecutive-available-seats/][603. Consecutive Available Seats]] 
** TODO [[https://leetcode-cn.com/problems/design-compressed-string-iterator/][604. Design Compressed String Iterator]] :Design:
** TODO [[https://leetcode-cn.com/problems/can-place-flowers/][605. Can Place Flowers]] :Array:
** TODO [[https://leetcode-cn.com/problems/construct-string-from-binary-tree/][606. Construct String from Binary Tree]] :Tree:String:
** TODO [[https://leetcode-cn.com/problems/sales-person/][607. Sales Person]] 
** TODO [[https://leetcode-cn.com/problems/tree-node/][608. Tree Node]] 
** TODO [[https://leetcode-cn.com/problems/find-duplicate-file-in-system/][609. Find Duplicate File in System]] :HashTable:String:
** TODO [[https://leetcode-cn.com/problems/triangle-judgement/][610. Triangle Judgement]] 
** TODO [[https://leetcode-cn.com/problems/valid-triangle-number/][611. Valid Triangle Number]] :Array:
** TODO [[https://leetcode-cn.com/problems/shortest-distance-in-a-plane/][612. Shortest Distance in a Plane]] 
** TODO [[https://leetcode-cn.com/problems/shortest-distance-in-a-line/][613. Shortest Distance in a Line]] 
** TODO [[https://leetcode-cn.com/problems/second-degree-follower/][614. Second Degree Follower]] 
** TODO [[https://leetcode-cn.com/problems/average-salary-departments-vs-company/][615. Average Salary: Departments VS Company]] 
** TODO [[https://leetcode-cn.com/problems/add-bold-tag-in-string/][616. Add Bold Tag in String]] :String:
** TODO [[https://leetcode-cn.com/problems/merge-two-binary-trees/][617. Merge Two Binary Trees]] :Tree:
** TODO [[https://leetcode-cn.com/problems/students-report-by-geography/][618. Students Report By Geography]] 
** TODO [[https://leetcode-cn.com/problems/biggest-single-number/][619. Biggest Single Number]] 
** TODO [[https://leetcode-cn.com/problems/not-boring-movies/][620. Not Boring Movies]] 
** TODO [[https://leetcode-cn.com/problems/task-scheduler/][621. Task Scheduler]] :Greedy:Queue:Array:
** TODO [[https://leetcode-cn.com/problems/add-one-row-to-tree/][623. Add One Row to Tree]] :Tree:
** TODO [[https://leetcode-cn.com/problems/maximum-distance-in-arrays/][624. Maximum Distance in Arrays]] :Array:HashTable:
** TODO [[https://leetcode-cn.com/problems/minimum-factorization/][625. Minimum Factorization]] :Recursion:Math:
** TODO [[https://leetcode-cn.com/problems/exchange-seats/][626. Exchange Seats]] 
** TODO [[https://leetcode-cn.com/problems/swap-salary/][627. Swap Salary]] 
** TODO [[https://leetcode-cn.com/problems/maximum-product-of-three-numbers/][628. Maximum Product of Three Numbers]] :Array:Math:
** TODO [[https://leetcode-cn.com/problems/k-inverse-pairs-array/][629. K Inverse Pairs Array]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/course-schedule-iii/][630. Course Schedule III]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/design-excel-sum-formula/][631. Design Excel Sum Formula]] :Design:
** TODO [[https://leetcode-cn.com/problems/smallest-range-covering-elements-from-k-lists/][632. Smallest Range Covering Elements from K Lists]] :HashTable:TwoPointers:String:
** TODO [[https://leetcode-cn.com/problems/sum-of-square-numbers/][633. Sum of Square Numbers]] :Math:
** TODO [[https://leetcode-cn.com/problems/find-the-derangement-of-an-array/][634. Find the Derangement of An Array]] :Math:
** TODO [[https://leetcode-cn.com/problems/design-log-storage-system/][635. Design Log Storage System]] :Design:String:
** TODO [[https://leetcode-cn.com/problems/exclusive-time-of-functions/][636. Exclusive Time of Functions]] :Stack:
** TODO [[https://leetcode-cn.com/problems/average-of-levels-in-binary-tree/][637. Average of Levels in Binary Tree]] :Tree:
** TODO [[https://leetcode-cn.com/problems/shopping-offers/][638. Shopping Offers]] :DepthfirstSearch:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/decode-ways-ii/][639. Decode Ways II]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/solve-the-equation/][640. Solve the Equation]] :Math:
** TODO [[https://leetcode-cn.com/problems/design-search-autocomplete-system/][642. Design Search Autocomplete System]] :Design:Trie:
** TODO [[https://leetcode-cn.com/problems/maximum-average-subarray-i/][643. Maximum Average Subarray I]] :Array:
** TODO [[https://leetcode-cn.com/problems/maximum-average-subarray-ii/][644. Maximum Average Subarray II]] :Array:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/set-mismatch/][645. Set Mismatch]] :HashTable:Math:
** TODO [[https://leetcode-cn.com/problems/maximum-length-of-pair-chain/][646. Maximum Length of Pair Chain]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/palindromic-substrings/][647. Palindromic Substrings]] :String:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/replace-words/][648. Replace Words]] :Trie:HashTable:
** TODO [[https://leetcode-cn.com/problems/dota2-senate/][649. Dota2 Senate]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/2-keys-keyboard/][650. 2 Keys Keyboard]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/4-keys-keyboard/][651. 4 Keys Keyboard]] :Greedy:Math:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/find-duplicate-subtrees/][652. Find Duplicate Subtrees]] :Tree:
** TODO [[https://leetcode-cn.com/problems/two-sum-iv-input-is-a-bst/][653. Two Sum IV - Input is a BST]] :Tree:
** TODO [[https://leetcode-cn.com/problems/maximum-binary-tree/][654. Maximum Binary Tree]] :Tree:
** TODO [[https://leetcode-cn.com/problems/print-binary-tree/][655. Print Binary Tree]] :Tree:
** TODO [[https://leetcode-cn.com/problems/coin-path/][656. Coin Path]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/robot-return-to-origin/][657. Robot Return to Origin]] :String:
** TODO [[https://leetcode-cn.com/problems/find-k-closest-elements/][658. Find K Closest Elements]] :BinarySearch:
** TODO [[https://leetcode-cn.com/problems/split-array-into-consecutive-subsequences/][659. Split Array into Consecutive Subsequences]] :Heap:Greedy:
** TODO [[https://leetcode-cn.com/problems/remove-9/][660. Remove 9]] :Math:
** TODO [[https://leetcode-cn.com/problems/image-smoother/][661. Image Smoother]] :Array:
** TODO [[https://leetcode-cn.com/problems/maximum-width-of-binary-tree/][662. Maximum Width of Binary Tree]] :Tree:
** TODO [[https://leetcode-cn.com/problems/equal-tree-partition/][663. Equal Tree Partition]] :Tree:
** TODO [[https://leetcode-cn.com/problems/strange-printer/][664. Strange Printer]] :DepthfirstSearch:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/non-decreasing-array/][665. Non-decreasing Array]] :Array:
** TODO [[https://leetcode-cn.com/problems/path-sum-iv/][666. Path Sum IV]] :Tree:
** TODO [[https://leetcode-cn.com/problems/beautiful-arrangement-ii/][667. Beautiful Arrangement II]] :Array:
** TODO [[https://leetcode-cn.com/problems/kth-smallest-number-in-multiplication-table/][668. Kth Smallest Number in Multiplication Table]] :BinarySearch:
** TODO [[https://leetcode-cn.com/problems/trim-a-binary-search-tree/][669. Trim a Binary Search Tree]] :Tree:
** TODO [[https://leetcode-cn.com/problems/maximum-swap/][670. Maximum Swap]] :Array:Math:
** TODO [[https://leetcode-cn.com/problems/second-minimum-node-in-a-binary-tree/][671. Second Minimum Node In a Binary Tree]] :Tree:
** TODO [[https://leetcode-cn.com/problems/bulb-switcher-ii/][672. Bulb Switcher II]] :Math:
** TODO [[https://leetcode-cn.com/problems/number-of-longest-increasing-subsequence/][673. Number of Longest Increasing Subsequence]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/longest-continuous-increasing-subsequence/][674. Longest Continuous Increasing Subsequence]] :Array:
** TODO [[https://leetcode-cn.com/problems/cut-off-trees-for-golf-event/][675. Cut Off Trees for Golf Event]] :BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/implement-magic-dictionary/][676. Implement Magic Dictionary]] :Trie:HashTable:
** TODO [[https://leetcode-cn.com/problems/map-sum-pairs/][677. Map Sum Pairs]] :Trie:
** TODO [[https://leetcode-cn.com/problems/valid-parenthesis-string/][678. Valid Parenthesis String]] :String:
** TODO [[https://leetcode-cn.com/problems/24-game/][679. 24 Game]] :DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/valid-palindrome-ii/][680. Valid Palindrome II]] :String:
** TODO [[https://leetcode-cn.com/problems/next-closest-time/][681. Next Closest Time]] :String:
** TODO [[https://leetcode-cn.com/problems/baseball-game/][682. Baseball Game]] :Stack:
** TODO [[https://leetcode-cn.com/problems/k-empty-slots/][683. K Empty Slots]] :OrderedMap:
** TODO [[https://leetcode-cn.com/problems/redundant-connection/][684. Redundant Connection]] :Tree:UnionFind:Graph:
** TODO [[https://leetcode-cn.com/problems/redundant-connection-ii/][685. Redundant Connection II]] :Tree:DepthfirstSearch:UnionFind:Graph:
** TODO [[https://leetcode-cn.com/problems/repeated-string-match/][686. Repeated String Match]] :String:
** TODO [[https://leetcode-cn.com/problems/longest-univalue-path/][687. Longest Univalue Path]] :Tree:Recursion:
** TODO [[https://leetcode-cn.com/problems/knight-probability-in-chessboard/][688. Knight Probability in Chessboard]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/maximum-sum-of-3-non-overlapping-subarrays/][689. Maximum Sum of 3 Non-Overlapping Subarrays]] :Array:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/employee-importance/][690. Employee Importance]] :DepthfirstSearch:BreadthfirstSearch:HashTable:
** TODO [[https://leetcode-cn.com/problems/stickers-to-spell-word/][691. Stickers to Spell Word]] :DynamicProgramming:Backtracking:
** TODO [[https://leetcode-cn.com/problems/top-k-frequent-words/][692. Top K Frequent Words]] :Heap:Trie:HashTable:
** TODO [[https://leetcode-cn.com/problems/binary-number-with-alternating-bits/][693. Binary Number with Alternating Bits]] :BitManipulation:
** TODO [[https://leetcode-cn.com/problems/number-of-distinct-islands/][694. Number of Distinct Islands]] :DepthfirstSearch:HashTable:
** TODO [[https://leetcode-cn.com/problems/max-area-of-island/][695. Max Area of Island]] :DepthfirstSearch:Array:
** TODO [[https://leetcode-cn.com/problems/count-binary-substrings/][696. Count Binary Substrings]] :String:
** TODO [[https://leetcode-cn.com/problems/degree-of-an-array/][697. Degree of an Array]] :Array:
** TODO [[https://leetcode-cn.com/problems/partition-to-k-equal-sum-subsets/][698. Partition to K Equal Sum Subsets]] :Recursion:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/falling-squares/][699. Falling Squares]] :SegmentTree:OrderedMap:
** TODO [[https://leetcode-cn.com/problems/number-of-distinct-islands-ii/][711. Number of Distinct Islands II]] :DepthfirstSearch:HashTable:
** TODO [[https://leetcode-cn.com/problems/minimum-ascii-delete-sum-for-two-strings/][712. Minimum ASCII Delete Sum for Two Strings]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/subarray-product-less-than-k/][713. Subarray Product Less Than K]] :Array:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/][714. Best Time to Buy and Sell Stock with Transaction Fee]] :Greedy:Array:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/range-module/][715. Range Module]] :SegmentTree:OrderedMap:
** TODO [[https://leetcode-cn.com/problems/max-stack/][716. Max Stack]] :Design:
** TODO [[https://leetcode-cn.com/problems/1-bit-and-2-bit-characters/][717. 1-bit and 2-bit Characters]] :Array:
** TODO [[https://leetcode-cn.com/problems/maximum-length-of-repeated-subarray/][718. Maximum Length of Repeated Subarray]] :Array:HashTable:BinarySearch:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/find-k-th-smallest-pair-distance/][719. Find K-th Smallest Pair Distance]] :Heap:Array:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/longest-word-in-dictionary/][720. Longest Word in Dictionary]] :Trie:HashTable:
** TODO [[https://leetcode-cn.com/problems/accounts-merge/][721. Accounts Merge]] :DepthfirstSearch:UnionFind:
** TODO [[https://leetcode-cn.com/problems/remove-comments/][722. Remove Comments]] :String:
** TODO [[https://leetcode-cn.com/problems/candy-crush/][723. Candy Crush]] :Array:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/find-pivot-index/][724. Find Pivot Index]] :Array:
** TODO [[https://leetcode-cn.com/problems/split-linked-list-in-parts/][725. Split Linked List in Parts]] :LinkedList:
** TODO [[https://leetcode-cn.com/problems/number-of-atoms/][726. Number of Atoms]] :Stack:Recursion:HashTable:
** TODO [[https://leetcode-cn.com/problems/minimum-window-subsequence/][727. Minimum Window Subsequence]] :DynamicProgramming:SlidingWindow:
** TODO [[https://leetcode-cn.com/problems/self-dividing-numbers/][728. Self Dividing Numbers]] :Math:
** TODO [[https://leetcode-cn.com/problems/my-calendar-i/][729. My Calendar I]] :Array:
** TODO [[https://leetcode-cn.com/problems/count-different-palindromic-subsequences/][730. Count Different Palindromic Subsequences]] :String:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/my-calendar-ii/][731. My Calendar II]] :OrderedMap:
** TODO [[https://leetcode-cn.com/problems/my-calendar-iii/][732. My Calendar III]] :SegmentTree:OrderedMap:
** TODO [[https://leetcode-cn.com/problems/flood-fill/][733. Flood Fill]] :DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/sentence-similarity/][734. Sentence Similarity]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/asteroid-collision/][735. Asteroid Collision]] :Stack:
** TODO [[https://leetcode-cn.com/problems/parse-lisp-expression/][736. Parse Lisp Expression]] :String:
** TODO [[https://leetcode-cn.com/problems/sentence-similarity-ii/][737. Sentence Similarity II]] :DepthfirstSearch:UnionFind:
** TODO [[https://leetcode-cn.com/problems/monotone-increasing-digits/][738. Monotone Increasing Digits]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/daily-temperatures/][739. Daily Temperatures]] :Stack:HashTable:
** TODO [[https://leetcode-cn.com/problems/delete-and-earn/][740. Delete and Earn]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/cherry-pickup/][741. Cherry Pickup]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/to-lower-case/][709. To Lower Case]] :String:
** TODO [[https://leetcode-cn.com/problems/closest-leaf-in-a-binary-tree/][742. Closest Leaf in a Binary Tree]] :Tree:
** TODO [[https://leetcode-cn.com/problems/network-delay-time/][743. Network Delay Time]] :Heap:DepthfirstSearch:BreadthfirstSearch:Graph:
** TODO [[https://leetcode-cn.com/problems/find-smallest-letter-greater-than-target/][744. Find Smallest Letter Greater Than Target]] :BinarySearch:
** TODO [[https://leetcode-cn.com/problems/prefix-and-suffix-search/][745. Prefix and Suffix Search]] :Trie:
** TODO [[https://leetcode-cn.com/problems/min-cost-climbing-stairs/][746. Min Cost Climbing Stairs]] :Array:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/largest-number-at-least-twice-of-others/][747. Largest Number At Least Twice of Others]] :Array:
** TODO [[https://leetcode-cn.com/problems/shortest-completing-word/][748. Shortest Completing Word]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/contain-virus/][749. Contain Virus]] :DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/number-of-corner-rectangles/][750. Number Of Corner Rectangles]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/ip-to-cidr/][751. IP to CIDR]] :BitManipulation:
** TODO [[https://leetcode-cn.com/problems/open-the-lock/][752. Open the Lock]] :BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/cracking-the-safe/][753. Cracking the Safe]] :DepthfirstSearch:Math:
** TODO [[https://leetcode-cn.com/problems/reach-a-number/][754. Reach a Number]] :Math:
** TODO [[https://leetcode-cn.com/problems/pour-water/][755. Pour Water]] :Array:
** TODO [[https://leetcode-cn.com/problems/pyramid-transition-matrix/][756. Pyramid Transition Matrix]] :BitManipulation:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list/][426. Convert Binary Search Tree to Sorted Doubly Linked List]] :Tree:LinkedList:DivideandConquer:
** TODO [[https://leetcode-cn.com/problems/set-intersection-size-at-least-two/][757. Set Intersection Size At Least Two]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/bold-words-in-string/][758. Bold Words in String]] :String:
** TODO [[https://leetcode-cn.com/problems/employee-free-time/][759. Employee Free Time]] :Heap:Greedy:
** TODO [[https://leetcode-cn.com/problems/find-anagram-mappings/][760. Find Anagram Mappings]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/special-binary-string/][761. Special Binary String]] :Recursion:String:
** TODO [[https://leetcode-cn.com/problems/n-ary-tree-level-order-traversal/][429. N-ary Tree Level Order Traversal]] :Tree:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/serialize-and-deserialize-n-ary-tree/][428. Serialize and Deserialize N-ary Tree]] :Tree:
** TODO [[https://leetcode-cn.com/problems/flatten-a-multilevel-doubly-linked-list/][430. Flatten a Multilevel Doubly Linked List]] :DepthfirstSearch:LinkedList:
** TODO [[https://leetcode-cn.com/problems/prime-number-of-set-bits-in-binary-representation/][762. Prime Number of Set Bits in Binary Representation]] :BitManipulation:
** TODO [[https://leetcode-cn.com/problems/partition-labels/][763. Partition Labels]] :Greedy:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/largest-plus-sign/][764. Largest Plus Sign]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/couples-holding-hands/][765. Couples Holding Hands]] :Greedy:UnionFind:Graph:
** TODO [[https://leetcode-cn.com/problems/encode-n-ary-tree-to-binary-tree/][431. Encode N-ary Tree to Binary Tree]] :Tree:
** TODO [[https://leetcode-cn.com/problems/construct-quad-tree/][427. Construct Quad Tree]] 
** TODO [[https://leetcode-cn.com/problems/logical-or-of-two-binary-grids-represented-as-quad-trees/][558. Logical OR of Two Binary Grids Represented as Quad-Trees]] 
** TODO [[https://leetcode-cn.com/problems/maximum-depth-of-n-ary-tree/][559. Maximum Depth of N-ary Tree]] :Tree:DepthfirstSearch:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/n-ary-tree-preorder-traversal/][589. N-ary Tree Preorder Traversal]] :Tree:
** TODO [[https://leetcode-cn.com/problems/n-ary-tree-postorder-traversal/][590. N-ary Tree Postorder Traversal]] :Tree:
** TODO [[https://leetcode-cn.com/problems/toeplitz-matrix/][766. Toeplitz Matrix]] :Array:
** TODO [[https://leetcode-cn.com/problems/reorganize-string/][767. Reorganize String]] :Heap:Greedy:Sort:String:
** TODO [[https://leetcode-cn.com/problems/max-chunks-to-make-sorted-ii/][768. Max Chunks To Make Sorted II]] :Array:
** TODO [[https://leetcode-cn.com/problems/max-chunks-to-make-sorted/][769. Max Chunks To Make Sorted]] :Array:
** TODO [[https://leetcode-cn.com/problems/basic-calculator-iv/][770. Basic Calculator IV]] :Stack:HashTable:String:
** TODO [[https://leetcode-cn.com/problems/jewels-and-stones/][771. Jewels and Stones]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/search-in-a-binary-search-tree/][700. Search in a Binary Search Tree]] :Tree:
** TODO [[https://leetcode-cn.com/problems/insert-into-a-binary-search-tree/][701. Insert into a Binary Search Tree]] :Tree:
** TODO [[https://leetcode-cn.com/problems/basic-calculator-iii/][772. Basic Calculator III]] :Stack:String:
** TODO [[https://leetcode-cn.com/problems/search-in-a-sorted-array-of-unknown-size/][702. Search in a Sorted Array of Unknown Size]] :BinarySearch:
** TODO [[https://leetcode-cn.com/problems/sliding-puzzle/][773. Sliding Puzzle]] :BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/minimize-max-distance-to-gas-station/][774. Minimize Max Distance to Gas Station]] :BinarySearch:
** TODO [[https://leetcode-cn.com/problems/kth-largest-element-in-a-stream/][703. Kth Largest Element in a Stream]] :Heap:Design:
** TODO [[https://leetcode-cn.com/problems/global-and-local-inversions/][775. Global and Local Inversions]] :Array:Math:
** TODO [[https://leetcode-cn.com/problems/split-bst/][776. Split BST]] :Tree:Recursion:
** TODO [[https://leetcode-cn.com/problems/binary-search/][704. Binary Search]] :BinarySearch:
** TODO [[https://leetcode-cn.com/problems/swap-adjacent-in-lr-string/][777. Swap Adjacent in LR String]] :Brainteaser:
** TODO [[https://leetcode-cn.com/problems/swim-in-rising-water/][778. Swim in Rising Water]] :Heap:DepthfirstSearch:UnionFind:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/k-th-symbol-in-grammar/][779. K-th Symbol in Grammar]] :Recursion:
** TODO [[https://leetcode-cn.com/problems/reaching-points/][780. Reaching Points]] :Math:
** TODO [[https://leetcode-cn.com/problems/rabbits-in-forest/][781. Rabbits in Forest]] :HashTable:Math:
** TODO [[https://leetcode-cn.com/problems/transform-to-chessboard/][782. Transform to Chessboard]] :Array:Math:
** TODO [[https://leetcode-cn.com/problems/minimum-distance-between-bst-nodes/][783. Minimum Distance Between BST Nodes]] :Tree:Recursion:
** TODO [[https://leetcode-cn.com/problems/letter-case-permutation/][784. Letter Case Permutation]] :BitManipulation:Backtracking:
** TODO [[https://leetcode-cn.com/problems/is-graph-bipartite/][785. Is Graph Bipartite?]] :DepthfirstSearch:BreadthfirstSearch:Graph:
** TODO [[https://leetcode-cn.com/problems/k-th-smallest-prime-fraction/][786. K-th Smallest Prime Fraction]] :Heap:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/cheapest-flights-within-k-stops/][787. Cheapest Flights Within K Stops]] :Heap:BreadthfirstSearch:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/rotated-digits/][788. Rotated Digits]] :String:
** TODO [[https://leetcode-cn.com/problems/escape-the-ghosts/][789. Escape The Ghosts]] :Math:
** TODO [[https://leetcode-cn.com/problems/domino-and-tromino-tiling/][790. Domino and Tromino Tiling]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/custom-sort-string/][791. Custom Sort String]] :String:
** TODO [[https://leetcode-cn.com/problems/number-of-matching-subsequences/][792. Number of Matching Subsequences]] :Array:
** TODO [[https://leetcode-cn.com/problems/preimage-size-of-factorial-zeroes-function/][793. Preimage Size of Factorial Zeroes Function]] :BinarySearch:
** TODO [[https://leetcode-cn.com/problems/valid-tic-tac-toe-state/][794. Valid Tic-Tac-Toe State]] :Recursion:Math:
** TODO [[https://leetcode-cn.com/problems/number-of-subarrays-with-bounded-maximum/][795. Number of Subarrays with Bounded Maximum]] :Array:
** TODO [[https://leetcode-cn.com/problems/rotate-string/][796. Rotate String]] 
** TODO [[https://leetcode-cn.com/problems/all-paths-from-source-to-target/][797. All Paths From Source to Target]] :DepthfirstSearch:Graph:Backtracking:
** TODO [[https://leetcode-cn.com/problems/smallest-rotation-with-highest-score/][798. Smallest Rotation with Highest Score]] 
** TODO [[https://leetcode-cn.com/problems/champagne-tower/][799. Champagne Tower]] 
** TODO [[https://leetcode-cn.com/problems/design-hashset/][705. Design HashSet]] :Design:HashTable:
** TODO [[https://leetcode-cn.com/problems/design-hashmap/][706. Design HashMap]] :Design:HashTable:
** TODO [[https://leetcode-cn.com/problems/similar-rgb-color/][800. Similar RGB Color]] :Math:String:
** TODO [[https://leetcode-cn.com/problems/minimum-swaps-to-make-sequences-increasing/][801. Minimum Swaps To Make Sequences Increasing]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/find-eventual-safe-states/][802. Find Eventual Safe States]] :DepthfirstSearch:Graph:
** TODO [[https://leetcode-cn.com/problems/bricks-falling-when-hit/][803. Bricks Falling When Hit]] :UnionFind:
** TODO [[https://leetcode-cn.com/problems/unique-morse-code-words/][804. Unique Morse Code Words]] :String:
** TODO [[https://leetcode-cn.com/problems/split-array-with-same-average/][805. Split Array With Same Average]] :Math:
** TODO [[https://leetcode-cn.com/problems/number-of-lines-to-write-string/][806. Number of Lines To Write String]] 
** TODO [[https://leetcode-cn.com/problems/max-increase-to-keep-city-skyline/][807. Max Increase to Keep City Skyline]] 
** TODO [[https://leetcode-cn.com/problems/soup-servings/][808. Soup Servings]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/expressive-words/][809. Expressive Words]] :String:
** TODO [[https://leetcode-cn.com/problems/chalkboard-xor-game/][810. Chalkboard XOR Game]] :Math:
** TODO [[https://leetcode-cn.com/problems/subdomain-visit-count/][811. Subdomain Visit Count]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/largest-triangle-area/][812. Largest Triangle Area]] :Math:
** TODO [[https://leetcode-cn.com/problems/largest-sum-of-averages/][813. Largest Sum of Averages]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/binary-tree-pruning/][814. Binary Tree Pruning]] :Tree:
** TODO [[https://leetcode-cn.com/problems/bus-routes/][815. Bus Routes]] :BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/ambiguous-coordinates/][816. Ambiguous Coordinates]] :String:
** TODO [[https://leetcode-cn.com/problems/linked-list-components/][817. Linked List Components]] :LinkedList:
** TODO [[https://leetcode-cn.com/problems/race-car/][818. Race Car]] :Heap:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/most-common-word/][819. Most Common Word]] :String:
** TODO [[https://leetcode-cn.com/problems/design-linked-list/][707. Design Linked List]] :Design:LinkedList:
** TODO [[https://leetcode-cn.com/problems/short-encoding-of-words/][820. Short Encoding of Words]] 
** TODO [[https://leetcode-cn.com/problems/shortest-distance-to-a-character/][821. Shortest Distance to a Character]] 
** TODO [[https://leetcode-cn.com/problems/card-flipping-game/][822. Card Flipping Game]] 
** TODO [[https://leetcode-cn.com/problems/binary-trees-with-factors/][823. Binary Trees With Factors]] 
** TODO [[https://leetcode-cn.com/problems/insert-into-a-sorted-circular-linked-list/][708. Insert into a Sorted Circular Linked List]] :LinkedList:
** TODO [[https://leetcode-cn.com/problems/goat-latin/][824. Goat Latin]] :String:
** TODO [[https://leetcode-cn.com/problems/friends-of-appropriate-ages/][825. Friends Of Appropriate Ages]] :Array:
** TODO [[https://leetcode-cn.com/problems/most-profit-assigning-work/][826. Most Profit Assigning Work]] :TwoPointers:
** TODO [[https://leetcode-cn.com/problems/making-a-large-island/][827. Making A Large Island]] :DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/count-unique-characters-of-all-substrings-of-a-given-string/][828. Count Unique Characters of All Substrings of a Given String]] :TwoPointers:
** TODO [[https://leetcode-cn.com/problems/consecutive-numbers-sum/][829. Consecutive Numbers Sum]] :Math:
** TODO [[https://leetcode-cn.com/problems/positions-of-large-groups/][830. Positions of Large Groups]] :Array:
** TODO [[https://leetcode-cn.com/problems/masking-personal-information/][831. Masking Personal Information]] :String:
** TODO [[https://leetcode-cn.com/problems/design-circular-deque/][641. Design Circular Deque]] :Design:Queue:
** TODO [[https://leetcode-cn.com/problems/design-circular-queue/][622. Design Circular Queue]] :Design:Queue:
** TODO [[https://leetcode-cn.com/problems/flipping-an-image/][832. Flipping an Image]] :Array:
** TODO [[https://leetcode-cn.com/problems/find-and-replace-in-string/][833. Find And Replace in String]] :String:
** TODO [[https://leetcode-cn.com/problems/sum-of-distances-in-tree/][834. Sum of Distances in Tree]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/image-overlap/][835. Image Overlap]] :Array:
** TODO [[https://leetcode-cn.com/problems/robot-room-cleaner/][489. Robot Room Cleaner]] :DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/rectangle-overlap/][836. Rectangle Overlap]] :Math:
** TODO [[https://leetcode-cn.com/problems/new-21-game/][837. New 21 Game]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/push-dominoes/][838. Push Dominoes]] :TwoPointers:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/similar-string-groups/][839. Similar String Groups]] :DepthfirstSearch:UnionFind:Graph:
** TODO [[https://leetcode-cn.com/problems/magic-squares-in-grid/][840. Magic Squares In Grid]] :Array:
** TODO [[https://leetcode-cn.com/problems/keys-and-rooms/][841. Keys and Rooms]] :DepthfirstSearch:Graph:
** TODO [[https://leetcode-cn.com/problems/split-array-into-fibonacci-sequence/][842. Split Array into Fibonacci Sequence]] :Greedy:String:Backtracking:
** TODO [[https://leetcode-cn.com/problems/guess-the-word/][843. Guess the Word]] :Minimax:
** TODO [[https://leetcode-cn.com/problems/backspace-string-compare/][844. Backspace String Compare]] :Stack:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/longest-mountain-in-array/][845. Longest Mountain in Array]] :TwoPointers:
** TODO [[https://leetcode-cn.com/problems/hand-of-straights/][846. Hand of Straights]] :OrderedMap:
** TODO [[https://leetcode-cn.com/problems/shortest-path-visiting-all-nodes/][847. Shortest Path Visiting All Nodes]] :BreadthfirstSearch:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/shifting-letters/][848. Shifting Letters]] :String:
** TODO [[https://leetcode-cn.com/problems/maximize-distance-to-closest-person/][849. Maximize Distance to Closest Person]] :Array:
** TODO [[https://leetcode-cn.com/problems/rectangle-area-ii/][850. Rectangle Area II]] :SegmentTree:LineSweep:
** TODO [[https://leetcode-cn.com/problems/loud-and-rich/][851. Loud and Rich]] :DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/peak-index-in-a-mountain-array/][852. Peak Index in a Mountain Array]] :BinarySearch:
** TODO [[https://leetcode-cn.com/problems/car-fleet/][853. Car Fleet]] :Sort:
** TODO [[https://leetcode-cn.com/problems/k-similar-strings/][854. K-Similar Strings]] :BreadthfirstSearch:Graph:
** TODO [[https://leetcode-cn.com/problems/exam-room/][855. Exam Room]] :OrderedMap:
** TODO [[https://leetcode-cn.com/problems/score-of-parentheses/][856. Score of Parentheses]] :Stack:String:
** TODO [[https://leetcode-cn.com/problems/minimum-cost-to-hire-k-workers/][857. Minimum Cost to Hire K Workers]] :Heap:
** TODO [[https://leetcode-cn.com/problems/mirror-reflection/][858. Mirror Reflection]] :Math:
** TODO [[https://leetcode-cn.com/problems/buddy-strings/][859. Buddy Strings]] :String:
** TODO [[https://leetcode-cn.com/problems/lemonade-change/][860. Lemonade Change]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/score-after-flipping-matrix/][861. Score After Flipping Matrix]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/shortest-subarray-with-sum-at-least-k/][862. Shortest Subarray with Sum at Least K]] :Queue:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/all-nodes-distance-k-in-binary-tree/][863. All Nodes Distance K in Binary Tree]] :Tree:DepthfirstSearch:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/random-pick-with-blacklist/][710. Random Pick with Blacklist]] :Sort:HashTable:BinarySearch:Random:
** TODO [[https://leetcode-cn.com/problems/shortest-path-to-get-all-keys/][864. Shortest Path to Get All Keys]] :Heap:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/smallest-subtree-with-all-the-deepest-nodes/][865. Smallest Subtree with all the Deepest Nodes]] :Tree:
** TODO [[https://leetcode-cn.com/problems/prime-palindrome/][866. Prime Palindrome]] :Math:
** TODO [[https://leetcode-cn.com/problems/transpose-matrix/][867. Transpose Matrix]] :Array:
** TODO [[https://leetcode-cn.com/problems/binary-gap/][868. Binary Gap]] :Math:
** TODO [[https://leetcode-cn.com/problems/reordered-power-of-2/][869. Reordered Power of 2]] :Math:
** TODO [[https://leetcode-cn.com/problems/advantage-shuffle/][870. Advantage Shuffle]] :Greedy:Array:
** TODO [[https://leetcode-cn.com/problems/minimum-number-of-refueling-stops/][871. Minimum Number of Refueling Stops]] :Heap:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/implement-rand10-using-rand7/][470. Implement Rand10() Using Rand7()]] :Random:RejectionSampling:
** TODO [[https://leetcode-cn.com/problems/leaf-similar-trees/][872. Leaf-Similar Trees]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/length-of-longest-fibonacci-subsequence/][873. Length of Longest Fibonacci Subsequence]] :Array:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/walking-robot-simulation/][874. Walking Robot Simulation]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/koko-eating-bananas/][875. Koko Eating Bananas]] :BinarySearch:
** TODO [[https://leetcode-cn.com/problems/middle-of-the-linked-list/][876. Middle of the Linked List]] :LinkedList:
** TODO [[https://leetcode-cn.com/problems/stone-game/][877. Stone Game]] :Minimax:Math:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/nth-magical-number/][878. Nth Magical Number]] :Math:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/profitable-schemes/][879. Profitable Schemes]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/random-pick-with-weight/][528. Random Pick with Weight]] :BinarySearch:Random:
** TODO [[https://leetcode-cn.com/problems/random-flip-matrix/][519. Random Flip Matrix]] :Random:
** TODO [[https://leetcode-cn.com/problems/random-point-in-non-overlapping-rectangles/][497. Random Point in Non-overlapping Rectangles]] :BinarySearch:Random:
** TODO [[https://leetcode-cn.com/problems/generate-random-point-in-a-circle/][478. Generate Random Point in a Circle]] :Math:Random:RejectionSampling:
** TODO [[https://leetcode-cn.com/problems/decoded-string-at-index/][880. Decoded String at Index]] :Stack:
** TODO [[https://leetcode-cn.com/problems/boats-to-save-people/][881. Boats to Save People]] :Greedy:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/reachable-nodes-in-subdivided-graph/][882. Reachable Nodes In Subdivided Graph]] :Heap:
** TODO [[https://leetcode-cn.com/problems/projection-area-of-3d-shapes/][883. Projection Area of 3D Shapes]] :Math:
** TODO [[https://leetcode-cn.com/problems/uncommon-words-from-two-sentences/][884. Uncommon Words from Two Sentences]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/spiral-matrix-iii/][885. Spiral Matrix III]] :Math:
** TODO [[https://leetcode-cn.com/problems/possible-bipartition/][886. Possible Bipartition]] :DepthfirstSearch:Graph:
** TODO [[https://leetcode-cn.com/problems/super-egg-drop/][887. Super Egg Drop]] :Math:BinarySearch:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/fair-candy-swap/][888. Fair Candy Swap]] :Array:
** TODO [[https://leetcode-cn.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal/][889. Construct Binary Tree from Preorder and Postorder Traversal]] :Tree:
** TODO [[https://leetcode-cn.com/problems/find-and-replace-pattern/][890. Find and Replace Pattern]] :String:
** TODO [[https://leetcode-cn.com/problems/sum-of-subsequence-widths/][891. Sum of Subsequence Widths]] :Array:Math:
** TODO [[https://leetcode-cn.com/problems/surface-area-of-3d-shapes/][892. Surface Area of 3D Shapes]] :Geometry:Math:
** TODO [[https://leetcode-cn.com/problems/groups-of-special-equivalent-strings/][893. Groups of Special-Equivalent Strings]] :String:
** TODO [[https://leetcode-cn.com/problems/all-possible-full-binary-trees/][894. All Possible Full Binary Trees]] :Tree:Recursion:
** TODO [[https://leetcode-cn.com/problems/maximum-frequency-stack/][895. Maximum Frequency Stack]] :Stack:HashTable:
** TODO [[https://leetcode-cn.com/problems/monotonic-array/][896. Monotonic Array]] :Array:
** TODO [[https://leetcode-cn.com/problems/increasing-order-search-tree/][897. Increasing Order Search Tree]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/bitwise-ors-of-subarrays/][898. Bitwise ORs of Subarrays]] :BitManipulation:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/orderly-queue/][899. Orderly Queue]] :Math:String:
** TODO [[https://leetcode-cn.com/problems/rle-iterator/][900. RLE Iterator]] :Array:
** TODO [[https://leetcode-cn.com/problems/online-stock-span/][901. Online Stock Span]] :Stack:
** TODO [[https://leetcode-cn.com/problems/numbers-at-most-n-given-digit-set/][902. Numbers At Most N Given Digit Set]] :Math:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/valid-permutations-for-di-sequence/][903. Valid Permutations for DI Sequence]] :DivideandConquer:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/fruit-into-baskets/][904. Fruit Into Baskets]] :TwoPointers:
** TODO [[https://leetcode-cn.com/problems/sort-array-by-parity/][905. Sort Array By Parity]] :Array:
** TODO [[https://leetcode-cn.com/problems/super-palindromes/][906. Super Palindromes]] :Math:
** TODO [[https://leetcode-cn.com/problems/sum-of-subarray-minimums/][907. Sum of Subarray Minimums]] :Stack:Array:
** TODO [[https://leetcode-cn.com/problems/smallest-range-i/][908. Smallest Range I]] :Math:
** TODO [[https://leetcode-cn.com/problems/snakes-and-ladders/][909. Snakes and Ladders]] :BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/smallest-range-ii/][910. Smallest Range II]] :Greedy:Math:
** TODO [[https://leetcode-cn.com/problems/online-election/][911. Online Election]] :BinarySearch:
** TODO [[https://leetcode-cn.com/problems/sort-an-array/][912. Sort an Array]] 
** TODO [[https://leetcode-cn.com/problems/cat-and-mouse/][913. Cat and Mouse]] :BreadthfirstSearch:Minimax:
** TODO [[https://leetcode-cn.com/problems/x-of-a-kind-in-a-deck-of-cards/][914. X of a Kind in a Deck of Cards]] :Array:Math:
** TODO [[https://leetcode-cn.com/problems/partition-array-into-disjoint-intervals/][915. Partition Array into Disjoint Intervals]] :Array:
** TODO [[https://leetcode-cn.com/problems/word-subsets/][916. Word Subsets]] :String:
** TODO [[https://leetcode-cn.com/problems/reverse-only-letters/][917. Reverse Only Letters]] :String:
** TODO [[https://leetcode-cn.com/problems/maximum-sum-circular-subarray/][918. Maximum Sum Circular Subarray]] :Array:
** TODO [[https://leetcode-cn.com/problems/complete-binary-tree-inserter/][919. Complete Binary Tree Inserter]] :Tree:
** TODO [[https://leetcode-cn.com/problems/number-of-music-playlists/][920. Number of Music Playlists]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/minimum-add-to-make-parentheses-valid/][921. Minimum Add to Make Parentheses Valid]] :Stack:Greedy:
** TODO [[https://leetcode-cn.com/problems/sort-array-by-parity-ii/][922. Sort Array By Parity II]] :Sort:Array:
** TODO [[https://leetcode-cn.com/problems/3sum-with-multiplicity/][923. 3Sum With Multiplicity]] :TwoPointers:
** TODO [[https://leetcode-cn.com/problems/minimize-malware-spread/][924. Minimize Malware Spread]] :DepthfirstSearch:UnionFind:
** TODO [[https://leetcode-cn.com/problems/long-pressed-name/][925. Long Pressed Name]] :TwoPointers:String:
** TODO [[https://leetcode-cn.com/problems/flip-string-to-monotone-increasing/][926. Flip String to Monotone Increasing]] :Array:
** TODO [[https://leetcode-cn.com/problems/three-equal-parts/][927. Three Equal Parts]] :Greedy:Math:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/minimize-malware-spread-ii/][928. Minimize Malware Spread II]] :DepthfirstSearch:UnionFind:Graph:
** TODO [[https://leetcode-cn.com/problems/unique-email-addresses/][929. Unique Email Addresses]] :String:
** TODO [[https://leetcode-cn.com/problems/binary-subarrays-with-sum/][930. Binary Subarrays With Sum]] :HashTable:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/minimum-falling-path-sum/][931. Minimum Falling Path Sum]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/beautiful-array/][932. Beautiful Array]] :DivideandConquer:
** TODO [[https://leetcode-cn.com/problems/number-of-recent-calls/][933. Number of Recent Calls]] :Queue:
** TODO [[https://leetcode-cn.com/problems/shortest-bridge/][934. Shortest Bridge]] :DepthfirstSearch:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/knight-dialer/][935. Knight Dialer]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/stamping-the-sequence/][936. Stamping The Sequence]] :Greedy:String:
** TODO [[https://leetcode-cn.com/problems/reorder-data-in-log-files/][937. Reorder Data in Log Files]] :String:
** TODO [[https://leetcode-cn.com/problems/range-sum-of-bst/][938. Range Sum of BST]] :Tree:Recursion:
** TODO [[https://leetcode-cn.com/problems/minimum-area-rectangle/][939. Minimum Area Rectangle]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/distinct-subsequences-ii/][940. Distinct Subsequences II]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/valid-mountain-array/][941. Valid Mountain Array]] :Array:
** TODO [[https://leetcode-cn.com/problems/di-string-match/][942. DI String Match]] :Math:
** TODO [[https://leetcode-cn.com/problems/find-the-shortest-superstring/][943. Find the Shortest Superstring]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/delete-columns-to-make-sorted/][944. Delete Columns to Make Sorted]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/minimum-increment-to-make-array-unique/][945. Minimum Increment to Make Array Unique]] :Array:
** TODO [[https://leetcode-cn.com/problems/validate-stack-sequences/][946. Validate Stack Sequences]] :Stack:
** TODO [[https://leetcode-cn.com/problems/most-stones-removed-with-same-row-or-column/][947. Most Stones Removed with Same Row or Column]] :DepthfirstSearch:UnionFind:
** TODO [[https://leetcode-cn.com/problems/bag-of-tokens/][948. Bag of Tokens]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/largest-time-for-given-digits/][949. Largest Time for Given Digits]] :Math:
** TODO [[https://leetcode-cn.com/problems/reveal-cards-in-increasing-order/][950. Reveal Cards In Increasing Order]] :Array:
** TODO [[https://leetcode-cn.com/problems/flip-equivalent-binary-trees/][951. Flip Equivalent Binary Trees]] :Tree:
** TODO [[https://leetcode-cn.com/problems/largest-component-size-by-common-factor/][952. Largest Component Size by Common Factor]] :UnionFind:Math:
** TODO [[https://leetcode-cn.com/problems/verifying-an-alien-dictionary/][953. Verifying an Alien Dictionary]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/array-of-doubled-pairs/][954. Array of Doubled Pairs]] :Array:HashTable:
** TODO [[https://leetcode-cn.com/problems/delete-columns-to-make-sorted-ii/][955. Delete Columns to Make Sorted II]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/tallest-billboard/][956. Tallest Billboard]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/prison-cells-after-n-days/][957. Prison Cells After N Days]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/check-completeness-of-a-binary-tree/][958. Check Completeness of a Binary Tree]] :Tree:
** TODO [[https://leetcode-cn.com/problems/regions-cut-by-slashes/][959. Regions Cut By Slashes]] :DepthfirstSearch:UnionFind:Graph:
** TODO [[https://leetcode-cn.com/problems/delete-columns-to-make-sorted-iii/][960. Delete Columns to Make Sorted III]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/n-repeated-element-in-size-2n-array/][961. N-Repeated Element in Size 2N Array]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/maximum-width-ramp/][962. Maximum Width Ramp]] :Array:
** TODO [[https://leetcode-cn.com/problems/minimum-area-rectangle-ii/][963. Minimum Area Rectangle II]] :Geometry:Math:
** TODO [[https://leetcode-cn.com/problems/least-operators-to-express-number/][964. Least Operators to Express Number]] :Math:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/univalued-binary-tree/][965. Univalued Binary Tree]] :Tree:
** TODO [[https://leetcode-cn.com/problems/vowel-spellchecker/][966. Vowel Spellchecker]] :HashTable:String:
** TODO [[https://leetcode-cn.com/problems/numbers-with-same-consecutive-differences/][967. Numbers With Same Consecutive Differences]] :DepthfirstSearch:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/binary-tree-cameras/][968. Binary Tree Cameras]] :Tree:DepthfirstSearch:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/pancake-sorting/][969. Pancake Sorting]] :Sort:Array:
** TODO [[https://leetcode-cn.com/problems/powerful-integers/][970. Powerful Integers]] :HashTable:Math:
** TODO [[https://leetcode-cn.com/problems/flip-binary-tree-to-match-preorder-traversal/][971. Flip Binary Tree To Match Preorder Traversal]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/equal-rational-numbers/][972. Equal Rational Numbers]] :Math:
** TODO [[https://leetcode-cn.com/problems/fibonacci-number/][509. Fibonacci Number]] :Array:
** TODO [[https://leetcode-cn.com/problems/k-closest-points-to-origin/][973. K Closest Points to Origin]] :Heap:Sort:DivideandConquer:
** TODO [[https://leetcode-cn.com/problems/subarray-sums-divisible-by-k/][974. Subarray Sums Divisible by K]] :Array:HashTable:
** TODO [[https://leetcode-cn.com/problems/odd-even-jump/][975. Odd Even Jump]] :Stack:DynamicProgramming:OrderedMap:
** TODO [[https://leetcode-cn.com/problems/largest-perimeter-triangle/][976. Largest Perimeter Triangle]] :Sort:Math:
** TODO [[https://leetcode-cn.com/problems/squares-of-a-sorted-array/][977. Squares of a Sorted Array]] :Array:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/longest-turbulent-subarray/][978. Longest Turbulent Subarray]] :Array:DynamicProgramming:SlidingWindow:
** TODO [[https://leetcode-cn.com/problems/distribute-coins-in-binary-tree/][979. Distribute Coins in Binary Tree]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/unique-paths-iii/][980. Unique Paths III]] :DepthfirstSearch:Backtracking:
** TODO [[https://leetcode-cn.com/problems/time-based-key-value-store/][981. Time Based Key-Value Store]] :HashTable:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/triples-with-bitwise-and-equal-to-zero/][982. Triples with Bitwise AND Equal To Zero]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/minimum-cost-for-tickets/][983. Minimum Cost For Tickets]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/string-without-aaa-or-bbb/][984. String Without AAA or BBB]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/sum-of-even-numbers-after-queries/][985. Sum of Even Numbers After Queries]] :Array:
** TODO [[https://leetcode-cn.com/problems/interval-list-intersections/][986. Interval List Intersections]] :TwoPointers:
** TODO [[https://leetcode-cn.com/problems/vertical-order-traversal-of-a-binary-tree/][987. Vertical Order Traversal of a Binary Tree]] :Tree:HashTable:
** TODO [[https://leetcode-cn.com/problems/smallest-string-starting-from-leaf/][988. Smallest String Starting From Leaf]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/add-to-array-form-of-integer/][989. Add to Array-Form of Integer]] :Array:
** TODO [[https://leetcode-cn.com/problems/satisfiability-of-equality-equations/][990. Satisfiability of Equality Equations]] :UnionFind:Graph:
** TODO [[https://leetcode-cn.com/problems/broken-calculator/][991. Broken Calculator]] :Greedy:Math:
** TODO [[https://leetcode-cn.com/problems/subarrays-with-k-different-integers/][992. Subarrays with K Different Integers]] :HashTable:TwoPointers:SlidingWindow:
** TODO [[https://leetcode-cn.com/problems/cousins-in-binary-tree/][993. Cousins in Binary Tree]] :Tree:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/rotting-oranges/][994. Rotting Oranges]] :BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/minimum-number-of-k-consecutive-bit-flips/][995. Minimum Number of K Consecutive Bit Flips]] :Greedy:SlidingWindow:
** TODO [[https://leetcode-cn.com/problems/number-of-squareful-arrays/][996. Number of Squareful Arrays]] :Graph:Math:Backtracking:
** TODO [[https://leetcode-cn.com/problems/find-the-town-judge/][997. Find the Town Judge]] :Graph:
** TODO [[https://leetcode-cn.com/problems/maximum-binary-tree-ii/][998. Maximum Binary Tree II]] :Tree:
** TODO [[https://leetcode-cn.com/problems/available-captures-for-rook/][999. Available Captures for Rook]] :Array:
** TODO [[https://leetcode-cn.com/problems/minimum-cost-to-merge-stones/][1000. Minimum Cost to Merge Stones]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/grid-illumination/][1001. Grid Illumination]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/find-common-characters/][1002. Find Common Characters]] :Array:HashTable:
** TODO [[https://leetcode-cn.com/problems/check-if-word-is-valid-after-substitutions/][1003. Check If Word Is Valid After Substitutions]] :Stack:String:
** TODO [[https://leetcode-cn.com/problems/max-consecutive-ones-iii/][1004. Max Consecutive Ones III]] :TwoPointers:SlidingWindow:
** TODO [[https://leetcode-cn.com/problems/maximize-sum-of-array-after-k-negations/][1005. Maximize Sum Of Array After K Negations]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/clumsy-factorial/][1006. Clumsy Factorial]] :Math:
** TODO [[https://leetcode-cn.com/problems/minimum-domino-rotations-for-equal-row/][1007. Minimum Domino Rotations For Equal Row]] :Greedy:Array:
** TODO [[https://leetcode-cn.com/problems/construct-binary-search-tree-from-preorder-traversal/][1008. Construct Binary Search Tree from Preorder Traversal]] :Tree:
** TODO [[https://leetcode-cn.com/problems/shortest-way-to-form-string/][1055. Shortest Way to Form String]] :Greedy:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/campus-bikes/][1057. Campus Bikes]] :Greedy:Sort:
** TODO [[https://leetcode-cn.com/problems/minimize-rounding-error-to-meet-target/][1058. Minimize Rounding Error to Meet Target]] :Greedy:Math:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/complement-of-base-10-integer/][1009. Complement of Base 10 Integer]] :Math:
** TODO [[https://leetcode-cn.com/problems/pairs-of-songs-with-total-durations-divisible-by-60/][1010. Pairs of Songs With Total Durations Divisible by 60]] :Array:
** TODO [[https://leetcode-cn.com/problems/capacity-to-ship-packages-within-d-days/][1011. Capacity To Ship Packages Within D Days]] :Array:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/numbers-with-repeated-digits/][1012. Numbers With Repeated Digits]] :Math:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/lexicographically-smallest-equivalent-string/][1061. Lexicographically Smallest Equivalent String]] :DepthfirstSearch:UnionFind:
** TODO [[https://leetcode-cn.com/problems/missing-element-in-sorted-array/][1060. Missing Element in Sorted Array]] :BinarySearch:
** TODO [[https://leetcode-cn.com/problems/longest-repeating-substring/][1062. Longest Repeating Substring]] :String:
** TODO [[https://leetcode-cn.com/problems/number-of-valid-subarrays/][1063. Number of Valid Subarrays]] :Stack:
** TODO [[https://leetcode-cn.com/problems/partition-array-into-three-parts-with-equal-sum/][1013. Partition Array Into Three Parts With Equal Sum]] :Array:
** TODO [[https://leetcode-cn.com/problems/best-sightseeing-pair/][1014. Best Sightseeing Pair]] :Array:
** TODO [[https://leetcode-cn.com/problems/smallest-integer-divisible-by-k/][1015. Smallest Integer Divisible by K]] :Math:
** TODO [[https://leetcode-cn.com/problems/binary-string-with-substrings-representing-1-to-n/][1016. Binary String With Substrings Representing 1 To N]] :String:
** TODO [[https://leetcode-cn.com/problems/fixed-point/][1064. Fixed Point]] :Array:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/campus-bikes-ii/][1066. Campus Bikes II]] :DynamicProgramming:Backtracking:
** TODO [[https://leetcode-cn.com/problems/digit-count-in-range/][1067. Digit Count in Range]] :Math:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/confusing-number/][1056. Confusing Number]] :Math:
** TODO [[https://leetcode-cn.com/problems/convert-to-base-2/][1017. Convert to Base -2]] :Math:
** TODO [[https://leetcode-cn.com/problems/binary-prefix-divisible-by-5/][1018. Binary Prefix Divisible By 5]] :Array:
** TODO [[https://leetcode-cn.com/problems/next-greater-node-in-linked-list/][1019. Next Greater Node In Linked List]] :Stack:LinkedList:
** TODO [[https://leetcode-cn.com/problems/number-of-enclaves/][1020. Number of Enclaves]] :DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/high-five/][1086. High Five]] :Sort:Array:HashTable:
** TODO [[https://leetcode-cn.com/problems/index-pairs-of-a-string/][1065. Index Pairs of a String]] :Trie:String:
** TODO [[https://leetcode-cn.com/problems/brace-expansion/][1087. Brace Expansion]] :Backtracking:
** TODO [[https://leetcode-cn.com/problems/confusing-number-ii/][1088. Confusing Number II]] :Math:Backtracking:
** TODO [[https://leetcode-cn.com/problems/remove-outermost-parentheses/][1021. Remove Outermost Parentheses]] :Stack:
** TODO [[https://leetcode-cn.com/problems/sum-of-root-to-leaf-binary-numbers/][1022. Sum of Root To Leaf Binary Numbers]] :Tree:
** TODO [[https://leetcode-cn.com/problems/camelcase-matching/][1023. Camelcase Matching]] :Trie:String:
** TODO [[https://leetcode-cn.com/problems/video-stitching/][1024. Video Stitching]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/sum-of-digits-in-the-minimum-number/][1085. Sum of Digits in the Minimum Number]] :Array:
** TODO [[https://leetcode-cn.com/problems/two-sum-less-than-k/][1099. Two Sum Less Than K]] :Array:
** TODO [[https://leetcode-cn.com/problems/find-k-length-substrings-with-no-repeated-characters/][1100. Find K-Length Substrings With No Repeated Characters]] :String:SlidingWindow:
** TODO [[https://leetcode-cn.com/problems/the-earliest-moment-when-everyone-become-friends/][1101. The Earliest Moment When Everyone Become Friends]] :UnionFind:
** TODO [[https://leetcode-cn.com/problems/divisor-game/][1025. Divisor Game]] :Math:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/longest-arithmetic-subsequence/][1027. Longest Arithmetic Subsequence]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/number-of-days-in-a-month/][1118. Number of Days in a Month]] 
** TODO [[https://leetcode-cn.com/problems/remove-vowels-from-a-string/][1119. Remove Vowels from a String]] :String:
** TODO [[https://leetcode-cn.com/problems/armstrong-number/][1134. Armstrong Number]] :Math:
** TODO [[https://leetcode-cn.com/problems/maximum-average-subtree/][1120. Maximum Average Subtree]] :Tree:
** TODO [[https://leetcode-cn.com/problems/maximum-difference-between-node-and-ancestor/][1026. Maximum Difference Between Node and Ancestor]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/recover-a-tree-from-preorder-traversal/][1028. Recover a Tree From Preorder Traversal]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/matrix-cells-in-distance-order/][1030. Matrix Cells in Distance Order]] :Sort:
** TODO [[https://leetcode-cn.com/problems/two-city-scheduling/][1029. Two City Scheduling]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/maximum-sum-of-two-non-overlapping-subarrays/][1031. Maximum Sum of Two Non-Overlapping Subarrays]] :Array:
** TODO [[https://leetcode-cn.com/problems/stream-of-characters/][1032. Stream of Characters]] :Trie:
** TODO [[https://leetcode-cn.com/problems/largest-unique-number/][1133. Largest Unique Number]] :Array:HashTable:
** TODO [[https://leetcode-cn.com/problems/path-with-maximum-minimum-value/][1102. Path With Maximum Minimum Value]] :DepthfirstSearch:UnionFind:Graph:
** TODO [[https://leetcode-cn.com/problems/connecting-cities-with-minimum-cost/][1135. Connecting Cities With Minimum Cost]] :UnionFind:Graph:
** TODO [[https://leetcode-cn.com/problems/parallel-courses/][1136. Parallel Courses]] :DepthfirstSearch:Graph:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/check-if-a-number-is-majority-element-in-a-sorted-array/][1150. Check If a Number Is Majority Element in a Sorted Array]] :Array:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/moving-stones-until-consecutive/][1033. Moving Stones Until Consecutive]] :Brainteaser:
** TODO [[https://leetcode-cn.com/problems/coloring-a-border/][1034. Coloring A Border]] :DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/uncrossed-lines/][1035. Uncrossed Lines]] :Array:
** TODO [[https://leetcode-cn.com/problems/escape-a-large-maze/][1036. Escape a Large Maze]] :BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/minimum-swaps-to-group-all-1s-together/][1151. Minimum Swaps to Group All 1's Together]] :Array:SlidingWindow:
** TODO [[https://leetcode-cn.com/problems/analyze-user-website-visit-pattern/][1152. Analyze User Website Visit Pattern]] :Sort:Array:HashTable:
** TODO [[https://leetcode-cn.com/problems/minimum-score-triangulation-of-polygon/][1039. Minimum Score Triangulation of Polygon]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/find-words-that-can-be-formed-by-characters/][1160. Find Words That Can Be Formed by Characters]] :Array:HashTable:
** TODO [[https://leetcode-cn.com/problems/moving-stones-until-consecutive-ii/][1040. Moving Stones Until Consecutive II]] :Array:SlidingWindow:
** TODO [[https://leetcode-cn.com/problems/binary-search-tree-to-greater-sum-tree/][1038. Binary Search Tree to Greater Sum Tree]] :BinarySearchTree:
** TODO [[https://leetcode-cn.com/problems/valid-boomerang/][1037. Valid Boomerang]] :Math:
** TODO [[https://leetcode-cn.com/problems/maximum-level-sum-of-a-binary-tree/][1161. Maximum Level Sum of a Binary Tree]] :Tree:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/as-far-from-land-as-possible/][1162. As Far from Land as Possible]] :BreadthfirstSearch:Graph:
** TODO [[https://leetcode-cn.com/problems/divide-array-into-increasing-sequences/][1121. Divide Array Into Increasing Sequences]] :Math:
** TODO [[https://leetcode-cn.com/problems/robot-bounded-in-circle/][1041. Robot Bounded In Circle]] :Math:
** TODO [[https://leetcode-cn.com/problems/flower-planting-with-no-adjacent/][1042. Flower Planting With No Adjacent]] :Graph:
** TODO [[https://leetcode-cn.com/problems/partition-array-for-maximum-sum/][1043. Partition Array for Maximum Sum]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/longest-duplicate-substring/][1044. Longest Duplicate Substring]] :HashTable:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/single-row-keyboard/][1165. Single-Row Keyboard]] :String:
** TODO [[https://leetcode-cn.com/problems/string-transforms-into-another-string/][1153. String Transforms Into Another String]] :Graph:
** TODO [[https://leetcode-cn.com/problems/design-file-system/][1166. Design File System]] :Design:HashTable:
** TODO [[https://leetcode-cn.com/problems/minimum-cost-to-connect-sticks/][1167. Minimum Cost to Connect Sticks]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/last-stone-weight/][1046. Last Stone Weight]] :Heap:Greedy:
** TODO [[https://leetcode-cn.com/problems/remove-all-adjacent-duplicates-in-string/][1047. Remove All Adjacent Duplicates In String]] :Stack:
** TODO [[https://leetcode-cn.com/problems/longest-string-chain/][1048. Longest String Chain]] :HashTable:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/last-stone-weight-ii/][1049. Last Stone Weight II]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/count-substrings-with-only-one-distinct-letter/][1180. Count Substrings with Only One Distinct Letter]] :Math:String:
** TODO [[https://leetcode-cn.com/problems/before-and-after-puzzle/][1181. Before and After Puzzle]] :String:
** TODO [[https://leetcode-cn.com/problems/last-substring-in-lexicographical-order/][1163. Last Substring in Lexicographical Order]] :String:
** TODO [[https://leetcode-cn.com/problems/shortest-distance-to-target-color/][1182. Shortest Distance to Target Color]] :BinarySearch:
** TODO [[https://leetcode-cn.com/problems/customers-who-bought-all-products/][1045. Customers Who Bought All Products]] 
** TODO [[https://leetcode-cn.com/problems/actors-and-directors-who-cooperated-at-least-three-times/][1050. Actors and Directors Who Cooperated At Least Three Times]] 
** TODO [[https://leetcode-cn.com/problems/height-checker/][1051. Height Checker]] :Array:
** TODO [[https://leetcode-cn.com/problems/grumpy-bookstore-owner/][1052. Grumpy Bookstore Owner]] :Array:SlidingWindow:
** TODO [[https://leetcode-cn.com/problems/previous-permutation-with-one-swap/][1053. Previous Permutation With One Swap]] :Greedy:Array:
** TODO [[https://leetcode-cn.com/problems/distant-barcodes/][1054. Distant Barcodes]] :Heap:Sort:
** TODO [[https://leetcode-cn.com/problems/how-many-apples-can-you-put-into-the-basket/][1196. How Many Apples Can You Put into the Basket]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/minimum-knight-moves/][1197. Minimum Knight Moves]] :BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/find-smallest-common-element-in-all-rows/][1198. Find Smallest Common Element in All Rows]] :HashTable:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/optimize-water-distribution-in-a-village/][1168. Optimize Water Distribution in a Village]] :UnionFind:Graph:
** TODO [[https://leetcode-cn.com/problems/number-of-submatrices-that-sum-to-target/][1074. Number of Submatrices That Sum to Target]] :Array:DynamicProgramming:SlidingWindow:
** TODO [[https://leetcode-cn.com/problems/greatest-common-divisor-of-strings/][1071. Greatest Common Divisor of Strings]] :String:
** TODO [[https://leetcode-cn.com/problems/flip-columns-for-maximum-number-of-equal-rows/][1072. Flip Columns For Maximum Number of Equal Rows]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/adding-two-negabinary-numbers/][1073. Adding Two Negabinary Numbers]] :Math:
** TODO [[https://leetcode-cn.com/problems/intersection-of-three-sorted-arrays/][1213. Intersection of Three Sorted Arrays]] :HashTable:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/two-sum-bsts/][1214. Two Sum BSTs]] :BinarySearchTree:
** TODO [[https://leetcode-cn.com/problems/stepping-numbers/][1215. Stepping Numbers]] :Backtracking:
** TODO [[https://leetcode-cn.com/problems/maximum-number-of-ones/][1183. Maximum Number of Ones]] :Sort:Math:
** TODO [[https://leetcode-cn.com/problems/product-sales-analysis-i/][1068. Product Sales Analysis I]] 
** TODO [[https://leetcode-cn.com/problems/product-sales-analysis-ii/][1069. Product Sales Analysis II]] 
** TODO [[https://leetcode-cn.com/problems/product-sales-analysis-iii/][1070. Product Sales Analysis III]] 
** TODO [[https://leetcode-cn.com/problems/occurrences-after-bigram/][1078. Occurrences After Bigram]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/insufficient-nodes-in-root-to-leaf-paths/][1080. Insufficient Nodes in Root to Leaf Paths]] :DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/smallest-subsequence-of-distinct-characters/][1081. Smallest Subsequence of Distinct Characters]] :Stack:Greedy:String:
** TODO [[https://leetcode-cn.com/problems/letter-tile-possibilities/][1079. Letter Tile Possibilities]] :Backtracking:
** TODO [[https://leetcode-cn.com/problems/project-employees-i/][1075. Project Employees I]] 
** TODO [[https://leetcode-cn.com/problems/project-employees-ii/][1076. Project Employees II]] 
** TODO [[https://leetcode-cn.com/problems/project-employees-iii/][1077. Project Employees III]] 
** TODO [[https://leetcode-cn.com/problems/missing-number-in-arithmetic-progression/][1228. Missing Number In Arithmetic Progression]] :Math:
** TODO [[https://leetcode-cn.com/problems/meeting-scheduler/][1229. Meeting Scheduler]] :LineSweep:
** TODO [[https://leetcode-cn.com/problems/toss-strange-coins/][1230. Toss Strange Coins]] :Math:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/minimum-time-to-build-blocks/][1199. Minimum Time to Build Blocks]] :Math:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/duplicate-zeros/][1089. Duplicate Zeros]] :Array:
** TODO [[https://leetcode-cn.com/problems/largest-values-from-labels/][1090. Largest Values From Labels]] :Greedy:HashTable:
** TODO [[https://leetcode-cn.com/problems/shortest-common-supersequence/][1092. Shortest Common Supersequence ]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/shortest-path-in-binary-matrix/][1091. Shortest Path in Binary Matrix]] :BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/sales-analysis-i/][1082. Sales Analysis I]] 
** TODO [[https://leetcode-cn.com/problems/sales-analysis-ii/][1083. Sales Analysis II]] 
** TODO [[https://leetcode-cn.com/problems/sales-analysis-iii/][1084. Sales Analysis III]] 
** TODO [[https://leetcode-cn.com/problems/array-transformation/][1243. Array Transformation]] :Array:
** TODO [[https://leetcode-cn.com/problems/design-a-leaderboard/][1244. Design A Leaderboard]] :Sort:Design:HashTable:
** TODO [[https://leetcode-cn.com/problems/tree-diameter/][1245. Tree Diameter]] :Tree:DepthfirstSearch:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/valid-palindrome-iii/][1216. Valid Palindrome III]] :String:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/game-play-analysis-i/][511. Game Play Analysis I]] 
** TODO [[https://leetcode-cn.com/problems/game-play-analysis-ii/][512. Game Play Analysis II]] 
** TODO [[https://leetcode-cn.com/problems/game-play-analysis-iii/][534. Game Play Analysis III]] 
** TODO [[https://leetcode-cn.com/problems/game-play-analysis-iv/][550. Game Play Analysis IV]] 
** TODO [[https://leetcode-cn.com/problems/statistics-from-a-large-sample/][1093. Statistics from a Large Sample]] :Math:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/car-pooling/][1094. Car Pooling]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/find-in-mountain-array/][1095. Find in Mountain Array]] :BinarySearch:
** TODO [[https://leetcode-cn.com/problems/building-h2o/][1117. Building H2O]] 
** TODO [[https://leetcode-cn.com/problems/print-foobar-alternately/][1115. Print FooBar Alternately]] 
** TODO [[https://leetcode-cn.com/problems/brace-expansion-ii/][1096. Brace Expansion II]] :String:
** TODO [[https://leetcode-cn.com/problems/encode-number/][1256. Encode Number]] :BitManipulation:Math:
** TODO [[https://leetcode-cn.com/problems/smallest-common-region/][1257. Smallest Common Region]] :Tree:
** TODO [[https://leetcode-cn.com/problems/synonymous-sentences/][1258. Synonymous Sentences]] :Backtracking:
** TODO [[https://leetcode-cn.com/problems/divide-chocolate/][1231. Divide Chocolate]] :Greedy:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/game-play-analysis-v/][1097. Game Play Analysis V]] 
** TODO [[https://leetcode-cn.com/problems/path-in-zigzag-labelled-binary-tree/][1104. Path In Zigzag Labelled Binary Tree]] :Tree:Math:
** TODO [[https://leetcode-cn.com/problems/distribute-candies-to-people/][1103. Distribute Candies to People]] :Math:
** TODO [[https://leetcode-cn.com/problems/filling-bookcase-shelves/][1105. Filling Bookcase Shelves]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/parsing-a-boolean-expression/][1106. Parsing A Boolean Expression]] :String:
** TODO [[https://leetcode-cn.com/problems/unpopular-books/][1098. Unpopular Books]] 
** TODO [[https://leetcode-cn.com/problems/hexspeak/][1271. Hexspeak]] :Math:String:
** TODO [[https://leetcode-cn.com/problems/remove-interval/][1272. Remove Interval]] :Math:LineSweep:
** TODO [[https://leetcode-cn.com/problems/delete-tree-nodes/][1273. Delete Tree Nodes]] :DepthfirstSearch:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/palindrome-removal/][1246. Palindrome Removal]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/print-in-order/][1114. Print in Order]] 
** TODO [[https://leetcode-cn.com/problems/new-users-daily-count/][1107. New Users Daily Count]] 
** TODO [[https://leetcode-cn.com/problems/defanging-an-ip-address/][1108. Defanging an IP Address]] :String:
** TODO [[https://leetcode-cn.com/problems/corporate-flight-bookings/][1109. Corporate Flight Bookings]] :Array:Math:
** TODO [[https://leetcode-cn.com/problems/delete-nodes-and-return-forest/][1110. Delete Nodes And Return Forest]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/maximum-nesting-depth-of-two-valid-parentheses-strings/][1111. Maximum Nesting Depth of Two Valid Parentheses Strings]] :Greedy:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/design-bounded-blocking-queue/][1188. Design Bounded Blocking Queue]] 
** TODO [[https://leetcode-cn.com/problems/iterator-for-combination/][1286. Iterator for Combination]] :Design:Backtracking:
** TODO [[https://leetcode-cn.com/problems/sequential-digits/][1291. Sequential Digits]] :Backtracking:
** TODO [[https://leetcode-cn.com/problems/handshakes-that-dont-cross/][1259. Handshakes That Don't Cross]] :Math:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/highest-grade-for-each-student/][1112. Highest Grade For Each Student]] 
** TODO [[https://leetcode-cn.com/problems/reported-posts/][1113. Reported Posts]] 
** TODO [[https://leetcode-cn.com/problems/print-zero-even-odd/][1116. Print Zero Even Odd]] 
** TODO [[https://leetcode-cn.com/problems/relative-sort-array/][1122. Relative Sort Array]] :Sort:Array:
** TODO [[https://leetcode-cn.com/problems/lowest-common-ancestor-of-deepest-leaves/][1123. Lowest Common Ancestor of Deepest Leaves]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/longest-well-performing-interval/][1124. Longest Well-Performing Interval]] :Stack:
** TODO [[https://leetcode-cn.com/problems/smallest-sufficient-team/][1125. Smallest Sufficient Team]] :BitManipulation:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/element-appearing-more-than-25-in-sorted-array/][1287. Element Appearing More Than 25% In Sorted Array]] :Array:
** TODO [[https://leetcode-cn.com/problems/remove-covered-intervals/][1288. Remove Covered Intervals]] :Greedy:Sort:LineSweep:
** TODO [[https://leetcode-cn.com/problems/minimum-falling-path-sum-ii/][1289. Minimum Falling Path Sum II]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/active-businesses/][1126. Active Businesses]] 
** TODO [[https://leetcode-cn.com/problems/user-purchase-platform/][1127. User Purchase Platform]] 
** TODO [[https://leetcode-cn.com/problems/number-of-equivalent-domino-pairs/][1128. Number of Equivalent Domino Pairs]] :Array:
** TODO [[https://leetcode-cn.com/problems/minimum-cost-tree-from-leaf-values/][1130. Minimum Cost Tree From Leaf Values]] :Stack:Tree:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/shortest-path-with-alternating-colors/][1129. Shortest Path with Alternating Colors]] :BreadthfirstSearch:Graph:
** TODO [[https://leetcode-cn.com/problems/maximum-of-absolute-value-expression/][1131. Maximum of Absolute Value Expression]] :BitManipulation:Math:
** TODO [[https://leetcode-cn.com/problems/replace-elements-with-greatest-element-on-right-side/][1299. Replace Elements with Greatest Element on Right Side]] :Array:
** TODO [[https://leetcode-cn.com/problems/sum-of-mutated-array-closest-to-target/][1300. Sum of Mutated Array Closest to Target]] :Array:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/number-of-ships-in-a-rectangle/][1274. Number of Ships in a Rectangle]] :DivideandConquer:
** TODO [[https://leetcode-cn.com/problems/number-of-paths-with-max-score/][1301. Number of Paths with Max Score]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/n-th-tribonacci-number/][1137. N-th Tribonacci Number]] :Recursion:
** TODO [[https://leetcode-cn.com/problems/reported-posts-ii/][1132. Reported Posts II]] 
** TODO [[https://leetcode-cn.com/problems/alphabet-board-path/][1138. Alphabet Board Path]] :HashTable:String:
** TODO [[https://leetcode-cn.com/problems/largest-1-bordered-square/][1139. Largest 1-Bordered Square]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/stone-game-ii/][1140. Stone Game II]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/decompress-run-length-encoded-list/][1313. Decompress Run-Length Encoded List]] :Array:
** TODO [[https://leetcode-cn.com/problems/matrix-block-sum/][1314. Matrix Block Sum]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/sum-of-nodes-with-even-valued-grandparent/][1315. Sum of Nodes with Even-Valued Grandparent]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/distinct-echo-substrings/][1316. Distinct Echo Substrings]] :String:
** TODO [[https://leetcode-cn.com/problems/user-activity-for-the-past-30-days-i/][1141. User Activity for the Past 30 Days I]] 
** TODO [[https://leetcode-cn.com/problems/user-activity-for-the-past-30-days-ii/][1142. User Activity for the Past 30 Days II]] 
** TODO [[https://leetcode-cn.com/problems/decrease-elements-to-make-array-zigzag/][1144. Decrease Elements To Make Array Zigzag]] :Array:
** TODO [[https://leetcode-cn.com/problems/binary-tree-coloring-game/][1145. Binary Tree Coloring Game]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/snapshot-array/][1146. Snapshot Array]] :Array:
** TODO [[https://leetcode-cn.com/problems/longest-common-subsequence/][1143. Longest Common Subsequence]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/longest-chunked-palindrome-decomposition/][1147. Longest Chunked Palindrome Decomposition]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/break-a-palindrome/][1328. Break a Palindrome]] :String:
** TODO [[https://leetcode-cn.com/problems/sort-the-matrix-diagonally/][1329. Sort the Matrix Diagonally]] :Sort:Array:
** TODO [[https://leetcode-cn.com/problems/deepest-leaves-sum/][1302. Deepest Leaves Sum]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/reverse-subarray-to-maximize-array-value/][1330. Reverse Subarray To Maximize Array Value]] :Array:Math:
** TODO [[https://leetcode-cn.com/problems/rank-transform-of-an-array/][1331. Rank Transform of an Array]] :Array:
** TODO [[https://leetcode-cn.com/problems/article-views-i/][1148. Article Views I]] 
** TODO [[https://leetcode-cn.com/problems/article-views-ii/][1149. Article Views II]] 
** TODO [[https://leetcode-cn.com/problems/day-of-the-year/][1154. Day of the Year]] :Math:
** TODO [[https://leetcode-cn.com/problems/swap-for-longest-repeated-character-substring/][1156. Swap For Longest Repeated Character Substring]] :String:
** TODO [[https://leetcode-cn.com/problems/online-majority-element-in-subarray/][1157. Online Majority Element In Subarray]] :SegmentTree:Array:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/number-of-dice-rolls-with-target-sum/][1155. Number of Dice Rolls With Target Sum]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/remove-zero-sum-consecutive-nodes-from-linked-list/][1171. Remove Zero Sum Consecutive Nodes from Linked List]] :LinkedList:
** TODO [[https://leetcode-cn.com/problems/market-analysis-i/][1158. Market Analysis I]] 
** TODO [[https://leetcode-cn.com/problems/market-analysis-ii/][1159. Market Analysis II]] 
** TODO [[https://leetcode-cn.com/problems/dinner-plate-stacks/][1172. Dinner Plate Stacks]] :Design:
** TODO [[https://leetcode-cn.com/problems/web-crawler/][1236. Web Crawler]] :DepthfirstSearch:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/invalid-transactions/][1169. Invalid Transactions]] :Array:String:
** TODO [[https://leetcode-cn.com/problems/compare-strings-by-frequency-of-the-smallest-character/][1170. Compare Strings by Frequency of the Smallest Character]] :Array:String:
** TODO [[https://leetcode-cn.com/problems/number-of-days-between-two-dates/][1360. Number of Days Between Two Dates]] 
** TODO [[https://leetcode-cn.com/problems/validate-binary-tree-nodes/][1361. Validate Binary Tree Nodes]] :Graph:
** TODO [[https://leetcode-cn.com/problems/closest-divisors/][1362. Closest Divisors]] :Math:
** TODO [[https://leetcode-cn.com/problems/largest-multiple-of-three/][1363. Largest Multiple of Three]] :Math:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/product-price-at-a-given-date/][1164. Product Price at a Given Date]] 
** TODO [[https://leetcode-cn.com/problems/prime-arrangements/][1175. Prime Arrangements]] :Math:
** TODO [[https://leetcode-cn.com/problems/diet-plan-performance/][1176. Diet Plan Performance]] :Array:SlidingWindow:
** TODO [[https://leetcode-cn.com/problems/can-make-palindrome-from-substring/][1177. Can Make Palindrome from Substring]] :Array:String:
** TODO [[https://leetcode-cn.com/problems/number-of-valid-words-for-each-puzzle/][1178. Number of Valid Words for Each Puzzle]] :BitManipulation:HashTable:
** TODO [[https://leetcode-cn.com/problems/reformat-date/][1507. Reformat Date]] :String:
** TODO [[https://leetcode-cn.com/problems/four-divisors/][1390. Four Divisors]] :Math:
** TODO [[https://leetcode-cn.com/problems/balance-a-binary-search-tree/][1382. Balance a Binary Search Tree]] :BinarySearchTree:
** TODO [[https://leetcode-cn.com/problems/constrained-subsequence-sum/][1425. Constrained Subsequence Sum]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/distance-between-bus-stops/][1184. Distance Between Bus Stops]] :Array:
** TODO [[https://leetcode-cn.com/problems/maximum-subarray-sum-with-one-deletion/][1186. Maximum Subarray Sum with One Deletion]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/day-of-the-week/][1185. Day of the Week]] :Array:
** TODO [[https://leetcode-cn.com/problems/make-array-strictly-increasing/][1187. Make Array Strictly Increasing]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/immediate-food-delivery-i/][1173. Immediate Food Delivery I]] 
** TODO [[https://leetcode-cn.com/problems/immediate-food-delivery-ii/][1174. Immediate Food Delivery II]] 
** TODO [[https://leetcode-cn.com/problems/three-consecutive-odds/][1550. Three Consecutive Odds]] :Array:
** TODO [[https://leetcode-cn.com/problems/kth-ancestor-of-a-tree-node/][1483. Kth Ancestor of a Tree Node]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/maximum-number-of-balloons/][1189. Maximum Number of Balloons]] :HashTable:String:
** TODO [[https://leetcode-cn.com/problems/reverse-substrings-between-each-pair-of-parentheses/][1190. Reverse Substrings Between Each Pair of Parentheses]] :Stack:
** TODO [[https://leetcode-cn.com/problems/k-concatenation-maximum-sum/][1191. K-Concatenation Maximum Sum]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/critical-connections-in-a-network/][1192. Critical Connections in a Network]] :DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/reformat-department-table/][1179. Reformat Department Table]] 
** TODO [[https://leetcode-cn.com/problems/longest-happy-string/][1405. Longest Happy String]] :Greedy:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/minimum-absolute-difference/][1200. Minimum Absolute Difference]] :Array:
** TODO [[https://leetcode-cn.com/problems/ugly-number-iii/][1201. Ugly Number III]] :Math:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/smallest-string-with-swaps/][1202. Smallest String With Swaps]] :UnionFind:Array:
** TODO [[https://leetcode-cn.com/problems/sort-items-by-groups-respecting-dependencies/][1203. Sort Items by Groups Respecting Dependencies]] :DepthfirstSearch:Graph:TopologicalSort:
** TODO [[https://leetcode-cn.com/problems/fizz-buzz-multithreaded/][1195. Fizz Buzz Multithreaded]] 
** TODO [[https://leetcode-cn.com/problems/monthly-transactions-i/][1193. Monthly Transactions I]] 
** TODO [[https://leetcode-cn.com/problems/tournament-winners/][1194. Tournament Winners]] 
** TODO [[https://leetcode-cn.com/problems/unique-number-of-occurrences/][1207. Unique Number of Occurrences]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/remove-all-adjacent-duplicates-in-string-ii/][1209. Remove All Adjacent Duplicates in String II]] :Stack:
** TODO [[https://leetcode-cn.com/problems/get-equal-substrings-within-budget/][1208. Get Equal Substrings Within Budget]] :Array:SlidingWindow:
** TODO [[https://leetcode-cn.com/problems/minimum-moves-to-reach-target-with-rotations/][1210. Minimum Moves to Reach Target with Rotations]] :BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/path-with-maximum-probability/][1514. Path with Maximum Probability]] :Graph:
** TODO [[https://leetcode-cn.com/problems/last-person-to-fit-in-the-elevator/][1204. Last Person to Fit in the Elevator]] 
** TODO [[https://leetcode-cn.com/problems/monthly-transactions-ii/][1205. Monthly Transactions II]] 
** TODO [[https://leetcode-cn.com/problems/minimum-cost-to-move-chips-to-the-same-position/][1217. Minimum Cost to Move Chips to The Same Position]] :Greedy:Array:Math:
** TODO [[https://leetcode-cn.com/problems/longest-arithmetic-subsequence-of-given-difference/][1218. Longest Arithmetic Subsequence of Given Difference]] :Math:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/path-with-maximum-gold/][1219. Path with Maximum Gold]] :Backtracking:
** TODO [[https://leetcode-cn.com/problems/count-vowels-permutation/][1220. Count Vowels Permutation]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/design-skiplist/][1206. Design Skiplist]] :Design:
** TODO [[https://leetcode-cn.com/problems/queries-quality-and-percentage/][1211. Queries Quality and Percentage]] 
** TODO [[https://leetcode-cn.com/problems/team-scores-in-football-tournament/][1212. Team Scores in Football Tournament]] 
** TODO [[https://leetcode-cn.com/problems/the-dining-philosophers/][1226. The Dining Philosophers]] 
** TODO [[https://leetcode-cn.com/problems/split-a-string-in-balanced-strings/][1221. Split a String in Balanced Strings]] :Greedy:String:
** TODO [[https://leetcode-cn.com/problems/queens-that-can-attack-the-king/][1222. Queens That Can Attack the King]] :Array:
** TODO [[https://leetcode-cn.com/problems/dice-roll-simulation/][1223. Dice Roll Simulation]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/maximum-equal-frequency/][1224. Maximum Equal Frequency]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/perform-string-shifts/][1427. Perform String Shifts]] :Array:Math:
** TODO [[https://leetcode-cn.com/problems/check-if-it-is-a-straight-line/][1232. Check If It Is a Straight Line]] :Geometry:Array:Math:
** TODO [[https://leetcode-cn.com/problems/remove-sub-folders-from-the-filesystem/][1233. Remove Sub-Folders from the Filesystem]] :Array:String:
** TODO [[https://leetcode-cn.com/problems/replace-the-substring-for-balanced-string/][1234. Replace the Substring for Balanced String]] :TwoPointers:String:
** TODO [[https://leetcode-cn.com/problems/maximum-profit-in-job-scheduling/][1235. Maximum Profit in Job Scheduling]] :Sort:BinarySearch:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/report-contiguous-dates/][1225. Report Contiguous Dates]] 
** TODO [[https://leetcode-cn.com/problems/find-positive-integer-solution-for-a-given-equation/][1237. Find Positive Integer Solution for a Given Equation]] :Math:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/circular-permutation-in-binary-representation/][1238. Circular Permutation in Binary Representation]] :Math:
** TODO [[https://leetcode-cn.com/problems/maximum-length-of-a-concatenated-string-with-unique-characters/][1239. Maximum Length of a Concatenated String with Unique Characters]] :BitManipulation:Backtracking:
** TODO [[https://leetcode-cn.com/problems/tiling-a-rectangle-with-the-fewest-squares/][1240. Tiling a Rectangle with the Fewest Squares]] :DynamicProgramming:Backtracking:
** TODO [[https://leetcode-cn.com/problems/airplane-seat-assignment-probability/][1227. Airplane Seat Assignment Probability]] :Brainteaser:Math:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/first-unique-number/][1429. First Unique Number]] :Design:HashTable:
** TODO [[https://leetcode-cn.com/problems/web-crawler-multithreaded/][1242. Web Crawler Multithreaded]] :DepthfirstSearch:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/minimum-swaps-to-make-strings-equal/][1247. Minimum Swaps to Make Strings Equal]] :Greedy:String:
** TODO [[https://leetcode-cn.com/problems/count-number-of-nice-subarrays/][1248. Count Number of Nice Subarrays]] :TwoPointers:
** TODO [[https://leetcode-cn.com/problems/minimum-remove-to-make-valid-parentheses/][1249. Minimum Remove to Make Valid Parentheses]] :Stack:String:
** TODO [[https://leetcode-cn.com/problems/check-if-it-is-a-good-array/][1250. Check If It Is a Good Array]] :Math:
** TODO [[https://leetcode-cn.com/problems/leftmost-column-with-at-least-a-one/][1428. Leftmost Column with at Least a One]] :Array:
** TODO [[https://leetcode-cn.com/problems/number-of-comments-per-post/][1241. Number of Comments per Post]] 
** TODO [[https://leetcode-cn.com/problems/cells-with-odd-values-in-a-matrix/][1252. Cells with Odd Values in a Matrix]] :Array:
** TODO [[https://leetcode-cn.com/problems/reconstruct-a-2-row-binary-matrix/][1253. Reconstruct a 2-Row Binary Matrix]] :Greedy:Math:
** TODO [[https://leetcode-cn.com/problems/number-of-closed-islands/][1254. Number of Closed Islands]] :DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/maximum-score-words-formed-by-letters/][1255. Maximum Score Words Formed by Letters]] :BitManipulation:
** TODO [[https://leetcode-cn.com/problems/shift-2d-grid/][1260. Shift 2D Grid]] :Array:
** TODO [[https://leetcode-cn.com/problems/find-elements-in-a-contaminated-binary-tree/][1261. Find Elements in a Contaminated Binary Tree]] :Tree:HashTable:
** TODO [[https://leetcode-cn.com/problems/greatest-sum-divisible-by-three/][1262. Greatest Sum Divisible by Three]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/minimum-moves-to-move-a-box-to-their-target-location/][1263. Minimum Moves to Move a Box to Their Target Location]] :BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/average-selling-price/][1251. Average Selling Price]] 
** TODO [[https://leetcode-cn.com/problems/counting-elements/][1426. Counting Elements]] :Array:
** TODO [[https://leetcode-cn.com/problems/minimum-time-visiting-all-points/][1266. Minimum Time Visiting All Points]] :Geometry:Array:
** TODO [[https://leetcode-cn.com/problems/count-servers-that-communicate/][1267. Count Servers that Communicate]] :Graph:Array:
** TODO [[https://leetcode-cn.com/problems/search-suggestions-system/][1268. Search Suggestions System]] :String:
** TODO [[https://leetcode-cn.com/problems/number-of-ways-to-stay-in-the-same-place-after-some-steps/][1269. Number of Ways to Stay in the Same Place After Some Steps]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/page-recommendations/][1264. Page Recommendations]] 
** TODO [[https://leetcode-cn.com/problems/find-winner-on-a-tic-tac-toe-game/][1275. Find Winner on a Tic Tac Toe Game]] :Array:
** TODO [[https://leetcode-cn.com/problems/number-of-burgers-with-no-waste-of-ingredients/][1276. Number of Burgers with No Waste of Ingredients]] :Greedy:Math:
** TODO [[https://leetcode-cn.com/problems/count-square-submatrices-with-all-ones/][1277. Count Square Submatrices with All Ones]] :Array:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/palindrome-partitioning-iii/][1278. Palindrome Partitioning III]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/print-immutable-linked-list-in-reverse/][1265. Print Immutable Linked List in Reverse]] 
** TODO [[https://leetcode-cn.com/problems/all-people-report-to-the-given-manager/][1270. All People Report to the Given Manager]] 
** TODO [[https://leetcode-cn.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer/][1281. Subtract the Product and Sum of Digits of an Integer]] :Math:
** TODO [[https://leetcode-cn.com/problems/group-the-people-given-the-group-size-they-belong-to/][1282. Group the People Given the Group Size They Belong To]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/find-the-smallest-divisor-given-a-threshold/][1283. Find the Smallest Divisor Given a Threshold]] :BinarySearch:
** TODO [[https://leetcode-cn.com/problems/minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix/][1284. Minimum Number of Flips to Convert Binary Matrix to Zero Matrix]] :BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/traffic-light-controlled-intersection/][1279. Traffic Light Controlled Intersection]] 
** TODO [[https://leetcode-cn.com/problems/convert-binary-number-in-a-linked-list-to-integer/][1290. Convert Binary Number in a Linked List to Integer]] :BitManipulation:LinkedList:
** TODO [[https://leetcode-cn.com/problems/maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold/][1292. Maximum Side Length of a Square with Sum Less than or Equal to Threshold]] :Array:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/shortest-path-in-a-grid-with-obstacles-elimination/][1293. Shortest Path in a Grid with Obstacles Elimination]] :BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/students-and-examinations/][1280. Students and Examinations]] 
** TODO [[https://leetcode-cn.com/problems/find-the-start-and-end-number-of-continuous-ranges/][1285. Find the Start and End Number of Continuous Ranges]] 
** TODO [[https://leetcode-cn.com/problems/find-numbers-with-even-number-of-digits/][1295. Find Numbers with Even Number of Digits]] :Array:
** TODO [[https://leetcode-cn.com/problems/divide-array-in-sets-of-k-consecutive-numbers/][1296. Divide Array in Sets of K Consecutive Numbers]] :Greedy:Array:
** TODO [[https://leetcode-cn.com/problems/maximum-number-of-occurrences-of-a-substring/][1297. Maximum Number of Occurrences of a Substring]] :BitManipulation:String:
** TODO [[https://leetcode-cn.com/problems/maximum-candies-you-can-get-from-boxes/][1298. Maximum Candies You Can Get from Boxes]] :BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/weather-type-in-each-country/][1294. Weather Type in Each Country]] 
** TODO [[https://leetcode-cn.com/problems/find-n-unique-integers-sum-up-to-zero/][1304. Find N Unique Integers Sum up to Zero]] :Array:
** TODO [[https://leetcode-cn.com/problems/all-elements-in-two-binary-search-trees/][1305. All Elements in Two Binary Search Trees]] :Sort:Tree:
** TODO [[https://leetcode-cn.com/problems/jump-game-iii/][1306. Jump Game III]] :BreadthfirstSearch:Graph:
** TODO [[https://leetcode-cn.com/problems/verbal-arithmetic-puzzle/][1307. Verbal Arithmetic Puzzle]] :Math:Backtracking:
** TODO [[https://leetcode-cn.com/problems/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree/][1430. Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree]] :Tree:
** TODO [[https://leetcode-cn.com/problems/decrypt-string-from-alphabet-to-integer-mapping/][1309. Decrypt String from Alphabet to Integer Mapping]] :String:
** TODO [[https://leetcode-cn.com/problems/xor-queries-of-a-subarray/][1310. XOR Queries of a Subarray]] :BitManipulation:
** TODO [[https://leetcode-cn.com/problems/get-watched-videos-by-your-friends/][1311. Get Watched Videos by Your Friends]] :BreadthfirstSearch:HashTable:String:
** TODO [[https://leetcode-cn.com/problems/minimum-insertion-steps-to-make-a-string-palindrome/][1312. Minimum Insertion Steps to Make a String Palindrome]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/find-the-team-size/][1303. Find the Team Size]] 
** TODO [[https://leetcode-cn.com/problems/running-total-for-different-genders/][1308. Running Total for Different Genders]] 
** TODO [[https://leetcode-cn.com/problems/convert-integer-to-the-sum-of-two-no-zero-integers/][1317. Convert Integer to the Sum of Two No-Zero Integers]] :Math:
** TODO [[https://leetcode-cn.com/problems/minimum-flips-to-make-a-or-b-equal-to-c/][1318. Minimum Flips to Make a OR b Equal to c]] :BitManipulation:
** TODO [[https://leetcode-cn.com/problems/number-of-operations-to-make-network-connected/][1319. Number of Operations to Make Network Connected]] :DepthfirstSearch:BreadthfirstSearch:UnionFind:
** TODO [[https://leetcode-cn.com/problems/minimum-distance-to-type-a-word-using-two-fingers/][1320. Minimum Distance to Type a Word Using Two Fingers]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/number-of-steps-to-reduce-a-number-to-zero/][1342. Number of Steps to Reduce a Number to Zero]] :BitManipulation:
** TODO [[https://leetcode-cn.com/problems/number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold/][1343. Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold]] :Array:
** TODO [[https://leetcode-cn.com/problems/angle-between-hands-of-a-clock/][1344. Angle Between Hands of a Clock]] :Math:
** TODO [[https://leetcode-cn.com/problems/jump-game-iv/][1345. Jump Game IV]] :BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/maximum-69-number/][1323. Maximum 69 Number]] :Math:
** TODO [[https://leetcode-cn.com/problems/print-words-vertically/][1324. Print Words Vertically]] :String:
** TODO [[https://leetcode-cn.com/problems/delete-leaves-with-a-given-value/][1325. Delete Leaves With a Given Value]] :Tree:
** TODO [[https://leetcode-cn.com/problems/minimum-number-of-taps-to-open-to-water-a-garden/][1326. Minimum Number of Taps to Open to Water a Garden]] :Greedy:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/restaurant-growth/][1321. Restaurant Growth]] 
** TODO [[https://leetcode-cn.com/problems/ads-performance/][1322. Ads Performance]] 
** TODO [[https://leetcode-cn.com/problems/remove-palindromic-subsequences/][1332. Remove Palindromic Subsequences]] :String:
** TODO [[https://leetcode-cn.com/problems/filter-restaurants-by-vegan-friendly-price-and-distance/][1333. Filter Restaurants by Vegan-Friendly, Price and Distance]] :Sort:Array:
** TODO [[https://leetcode-cn.com/problems/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance/][1334. Find the City With the Smallest Number of Neighbors at a Threshold Distance]] :Graph:
** TODO [[https://leetcode-cn.com/problems/minimum-difficulty-of-a-job-schedule/][1335. Minimum Difficulty of a Job Schedule]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/sort-integers-by-the-number-of-1-bits/][1356. Sort Integers by The Number of 1 Bits]] :Sort:BitManipulation:
** TODO [[https://leetcode-cn.com/problems/apply-discount-every-n-orders/][1357. Apply Discount Every n Orders]] :Design:
** TODO [[https://leetcode-cn.com/problems/number-of-substrings-containing-all-three-characters/][1358. Number of Substrings Containing All Three Characters]] :String:
** TODO [[https://leetcode-cn.com/problems/count-all-valid-pickup-and-delivery-options/][1359. Count All Valid Pickup and Delivery Options]] :Math:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/list-the-products-ordered-in-a-period/][1327. List the Products Ordered in a Period]] 
** TODO [[https://leetcode-cn.com/problems/the-k-weakest-rows-in-a-matrix/][1337. The K Weakest Rows in a Matrix]] :Array:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/reduce-array-size-to-the-half/][1338. Reduce Array Size to The Half]] :Greedy:Array:
** TODO [[https://leetcode-cn.com/problems/maximum-product-of-splitted-binary-tree/][1339. Maximum Product of Splitted Binary Tree]] :Tree:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/jump-game-v/][1340. Jump Game V]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/number-of-transactions-per-visit/][1336. Number of Transactions per Visit]] 
** TODO [[https://leetcode-cn.com/problems/check-if-n-and-its-double-exist/][1346. Check If N and Its Double Exist]] :Array:
** TODO [[https://leetcode-cn.com/problems/minimum-number-of-steps-to-make-two-strings-anagram/][1347. Minimum Number of Steps to Make Two Strings Anagram]] :String:
** TODO [[https://leetcode-cn.com/problems/tweet-counts-per-frequency/][1348. Tweet Counts Per Frequency]] :Design:
** TODO [[https://leetcode-cn.com/problems/maximum-students-taking-exam/][1349. Maximum Students Taking Exam]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/increasing-decreasing-string/][1370. Increasing Decreasing String]] :Sort:String:
** TODO [[https://leetcode-cn.com/problems/find-the-longest-substring-containing-vowels-in-even-counts/][1371. Find the Longest Substring Containing Vowels in Even Counts]] :String:
** TODO [[https://leetcode-cn.com/problems/longest-zigzag-path-in-a-binary-tree/][1372. Longest ZigZag Path in a Binary Tree]] :Tree:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/maximum-sum-bst-in-binary-tree/][1373. Maximum Sum BST in Binary Tree]] :BinarySearchTree:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/count-negative-numbers-in-a-sorted-matrix/][1351. Count Negative Numbers in a Sorted Matrix]] :Array:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/product-of-the-last-k-numbers/][1352. Product of the Last K Numbers]] :Design:Array:
** TODO [[https://leetcode-cn.com/problems/maximum-number-of-events-that-can-be-attended/][1353. Maximum Number of Events That Can Be Attended]] :Greedy:Sort:SegmentTree:
** TODO [[https://leetcode-cn.com/problems/construct-target-array-with-multiple-sums/][1354. Construct Target Array With Multiple Sums]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/movie-rating/][1341. Movie Rating]] 
** TODO [[https://leetcode-cn.com/problems/students-with-invalid-departments/][1350. Students With Invalid Departments]] 
** TODO [[https://leetcode-cn.com/problems/how-many-numbers-are-smaller-than-the-current-number/][1365. How Many Numbers Are Smaller Than the Current Number]] :Array:HashTable:
** TODO [[https://leetcode-cn.com/problems/rank-teams-by-votes/][1366. Rank Teams by Votes]] :Sort:Array:
** TODO [[https://leetcode-cn.com/problems/linked-list-in-binary-tree/][1367. Linked List in Binary Tree]] :Tree:LinkedList:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/minimum-cost-to-make-at-least-one-valid-path-in-a-grid/][1368. Minimum Cost to Make at Least One Valid Path in a Grid]] :BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/find-the-distance-value-between-two-arrays/][1385. Find the Distance Value Between Two Arrays]] :Array:
** TODO [[https://leetcode-cn.com/problems/cinema-seat-allocation/][1386. Cinema Seat Allocation]] :Greedy:Array:
** TODO [[https://leetcode-cn.com/problems/sort-integers-by-the-power-value/][1387. Sort Integers by The Power Value]] :Sort:Graph:
** TODO [[https://leetcode-cn.com/problems/pizza-with-3n-slices/][1388. Pizza With 3n Slices]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/generate-a-string-with-characters-that-have-odd-counts/][1374. Generate a String With Characters That Have Odd Counts]] :String:
** TODO [[https://leetcode-cn.com/problems/bulb-switcher-iii/][1375. Bulb Switcher III]] :Array:
** TODO [[https://leetcode-cn.com/problems/time-needed-to-inform-all-employees/][1376. Time Needed to Inform All Employees]] :DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/frog-position-after-t-seconds/][1377. Frog Position After T Seconds]] :DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/activity-participants/][1355. Activity Participants]] 
** TODO [[https://leetcode-cn.com/problems/number-of-trusted-contacts-of-a-customer/][1364. Number of Trusted Contacts of a Customer]] 
** TODO [[https://leetcode-cn.com/problems/lucky-numbers-in-a-matrix/][1380. Lucky Numbers in a Matrix]] :Array:
** TODO [[https://leetcode-cn.com/problems/design-a-stack-with-increment-operation/][1381. Design a Stack With Increment Operation]] :Stack:Design:
** TODO [[https://leetcode-cn.com/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree/][1379. Find a Corresponding Node of a Binary Tree in a Clone of That Tree]] :Tree:
** TODO [[https://leetcode-cn.com/problems/maximum-performance-of-a-team/][1383. Maximum Performance of a Team]] :Greedy:Sort:
** TODO [[https://leetcode-cn.com/problems/count-largest-group/][1399. Count Largest Group]] :Array:
** TODO [[https://leetcode-cn.com/problems/circle-and-rectangle-overlapping/][1401. Circle and Rectangle Overlapping]] :Geometry:
** TODO [[https://leetcode-cn.com/problems/construct-k-palindrome-strings/][1400. Construct K Palindrome Strings]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/reducing-dishes/][1402. Reducing Dishes]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/get-the-second-most-recent-activity/][1369. Get the Second Most Recent Activity]] 
** TODO [[https://leetcode-cn.com/problems/create-target-array-in-the-given-order/][1389. Create Target Array in the Given Order]] :Array:
** TODO [[https://leetcode-cn.com/problems/check-if-there-is-a-valid-path-in-a-grid/][1391. Check if There is a Valid Path in a Grid]] :DepthfirstSearch:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/longest-happy-prefix/][1392. Longest Happy Prefix]] :String:
** TODO [[https://leetcode-cn.com/problems/replace-employee-id-with-the-unique-identifier/][1378. Replace Employee ID With The Unique Identifier]] 
** TODO [[https://leetcode-cn.com/problems/find-lucky-integer-in-an-array/][1394. Find Lucky Integer in an Array]] :Array:
** TODO [[https://leetcode-cn.com/problems/count-number-of-teams/][1395. Count Number of Teams]] :Array:
** TODO [[https://leetcode-cn.com/problems/design-underground-system/][1396. Design Underground System]] :Design:
** TODO [[https://leetcode-cn.com/problems/find-all-good-strings/][1397. Find All Good Strings]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/minimum-value-to-get-positive-step-by-step-sum/][1413. Minimum Value to Get Positive Step by Step Sum]] :Array:
** TODO [[https://leetcode-cn.com/problems/find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k/][1414. Find the Minimum Number of Fibonacci Numbers Whose Sum Is K]] :Greedy:Array:
** TODO [[https://leetcode-cn.com/problems/the-k-th-lexicographical-string-of-all-happy-strings-of-length-n/][1415. The k-th Lexicographical String of All Happy Strings of Length n]] :Backtracking:
** TODO [[https://leetcode-cn.com/problems/restore-the-array/][1416. Restore The Array]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/total-sales-amount-by-year/][1384. Total Sales Amount by Year]] 
** TODO [[https://leetcode-cn.com/problems/minimum-subsequence-in-non-increasing-order/][1403. Minimum Subsequence in Non-Increasing Order]] :Greedy:Sort:
** TODO [[https://leetcode-cn.com/problems/number-of-steps-to-reduce-a-number-in-binary-representation-to-one/][1404. Number of Steps to Reduce a Number in Binary Representation to One]] :BitManipulation:String:
** TODO [[https://leetcode-cn.com/problems/stone-game-iii/][1406. Stone Game III]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/capital-gainloss/][1393. Capital Gain/Loss]] 
** TODO [[https://leetcode-cn.com/problems/string-matching-in-an-array/][1408. String Matching in an Array]] :String:
** TODO [[https://leetcode-cn.com/problems/queries-on-a-permutation-with-key/][1409. Queries on a Permutation With Key]] :Array:
** TODO [[https://leetcode-cn.com/problems/html-entity-parser/][1410. HTML Entity Parser]] :Stack:String:
** TODO [[https://leetcode-cn.com/problems/number-of-ways-to-paint-n-x-3-grid/][1411. Number of Ways to Paint N × 3 Grid]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/kids-with-the-greatest-number-of-candies/][1431. Kids With the Greatest Number of Candies]] :Array:
** TODO [[https://leetcode-cn.com/problems/max-difference-you-can-get-from-changing-an-integer/][1432. Max Difference You Can Get From Changing an Integer]] :String:
** TODO [[https://leetcode-cn.com/problems/check-if-a-string-can-break-another-string/][1433. Check If a String Can Break Another String]] :Greedy:String:
** TODO [[https://leetcode-cn.com/problems/number-of-ways-to-wear-different-hats-to-each-other/][1434. Number of Ways to Wear Different Hats to Each Other]] :BitManipulation:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/reformat-the-string/][1417. Reformat The String]] :String:
** TODO [[https://leetcode-cn.com/problems/display-table-of-food-orders-in-a-restaurant/][1418. Display Table of Food Orders in a Restaurant]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/minimum-number-of-frogs-croaking/][1419. Minimum Number of Frogs Croaking]] :String:
** TODO [[https://leetcode-cn.com/problems/build-array-where-you-can-find-the-maximum-exactly-k-comparisons/][1420. Build Array Where You Can Find The Maximum Exactly K Comparisons]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/customers-who-bought-products-a-and-b-but-not-c/][1398. Customers Who Bought Products A and B but Not C]] 
** TODO [[https://leetcode-cn.com/problems/maximum-score-after-splitting-a-string/][1422. Maximum Score After Splitting a String]] :String:
** TODO [[https://leetcode-cn.com/problems/maximum-points-you-can-obtain-from-cards/][1423. Maximum Points You Can Obtain from Cards]] :Array:DynamicProgramming:SlidingWindow:
** TODO [[https://leetcode-cn.com/problems/diagonal-traverse-ii/][1424. Diagonal Traverse II]] :Sort:Array:
** TODO [[https://leetcode-cn.com/problems/top-travellers/][1407. Top Travellers]] 
** TODO [[https://leetcode-cn.com/problems/consecutive-characters/][1446. Consecutive Characters]] :String:
** TODO [[https://leetcode-cn.com/problems/simplified-fractions/][1447. Simplified Fractions]] :Math:
** TODO [[https://leetcode-cn.com/problems/count-good-nodes-in-binary-tree/][1448. Count Good Nodes in Binary Tree]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/form-largest-integer-with-digits-that-add-up-to-target/][1449. Form Largest Integer With Digits That Add up to Target]] :String:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/find-the-quiet-students-in-all-exams/][1412. Find the Quiet Students in All Exams]] 
** TODO [[https://leetcode-cn.com/problems/destination-city/][1436. Destination City]] :String:
** TODO [[https://leetcode-cn.com/problems/check-if-all-1s-are-at-least-length-k-places-away/][1437. Check If All 1's Are at Least Length K Places Away]] :Array:
** TODO [[https://leetcode-cn.com/problems/longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit/][1438. Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit]] :Array:SlidingWindow:
** TODO [[https://leetcode-cn.com/problems/find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows/][1439. Find the Kth Smallest Sum of a Matrix With Sorted Rows]] :Heap:
** TODO [[https://leetcode-cn.com/problems/npv-queries/][1421. NPV Queries]] 
** TODO [[https://leetcode-cn.com/problems/build-an-array-with-stack-operations/][1441. Build an Array With Stack Operations]] :Stack:
** TODO [[https://leetcode-cn.com/problems/count-triplets-that-can-form-two-arrays-of-equal-xor/][1442. Count Triplets That Can Form Two Arrays of Equal XOR]] :BitManipulation:Array:Math:
** TODO [[https://leetcode-cn.com/problems/minimum-time-to-collect-all-apples-in-a-tree/][1443. Minimum Time to Collect All Apples in a Tree]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/number-of-ways-of-cutting-a-pizza/][1444. Number of Ways of Cutting a Pizza]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/make-two-arrays-equal-by-reversing-sub-arrays/][1460. Make Two Arrays Equal by Reversing Sub-arrays]] :Array:
** TODO [[https://leetcode-cn.com/problems/check-if-a-string-contains-all-binary-codes-of-size-k/][1461. Check If a String Contains All Binary Codes of Size K]] :BitManipulation:String:
** TODO [[https://leetcode-cn.com/problems/course-schedule-iv/][1462. Course Schedule IV]] :Graph:
** TODO [[https://leetcode-cn.com/problems/cherry-pickup-ii/][1463. Cherry Pickup II]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/number-of-students-doing-homework-at-a-given-time/][1450. Number of Students Doing Homework at a Given Time]] :Array:
** TODO [[https://leetcode-cn.com/problems/rearrange-words-in-a-sentence/][1451. Rearrange Words in a Sentence]] :Sort:String:
** TODO [[https://leetcode-cn.com/problems/people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list/][1452. People Whose List of Favorite Companies Is Not a Subset of Another List]] :Sort:String:
** TODO [[https://leetcode-cn.com/problems/maximum-number-of-darts-inside-of-a-circular-dartboard/][1453. Maximum Number of Darts Inside of a Circular Dartboard]] :Geometry:
** TODO [[https://leetcode-cn.com/problems/create-a-session-bar-chart/][1435. Create a Session Bar Chart]] 
** TODO [[https://leetcode-cn.com/problems/evaluate-boolean-expression/][1440. Evaluate Boolean Expression]] 
** TODO [[https://leetcode-cn.com/problems/check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence/][1455. Check If a Word Occurs As a Prefix of Any Word in a Sentence]] :String:
** TODO [[https://leetcode-cn.com/problems/maximum-number-of-vowels-in-a-substring-of-given-length/][1456. Maximum Number of Vowels in a Substring of Given Length]] :String:SlidingWindow:
** TODO [[https://leetcode-cn.com/problems/pseudo-palindromic-paths-in-a-binary-tree/][1457. Pseudo-Palindromic Paths in a Binary Tree]] :BitManipulation:Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/max-dot-product-of-two-subsequences/][1458. Max Dot Product of Two Subsequences]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/final-prices-with-a-special-discount-in-a-shop/][1475. Final Prices With a Special Discount in a Shop]] :Array:
** TODO [[https://leetcode-cn.com/problems/allocate-mailboxes/][1478. Allocate Mailboxes]] :Math:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/subrectangle-queries/][1476. Subrectangle Queries]] :Array:
** TODO [[https://leetcode-cn.com/problems/find-two-non-overlapping-sub-arrays-each-with-target-sum/][1477. Find Two Non-overlapping Sub-arrays Each With Target Sum]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/maximum-product-of-two-elements-in-an-array/][1464. Maximum Product of Two Elements in an Array]] :Array:
** TODO [[https://leetcode-cn.com/problems/maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts/][1465. Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts]] :Array:
** TODO [[https://leetcode-cn.com/problems/reorder-routes-to-make-all-paths-lead-to-the-city-zero/][1466. Reorder Routes to Make All Paths Lead to the City Zero]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/probability-of-a-two-boxes-having-the-same-number-of-distinct-balls/][1467. Probability of a Two Boxes Having The Same Number of Distinct Balls]] :Math:Backtracking:
** TODO [[https://leetcode-cn.com/problems/apples-oranges/][1445. Apples & Oranges]] 
** TODO [[https://leetcode-cn.com/problems/active-users/][1454. Active Users]] 
** TODO [[https://leetcode-cn.com/problems/shuffle-the-array/][1470. Shuffle the Array]] :Array:
** TODO [[https://leetcode-cn.com/problems/the-k-strongest-values-in-an-array/][1471. The k Strongest Values in an Array]] :Sort:Array:
** TODO [[https://leetcode-cn.com/problems/design-browser-history/][1472. Design Browser History]] :Design:
** TODO [[https://leetcode-cn.com/problems/paint-house-iii/][1473. Paint House III]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/average-salary-excluding-the-minimum-and-maximum-salary/][1491. Average Salary Excluding the Minimum and Maximum Salary]] :Sort:Array:
** TODO [[https://leetcode-cn.com/problems/the-kth-factor-of-n/][1492. The kth Factor of n]] :Math:
** TODO [[https://leetcode-cn.com/problems/longest-subarray-of-1s-after-deleting-one-element/][1493. Longest Subarray of 1's After Deleting One Element]] :Array:
** TODO [[https://leetcode-cn.com/problems/parallel-courses-ii/][1494. Parallel Courses II]] :Graph:
** TODO [[https://leetcode-cn.com/problems/running-sum-of-1d-array/][1480. Running Sum of 1d Array]] :Array:
** TODO [[https://leetcode-cn.com/problems/least-number-of-unique-integers-after-k-removals/][1481. Least Number of Unique Integers after K Removals]] :Sort:Array:
** TODO [[https://leetcode-cn.com/problems/minimum-number-of-days-to-make-m-bouquets/][1482. Minimum Number of Days to Make m Bouquets]] :Array:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/rectangles-area/][1459. Rectangles Area]] 
** TODO [[https://leetcode-cn.com/problems/calculate-salaries/][1468. Calculate Salaries]] 
** TODO [[https://leetcode-cn.com/problems/find-all-the-lonely-nodes/][1469. Find All The Lonely Nodes]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/xor-operation-in-an-array/][1486. XOR Operation in an Array]] :BitManipulation:Array:
** TODO [[https://leetcode-cn.com/problems/making-file-names-unique/][1487. Making File Names Unique]] :HashTable:String:
** TODO [[https://leetcode-cn.com/problems/avoid-flood-in-the-city/][1488. Avoid Flood in The City]] :Array:HashTable:
** TODO [[https://leetcode-cn.com/problems/find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree/][1489. Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree]] :DepthfirstSearch:UnionFind:
** TODO [[https://leetcode-cn.com/problems/range-sum-of-sorted-subarray-sums/][1508. Range Sum of Sorted Subarray Sums]] :Sort:Array:
** TODO [[https://leetcode-cn.com/problems/minimum-difference-between-largest-and-smallest-value-in-three-moves/][1509. Minimum Difference Between Largest and Smallest Value in Three Moves]] :Sort:Array:
** TODO [[https://leetcode-cn.com/problems/stone-game-iv/][1510. Stone Game IV]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/delete-n-nodes-after-m-nodes-of-a-linked-list/][1474. Delete N Nodes After M Nodes of a Linked List]] :LinkedList:
** TODO [[https://leetcode-cn.com/problems/path-crossing/][1496. Path Crossing]] :String:
** TODO [[https://leetcode-cn.com/problems/check-if-array-pairs-are-divisible-by-k/][1497. Check If Array Pairs Are Divisible by k]] :Greedy:Array:Math:
** TODO [[https://leetcode-cn.com/problems/number-of-subsequences-that-satisfy-the-given-sum-condition/][1498. Number of Subsequences That Satisfy the Given Sum Condition]] :Sort:SlidingWindow:
** TODO [[https://leetcode-cn.com/problems/max-value-of-equation/][1499. Max Value of Equation]] :Array:SlidingWindow:
** TODO [[https://leetcode-cn.com/problems/sales-by-day-of-the-week/][1479. Sales by Day of the Week]] 
** TODO [[https://leetcode-cn.com/problems/clone-binary-tree-with-random-pointer/][1484. Clone Binary Tree With Random Pointer]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/group-sold-products-by-the-date/][1485. Group Sold Products By The Date]] 
** TODO [[https://leetcode-cn.com/problems/can-make-arithmetic-progression-from-sequence/][1502. Can Make Arithmetic Progression From Sequence]] :Sort:Array:
** TODO [[https://leetcode-cn.com/problems/last-moment-before-all-ants-fall-out-of-a-plank/][1503. Last Moment Before All Ants Fall Out of a Plank]] :Brainteaser:Array:
** TODO [[https://leetcode-cn.com/problems/count-submatrices-with-all-ones/][1504. Count Submatrices With All Ones]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits/][1505. Minimum Possible Integer After at Most K Adjacent Swaps On Digits]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/count-odd-numbers-in-an-interval-range/][1523. Count Odd Numbers in an Interval Range]] :Math:
** TODO [[https://leetcode-cn.com/problems/number-of-sub-arrays-with-odd-sum/][1524. Number of Sub-arrays With Odd Sum]] :Array:Math:
** TODO [[https://leetcode-cn.com/problems/number-of-good-ways-to-split-a-string/][1525. Number of Good Ways to Split a String]] :BitManipulation:String:
** TODO [[https://leetcode-cn.com/problems/minimum-number-of-increments-on-subarrays-to-form-a-target-array/][1526. Minimum Number of Increments on Subarrays to Form a Target Array]] :SegmentTree:
** TODO [[https://leetcode-cn.com/problems/clone-n-ary-tree/][1490. Clone N-ary Tree]] :Tree:DepthfirstSearch:BreadthfirstSearch:HashTable:
** TODO [[https://leetcode-cn.com/problems/number-of-good-pairs/][1512. Number of Good Pairs]] :Array:HashTable:Math:
** TODO [[https://leetcode-cn.com/problems/number-of-substrings-with-only-1s/][1513. Number of Substrings With Only 1s]] :Math:String:
** TODO [[https://leetcode-cn.com/problems/string-compression-ii/][1531. String Compression II]] :String:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/best-position-for-a-service-centre/][1515. Best Position for a Service Centre]] :Geometry:
** TODO [[https://leetcode-cn.com/problems/friendly-movies-streamed-last-month/][1495. Friendly Movies Streamed Last Month]] 
** TODO [[https://leetcode-cn.com/problems/design-a-file-sharing-system/][1500. Design a File Sharing System]] :Design:Array:
** TODO [[https://leetcode-cn.com/problems/countries-you-can-safely-invest-in/][1501. Countries You Can Safely Invest In]] 
** TODO [[https://leetcode-cn.com/problems/water-bottles/][1518. Water Bottles]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/number-of-nodes-in-the-sub-tree-with-the-same-label/][1519. Number of Nodes in the Sub-Tree With the Same Label]] :DepthfirstSearch:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/maximum-number-of-non-overlapping-substrings/][1520. Maximum Number of Non-Overlapping Substrings]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/find-a-value-of-a-mysterious-function-closest-to-target/][1521. Find a Value of a Mysterious Function Closest to Target]] :BitManipulation:SegmentTree:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/kth-missing-positive-number/][1539. Kth Missing Positive Number]] :Array:HashTable:
** TODO [[https://leetcode-cn.com/problems/can-convert-string-in-k-moves/][1540. Can Convert String in K Moves]] :Greedy:String:
** TODO [[https://leetcode-cn.com/problems/minimum-insertions-to-balance-a-parentheses-string/][1541. Minimum Insertions to Balance a Parentheses String]] :Stack:String:
** TODO [[https://leetcode-cn.com/problems/maximum-number-of-non-overlapping-subarrays-with-sum-equals-target/][1546. Maximum Number of Non-Overlapping Subarrays With Sum Equals Target]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/find-root-of-n-ary-tree/][1506. Find Root of N-Ary Tree]] 
** TODO [[https://leetcode-cn.com/problems/shuffle-string/][1528. Shuffle String]] :Sort:
** TODO [[https://leetcode-cn.com/problems/bulb-switcher-iv/][1529. Bulb Switcher IV]] :String:
** TODO [[https://leetcode-cn.com/problems/number-of-good-leaf-nodes-pairs/][1530. Number of Good Leaf Nodes Pairs]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/customer-order-frequency/][1511. Customer Order Frequency]] 
** TODO [[https://leetcode-cn.com/problems/move-sub-tree-of-n-ary-tree/][1516. Move Sub-Tree of N-Ary Tree]] :Tree:
** TODO [[https://leetcode-cn.com/problems/count-good-triplets/][1534. Count Good Triplets]] :Array:
** TODO [[https://leetcode-cn.com/problems/find-the-winner-of-an-array-game/][1535. Find the Winner of an Array Game]] :Array:
** TODO [[https://leetcode-cn.com/problems/minimum-swaps-to-arrange-a-binary-grid/][1536. Minimum Swaps to Arrange a Binary Grid]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/get-the-maximum-score/][1537. Get the Maximum Score]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/thousand-separator/][1556. Thousand Separator]] :String:
** TODO [[https://leetcode-cn.com/problems/minimum-number-of-vertices-to-reach-all-nodes/][1557. Minimum Number of Vertices to Reach All Nodes]] :Graph:
** TODO [[https://leetcode-cn.com/problems/minimum-numbers-of-function-calls-to-make-target-array/][1558. Minimum Numbers of Function Calls to Make Target Array]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/detect-cycles-in-2d-grid/][1559. Detect Cycles in 2D Grid]] :DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/find-users-with-valid-e-mails/][1517. Find Users With Valid E-Mails]] 
** TODO [[https://leetcode-cn.com/problems/diameter-of-n-ary-tree/][1522. Diameter of N-Ary Tree]] 
** TODO [[https://leetcode-cn.com/problems/make-the-string-great/][1544. Make The String Great]] :Stack:String:
** TODO [[https://leetcode-cn.com/problems/find-kth-bit-in-nth-binary-string/][1545. Find Kth Bit in Nth Binary String]] :String:
** TODO [[https://leetcode-cn.com/problems/find-longest-awesome-substring/][1542. Find Longest Awesome Substring]] :BitManipulation:String:
** TODO [[https://leetcode-cn.com/problems/minimum-cost-to-cut-a-stick/][1547. Minimum Cost to Cut a Stick]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/patients-with-a-condition/][1527. Patients With a Condition]] 
** TODO [[https://leetcode-cn.com/problems/the-most-recent-three-orders/][1532. The Most Recent Three Orders]] 
** TODO [[https://leetcode-cn.com/problems/find-the-index-of-the-large-integer/][1533. Find the Index of the Large Integer]] :BinarySearch:
** TODO [[https://leetcode-cn.com/problems/minimum-operations-to-make-array-equal/][1551. Minimum Operations to Make Array Equal]] :Math:
** TODO [[https://leetcode-cn.com/problems/magnetic-force-between-two-balls/][1552. Magnetic Force Between Two Balls]] :Array:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/minimum-number-of-days-to-eat-n-oranges/][1553. Minimum Number of Days to Eat N Oranges]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/matrix-diagonal-sum/][1572. Matrix Diagonal Sum]] :Array:
** TODO [[https://leetcode-cn.com/problems/number-of-ways-to-split-a-string/][1573. Number of Ways to Split a String]] :String:
** TODO [[https://leetcode-cn.com/problems/shortest-subarray-to-be-removed-to-make-array-sorted/][1574. Shortest Subarray to be Removed to Make Array Sorted]] :Array:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/count-all-possible-routes/][1575. Count All Possible Routes]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/guess-the-majority-in-a-hidden-array/][1538. Guess the Majority in a Hidden Array]] 
** TODO [[https://leetcode-cn.com/problems/most-visited-sector-in-a-circular-track/][1560. Most Visited Sector in  a Circular Track]] :Array:
** TODO [[https://leetcode-cn.com/problems/maximum-number-of-coins-you-can-get/][1561. Maximum Number of Coins You Can Get]] :Sort:
** TODO [[https://leetcode-cn.com/problems/find-latest-group-of-size-m/][1562. Find Latest Group of Size M]] :BinarySearch:
** TODO [[https://leetcode-cn.com/problems/stone-game-v/][1563. Stone Game V]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/fix-product-name-format/][1543. Fix Product Name Format]] 
** TODO [[https://leetcode-cn.com/problems/the-most-similar-path-in-a-graph/][1548. The Most Similar Path in a Graph]] :Graph:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/the-most-recent-orders-for-each-product/][1549. The Most Recent Orders for Each Product]] 
** TODO [[https://leetcode-cn.com/problems/detect-pattern-of-length-m-repeated-k-or-more-times/][1566. Detect Pattern of Length M Repeated K or More Times]] :Array:
** TODO [[https://leetcode-cn.com/problems/maximum-length-of-subarray-with-positive-product/][1567. Maximum Length of Subarray With Positive Product]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/minimum-number-of-days-to-disconnect-island/][1568. Minimum Number of Days to Disconnect Island]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/number-of-ways-to-reorder-array-to-get-same-bst/][1569. Number of Ways to Reorder Array to Get Same BST]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/sum-of-all-odd-length-subarrays/][1588. Sum of All Odd Length Subarrays]] :Array:
** TODO [[https://leetcode-cn.com/problems/make-sum-divisible-by-p/][1590. Make Sum Divisible by P]] :Array:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/maximum-sum-obtained-of-any-permutation/][1589. Maximum Sum Obtained of Any Permutation]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/strange-printer-ii/][1591. Strange Printer II]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/strings-differ-by-one-character/][1554. Strings Differ by One Character]] 
** TODO [[https://leetcode-cn.com/problems/replace-all-s-to-avoid-consecutive-repeating-characters/][1576. Replace All ?'s to Avoid Consecutive Repeating Characters]] :String:
** TODO [[https://leetcode-cn.com/problems/number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers/][1577. Number of Ways Where Square of Number Is Equal to Product of Two Numbers]] :HashTable:Math:
** TODO [[https://leetcode-cn.com/problems/minimum-deletion-cost-to-avoid-repeating-letters/][1578. Minimum Deletion Cost to Avoid Repeating Letters]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/remove-max-number-of-edges-to-keep-graph-fully-traversable/][1579. Remove Max Number of Edges to Keep Graph Fully Traversable]] :UnionFind:
** TODO [[https://leetcode-cn.com/problems/bank-account-summary/][1555. Bank Account Summary]] 
** TODO [[https://leetcode-cn.com/problems/put-boxes-into-the-warehouse-i/][1564. Put Boxes Into the Warehouse I]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/special-positions-in-a-binary-matrix/][1582. Special Positions in a Binary Matrix]] :Array:
** TODO [[https://leetcode-cn.com/problems/count-unhappy-friends/][1583. Count Unhappy Friends]] :Array:
** TODO [[https://leetcode-cn.com/problems/min-cost-to-connect-all-points/][1584. Min Cost to Connect All Points]] :UnionFind:
** TODO [[https://leetcode-cn.com/problems/check-if-string-is-transformable-with-substring-sort-operations/][1585. Check If String Is Transformable With Substring Sort Operations]] :Greedy:String:
** TODO [[https://leetcode-cn.com/problems/design-parking-system/][1603. Design Parking System]] :Design:
** TODO [[https://leetcode-cn.com/problems/alert-using-same-key-card-three-or-more-times-in-a-one-hour-period/][1604. Alert Using Same Key-Card Three or More Times in a One Hour Period]] :String:OrderedMap:
** TODO [[https://leetcode-cn.com/problems/find-servers-that-handled-most-number-of-requests/][1606. Find Servers That Handled Most Number of Requests]] :OrderedMap:
** TODO [[https://leetcode-cn.com/problems/find-valid-matrix-given-row-and-column-sums/][1605. Find Valid Matrix Given Row and Column Sums]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/unique-orders-and-customers-per-month/][1565. Unique Orders and Customers Per Month]] 
** TODO [[https://leetcode-cn.com/problems/dot-product-of-two-sparse-vectors/][1570. Dot Product of Two Sparse Vectors]] :Array:HashTable:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/rearrange-spaces-between-words/][1592. Rearrange Spaces Between Words]] :String:
** TODO [[https://leetcode-cn.com/problems/split-a-string-into-the-max-number-of-unique-substrings/][1593. Split a String Into the Max Number of Unique Substrings]] :Backtracking:
** TODO [[https://leetcode-cn.com/problems/maximum-non-negative-product-in-a-matrix/][1594. Maximum Non Negative Product in a Matrix]] :Greedy:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/minimum-cost-to-connect-two-groups-of-points/][1595. Minimum Cost to Connect Two Groups of Points]] :Graph:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/warehouse-manager/][1571. Warehouse Manager]] 
** TODO [[https://leetcode-cn.com/problems/put-boxes-into-the-warehouse-ii/][1580. Put Boxes Into the Warehouse II]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/crawler-log-folder/][1598. Crawler Log Folder]] :Stack:
** TODO [[https://leetcode-cn.com/problems/maximum-profit-of-operating-a-centennial-wheel/][1599. Maximum Profit of Operating a Centennial Wheel]] :Greedy:
** TODO [[https://leetcode-cn.com/problems/throne-inheritance/][1600. Throne Inheritance]] :Tree:Design:
** TODO [[https://leetcode-cn.com/problems/maximum-number-of-achievable-transfer-requests/][1601. Maximum Number of Achievable Transfer Requests]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/customer-who-visited-but-did-not-make-any-transactions/][1581. Customer Who Visited but Did Not Make Any Transactions]] 
** TODO [[https://leetcode-cn.com/problems/binary-search-tree-iterator-ii/][1586. Binary Search Tree Iterator II]] :Tree:Design:
** TODO [[https://leetcode-cn.com/problems/special-array-with-x-elements-greater-than-or-equal-x/][1608. Special Array With X Elements Greater Than or Equal X]] :Array:
** TODO [[https://leetcode-cn.com/problems/even-odd-tree/][1609. Even Odd Tree]] :Tree:
** TODO [[https://leetcode-cn.com/problems/minimum-one-bit-operations-to-make-integers-zero/][1611. Minimum One Bit Operations to Make Integers Zero]] :BitManipulation:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/maximum-number-of-visible-points/][1610. Maximum Number of Visible Points]] :Geometry:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/bank-account-summary-ii/][1587. Bank Account Summary II]] 
** TODO [[https://leetcode-cn.com/problems/the-most-frequently-ordered-products-for-each-customer/][1596. The Most Frequently Ordered Products for Each Customer]] 
** TODO [[https://leetcode-cn.com/problems/build-binary-expression-tree-from-infix-expression/][1597. Build Binary Expression Tree From Infix Expression]] :Tree:String:
** TODO [[https://leetcode-cn.com/problems/find-nearest-right-node-in-binary-tree/][1602. Find Nearest Right Node in Binary Tree]] :Tree:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/sellers-with-no-sales/][1607. Sellers With No Sales]] 
** TODO [[https://leetcode-cn.com/problems/check-if-two-expression-trees-are-equivalent/][1612. Check If Two Expression Trees are Equivalent]] :Tree:HashTable:
** TODO [[https://leetcode-cn.com/problems/deep-dark-fraction/][LCP 02. Deep Dark Fraction]] 
** TODO [[https://leetcode-cn.com/problems/broken-board-dominoes/][LCP 04. Broken Board Dominoes]] 
** TODO [[https://leetcode-cn.com/problems/coin-bonus/][LCP 05. Coin Bonus]] 
** TODO [[https://leetcode-cn.com/problems/programmable-robot/][LCP 03. Programmable Robot]] 
** TODO [[https://leetcode-cn.com/problems/guess-numbers/][LCP 01. Guess Numbers]] 
** TODO [[https://leetcode-cn.com/problems/is-unique-lcci/][面试题 01.01. Is Unique LCCI]] :Array:
** TODO [[https://leetcode-cn.com/problems/check-permutation-lcci/][面试题 01.02. Check Permutation LCCI]] :Array:String:
** TODO [[https://leetcode-cn.com/problems/string-to-url-lcci/][面试题 01.03. String to URL LCCI]] :String:
** TODO [[https://leetcode-cn.com/problems/compress-string-lcci/][面试题 01.06. Compress String LCCI]] :String:
** TODO [[https://leetcode-cn.com/problems/string-rotation-lcci/][面试题 01.09. String Rotation LCCI]] :String:
** TODO [[https://leetcode-cn.com/problems/remove-duplicate-node-lcci/][面试题 02.01. Remove Duplicate Node LCCI]] :LinkedList:
** TODO [[https://leetcode-cn.com/problems/palindrome-linked-list-lcci/][面试题 02.06. Palindrome Linked List LCCI]] :LinkedList:
** TODO [[https://leetcode-cn.com/problems/intersection-of-two-linked-lists-lcci/][面试题 02.07. Intersection of Two Linked Lists LCCI]] :LinkedList:
** TODO [[https://leetcode-cn.com/problems/linked-list-cycle-lcci/][面试题 02.08. Linked List Cycle LCCI]] :LinkedList:
** TODO [[https://leetcode-cn.com/problems/min-stack-lcci/][面试题 03.02. Min Stack LCCI]] :Stack:
** TODO [[https://leetcode-cn.com/problems/implement-queue-using-stacks-lcci/][面试题 03.04. Implement Queue using Stacks LCCI]] :Stack:
** TODO [[https://leetcode-cn.com/problems/route-between-nodes-lcci/][面试题 04.01. Route Between Nodes LCCI]] :Graph:
** TODO [[https://leetcode-cn.com/problems/three-in-one-lcci/][面试题 03.01. Three in One LCCI]] :Design:
** TODO [[https://leetcode-cn.com/problems/sort-of-stacks-lcci/][面试题 03.05. Sort of Stacks LCCI]] :Design:
** TODO [[https://leetcode-cn.com/problems/minimum-height-tree-lcci/][面试题 04.02. Minimum Height Tree LCCI]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/list-of-depth-lcci/][面试题 04.03. List of Depth LCCI]] :Tree:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/check-balance-lcci/][面试题 04.04. Check Balance LCCI]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/legal-binary-search-tree-lcci/][面试题 04.05. Legal Binary Search Tree LCCI]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/successor-lcci/][面试题 04.06. Successor LCCI]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/first-common-ancestor-lcci/][面试题 04.08. First Common Ancestor LCCI]] :Tree:
** TODO [[https://leetcode-cn.com/problems/insert-into-bits-lcci/][面试题 05.01. Insert Into Bits LCCI]] :BitManipulation:
** TODO [[https://leetcode-cn.com/problems/convert-integer-lcci/][面试题 05.06. Convert Integer LCCI]] :BitManipulation:
** TODO [[https://leetcode-cn.com/problems/exchange-lcci/][面试题 05.07. Exchange LCCI]] :BitManipulation:
** TODO [[https://leetcode-cn.com/problems/closed-number-lcci/][面试题 05.04. Closed Number LCCI]] :BitManipulation:
** TODO [[https://leetcode-cn.com/problems/palindrome-permutation-lcci/][面试题 01.04. Palindrome Permutation LCCI]] :HashTable:String:
** TODO [[https://leetcode-cn.com/problems/rotate-matrix-lcci/][面试题 01.07. Rotate Matrix LCCI]] :Array:
** TODO [[https://leetcode-cn.com/problems/zero-matrix-lcci/][面试题 01.08. Zero Matrix LCCI]] :Array:
** TODO [[https://leetcode-cn.com/problems/delete-middle-node-lcci/][面试题 02.03. Delete Middle Node LCCI]] :LinkedList:
** TODO [[https://leetcode-cn.com/problems/sum-lists-lcci/][面试题 02.05. Sum Lists LCCI]] :LinkedList:Math:
** TODO [[https://leetcode-cn.com/problems/stack-of-plates-lcci/][面试题 03.03. Stack of Plates LCCI]] :Design:
** TODO [[https://leetcode-cn.com/problems/draw-line-lcci/][面试题 05.08. Draw Line LCCI]] :Array:
** TODO [[https://leetcode-cn.com/problems/three-steps-problem-lcci/][面试题 08.01. Three Steps Problem LCCI]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/power-set-lcci/][面试题 08.04. Power Set LCCI]] :BitManipulation:Array:Backtracking:
** TODO [[https://leetcode-cn.com/problems/recursive-mulitply-lcci/][面试题 08.05. Recursive Mulitply LCCI]] :Recursion:
** TODO [[https://leetcode-cn.com/problems/bracket-lcci/][面试题 08.09. Bracket LCCI]] :String:Backtracking:
** TODO [[https://leetcode-cn.com/problems/color-fill-lcci/][面试题 08.10. Color Fill LCCI]] :DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/pile-box-lcci/][面试题 08.13. Pile Box LCCI]] :DynamicProgramming:Backtracking:
** TODO [[https://leetcode-cn.com/problems/bianry-number-to-string-lcci/][面试题 05.02. Bianry Number to String LCCI]] :String:
** TODO [[https://leetcode-cn.com/problems/animal-shelter-lcci/][面试题 03.06. Animal Shelter LCCI]] :Design:
** TODO [[https://leetcode-cn.com/problems/check-subtree-lcci/][面试题 04.10. Check SubTree LCCI]] :Tree:
** TODO [[https://leetcode-cn.com/problems/reverse-bits-lcci/][面试题 05.03. Reverse Bits LCCI]] :BitManipulation:
** TODO [[https://leetcode-cn.com/problems/coin-lcci/][面试题 08.11. Coin LCCI]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/search-rotate-array-lcci/][面试题 10.03. Search Rotate Array LCCI]] :Array:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/eight-queens-lcci/][面试题 08.12. Eight Queens LCCI]] :Backtracking:
** TODO [[https://leetcode-cn.com/problems/magic-index-lcci/][面试题 08.03. Magic Index LCCI]] :Array:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/permutation-i-lcci/][面试题 08.07. Permutation I LCCI]] :Backtracking:
** TODO [[https://leetcode-cn.com/problems/sparse-array-search-lcci/][面试题 10.05. Sparse Array Search LCCI]] :BinarySearch:
** TODO [[https://leetcode-cn.com/problems/swap-numbers-lcci/][面试题 16.01. Swap Numbers LCCI]] :BitManipulation:Math:
** TODO [[https://leetcode-cn.com/problems/words-frequency-lcci/][面试题 16.02. Words Frequency LCCI]] :Design:HashTable:
** TODO [[https://leetcode-cn.com/problems/intersection-lcci/][面试题 16.03. Intersection LCCI]] :Geometry:Math:
** TODO [[https://leetcode-cn.com/problems/tic-tac-toe-lcci/][面试题 16.04. Tic-Tac-Toe LCCI]] :Array:
** TODO [[https://leetcode-cn.com/problems/smallest-difference-lcci/][面试题 16.06. Smallest Difference LCCI]] :Array:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/yong-liang-ge-zhan-shi-xian-dui-lie-lcof/][剑指 Offer 09. 用两个栈实现队列 LCOF]] :Stack:Design:
** TODO [[https://leetcode-cn.com/problems/fei-bo-na-qi-shu-lie-lcof/][剑指 Offer 10- I. 斐波那契数列  LCOF]] :Recursion:
** TODO [[https://leetcode-cn.com/problems/shu-zu-zhong-zhong-fu-de-shu-zi-lcof/][剑指 Offer 03. 数组中重复的数字 LCOF]] :Array:HashTable:
** TODO [[https://leetcode-cn.com/problems/er-wei-shu-zu-zhong-de-cha-zhao-lcof/][剑指 Offer 04. 二维数组中的查找 LCOF]] :Array:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/qing-wa-tiao-tai-jie-wen-ti-lcof/][剑指 Offer 10- II. 青蛙跳台阶问题  LCOF]] :Recursion:
** TODO [[https://leetcode-cn.com/problems/xuan-zhuan-shu-zu-de-zui-xiao-shu-zi-lcof/][剑指 Offer 11. 旋转数组的最小数字  LCOF]] :BinarySearch:
** TODO [[https://leetcode-cn.com/problems/ju-zhen-zhong-de-lu-jing-lcof/][剑指 Offer 12. 矩阵中的路径  LCOF]] :DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/ti-huan-kong-ge-lcof/][剑指 Offer 05. 替换空格 LCOF]] 
** TODO [[https://leetcode-cn.com/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof/][剑指 Offer 13. 机器人的运动范围  LCOF]] 
** TODO [[https://leetcode-cn.com/problems/cong-wei-dao-tou-da-yin-lian-biao-lcof/][剑指 Offer 06. 从尾到头打印链表 LCOF]] :LinkedList:
** TODO [[https://leetcode-cn.com/problems/zhong-jian-er-cha-shu-lcof/][剑指 Offer 07. 重建二叉树 LCOF]] :Tree:Recursion:
** TODO [[https://leetcode-cn.com/problems/jian-sheng-zi-lcof/][剑指 Offer 14- I. 剪绳子  LCOF]] :Math:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/jian-sheng-zi-ii-lcof/][剑指 Offer 14- II. 剪绳子 II LCOF]] :Math:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/he-bing-liang-ge-pai-xu-de-lian-biao-lcof/][剑指 Offer 25. 合并两个排序的链表  LCOF]] :DivideandConquer:
** TODO [[https://leetcode-cn.com/problems/shu-de-zi-jie-gou-lcof/][剑指 Offer 26. 树的子结构  LCOF]] :Tree:
** TODO [[https://leetcode-cn.com/problems/er-cha-shu-de-jing-xiang-lcof/][剑指 Offer 27. 二叉树的镜像  LCOF]] :Tree:
** TODO [[https://leetcode-cn.com/problems/dui-cheng-de-er-cha-shu-lcof/][剑指 Offer 28. 对称的二叉树  LCOF]] :Tree:
** TODO [[https://leetcode-cn.com/problems/biao-shi-shu-zhi-de-zi-fu-chuan-lcof/][剑指 Offer 20. 表示数值的字符串 LCOF]] :Math:
** TODO [[https://leetcode-cn.com/problems/diao-zheng-shu-zu-shun-xu-shi-qi-shu-wei-yu-ou-shu-qian-mian-lcof/][剑指 Offer 21. 调整数组顺序使奇数位于偶数前面 LCOF]] 
** TODO [[https://leetcode-cn.com/problems/er-jin-zhi-zhong-1de-ge-shu-lcof/][剑指 Offer 15. 二进制中1的个数 LCOF]] :BitManipulation:
** TODO [[https://leetcode-cn.com/problems/shun-shi-zhen-da-yin-ju-zhen-lcof/][剑指 Offer 29. 顺时针打印矩阵  LCOF]] :Array:
** TODO [[https://leetcode-cn.com/problems/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof/][剑指 Offer 22. 链表中倒数第k个节点 LCOF]] :LinkedList:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/shu-zhi-de-zheng-shu-ci-fang-lcof/][剑指 Offer 16. 数值的整数次方 LCOF]] :Recursion:
** TODO [[https://leetcode-cn.com/problems/da-yin-cong-1dao-zui-da-de-nwei-shu-lcof/][剑指 Offer 17. 打印从1到最大的n位数 LCOF]] :Math:
** TODO [[https://leetcode-cn.com/problems/zheng-ze-biao-da-shi-pi-pei-lcof/][剑指 Offer 19. 正则表达式匹配 LCOF]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/fan-zhuan-lian-biao-lcof/][剑指 Offer 24. 反转链表 LCOF]] :LinkedList:
** TODO [[https://leetcode-cn.com/problems/shan-chu-lian-biao-de-jie-dian-lcof/][剑指 Offer 18. 删除链表的节点 LCOF]] :LinkedList:
** TODO [[https://leetcode-cn.com/problems/fu-za-lian-biao-de-fu-zhi-lcof/][剑指 Offer 35. 复杂链表的复制  LCOF]] :LinkedList:
** TODO [[https://leetcode-cn.com/problems/zui-xiao-de-kge-shu-lcof/][剑指 Offer 40. 最小的k个数  LCOF]] :Heap:DivideandConquer:
** TODO [[https://leetcode-cn.com/problems/bao-han-minhan-shu-de-zhan-lcof/][剑指 Offer 30. 包含min函数的栈 LCOF]] :Stack:Design:
** TODO [[https://leetcode-cn.com/problems/shu-ju-liu-zhong-de-zhong-wei-shu-lcof/][剑指 Offer 41. 数据流中的中位数  LCOF]] :Heap:Design:
** TODO [[https://leetcode-cn.com/problems/lian-xu-zi-shu-zu-de-zui-da-he-lcof/][剑指 Offer 42. 连续子数组的最大和  LCOF]] :DivideandConquer:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof/][剑指 Offer 36. 二叉搜索树与双向链表  LCOF]] :DivideandConquer:
** TODO [[https://leetcode-cn.com/problems/zhan-de-ya-ru-dan-chu-xu-lie-lcof/][剑指 Offer 31. 栈的压入、弹出序列 LCOF]] 
** TODO [[https://leetcode-cn.com/problems/xu-lie-hua-er-cha-shu-lcof/][剑指 Offer 37. 序列化二叉树  LCOF]] :Tree:Design:
** TODO [[https://leetcode-cn.com/problems/zi-fu-chuan-de-pai-lie-lcof/][剑指 Offer 38. 字符串的排列  LCOF]] :Backtracking:
** TODO [[https://leetcode-cn.com/problems/1nzheng-shu-zhong-1chu-xian-de-ci-shu-lcof/][面试题43. 1～n整数中1出现的次数  LCOF]] :Math:
** TODO [[https://leetcode-cn.com/problems/shu-zu-zhong-chu-xian-ci-shu-chao-guo-yi-ban-de-shu-zi-lcof/][剑指 Offer 39. 数组中出现次数超过一半的数字  LCOF]] :BitManipulation:DivideandConquer:
** TODO [[https://leetcode-cn.com/problems/cong-shang-dao-xia-da-yin-er-cha-shu-lcof/][剑指 Offer 32 - I. 从上到下打印二叉树 LCOF]] :Tree:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/cong-shang-dao-xia-da-yin-er-cha-shu-ii-lcof/][剑指 Offer 32 - II. 从上到下打印二叉树 II LCOF]] :Tree:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/shu-zi-xu-lie-zhong-mou-yi-wei-de-shu-zi-lcof/][剑指 Offer 44. 数字序列中某一位的数字  LCOF]] :Math:
** TODO [[https://leetcode-cn.com/problems/cong-shang-dao-xia-da-yin-er-cha-shu-iii-lcof/][剑指 Offer 32 - III. 从上到下打印二叉树 III LCOF]] :Tree:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof/][剑指 Offer 33. 二叉搜索树的后序遍历序列 LCOF]] 
** TODO [[https://leetcode-cn.com/problems/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof/][剑指 Offer 50. 第一个只出现一次的字符  LCOF]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/er-cha-shu-zhong-he-wei-mou-yi-zhi-de-lu-jing-lcof/][剑指 Offer 34. 二叉树中和为某一值的路径 LCOF]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/shu-zu-zhong-de-ni-xu-dui-lcof/][剑指 Offer 51. 数组中的逆序对  LCOF]] 
** TODO [[https://leetcode-cn.com/problems/er-cha-shu-de-shen-du-lcof/][剑指 Offer 55 - I. 二叉树的深度 LCOF]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/shu-zu-zhong-shu-zi-chu-xian-de-ci-shu-lcof/][剑指 Offer 56 - I. 数组中数字出现的次数 LCOF]] 
** TODO [[https://leetcode-cn.com/problems/shu-zu-zhong-shu-zi-chu-xian-de-ci-shu-ii-lcof/][剑指 Offer 56 - II. 数组中数字出现的次数 II LCOF]] 
** TODO [[https://leetcode-cn.com/problems/he-wei-sde-liang-ge-shu-zi-lcof/][剑指 Offer 57. 和为s的两个数字 LCOF]] 
** TODO [[https://leetcode-cn.com/problems/ba-shu-zu-pai-cheng-zui-xiao-de-shu-lcof/][剑指 Offer 45. 把数组排成最小的数 LCOF]] :Sort:
** TODO [[https://leetcode-cn.com/problems/he-wei-sde-lian-xu-zheng-shu-xu-lie-lcof/][剑指 Offer 57 - II. 和为s的连续正数序列 LCOF]] 
** TODO [[https://leetcode-cn.com/problems/ba-shu-zi-fan-yi-cheng-zi-fu-chuan-lcof/][剑指 Offer 46. 把数字翻译成字符串 LCOF]] 
** TODO [[https://leetcode-cn.com/problems/liang-ge-lian-biao-de-di-yi-ge-gong-gong-jie-dian-lcof/][剑指 Offer 52. 两个链表的第一个公共节点  LCOF]] :LinkedList:
** TODO [[https://leetcode-cn.com/problems/li-wu-de-zui-da-jie-zhi-lcof/][剑指 Offer 47. 礼物的最大价值 LCOF]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/fan-zhuan-dan-ci-shun-xu-lcof/][剑指 Offer 58 - I. 翻转单词顺序 LCOF]] :String:
** TODO [[https://leetcode-cn.com/problems/zai-pai-xu-shu-zu-zhong-cha-zhao-shu-zi-lcof/][剑指 Offer 53 - I. 在排序数组中查找数字  LCOF]] :Array:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/zuo-xuan-zhuan-zi-fu-chuan-lcof/][剑指 Offer 58 - II. 左旋转字符串 LCOF]] :String:
** TODO [[https://leetcode-cn.com/problems/que-shi-de-shu-zi-lcof/][剑指 Offer 53 - II. 缺失的数字  LCOF]] :Array:BinarySearch:
** TODO [[https://leetcode-cn.com/problems/zui-chang-bu-han-zhong-fu-zi-fu-de-zi-zi-fu-chuan-lcof/][剑指 Offer 48. 最长不含重复字符的子字符串 LCOF]] :HashTable:TwoPointers:SlidingWindow:
** TODO [[https://leetcode-cn.com/problems/er-cha-sou-suo-shu-de-di-kda-jie-dian-lcof/][剑指 Offer 54. 二叉搜索树的第k大节点  LCOF]] :Tree:
** TODO [[https://leetcode-cn.com/problems/chou-shu-lcof/][剑指 Offer 49. 丑数 LCOF]] :Math:
** TODO [[https://leetcode-cn.com/problems/bu-yong-jia-jian-cheng-chu-zuo-jia-fa-lcof/][剑指 Offer 65. 不用加减乘除做加法 LCOF]] 
** TODO [[https://leetcode-cn.com/problems/hua-dong-chuang-kou-de-zui-da-zhi-lcof/][剑指 Offer 59 - I. 滑动窗口的最大值 LCOF]] :Queue:SlidingWindow:
** TODO [[https://leetcode-cn.com/problems/dui-lie-de-zui-da-zhi-lcof/][剑指 Offer 59 - II. 队列的最大值 LCOF]] :Stack:SlidingWindow:
** TODO [[https://leetcode-cn.com/problems/gou-jian-cheng-ji-shu-zu-lcof/][剑指 Offer 66. 构建乘积数组 LCOF]] 
** TODO [[https://leetcode-cn.com/problems/nge-tou-zi-de-dian-shu-lcof/][剑指 Offer 60. n个骰子的点数  LCOF]] 
** TODO [[https://leetcode-cn.com/problems/ba-zi-fu-chuan-zhuan-huan-cheng-zheng-shu-lcof/][剑指 Offer 67. 把字符串转换成整数 LCOF]] :Math:String:
** TODO [[https://leetcode-cn.com/problems/bu-ke-pai-zhong-de-shun-zi-lcof/][剑指 Offer 61. 扑克牌中的顺子  LCOF]] 
** TODO [[https://leetcode-cn.com/problems/ping-heng-er-cha-shu-lcof/][剑指 Offer 55 - II. 平衡二叉树 LCOF]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof/][剑指 Offer 62. 圆圈中最后剩下的数字 LCOF]] 
** TODO [[https://leetcode-cn.com/problems/gu-piao-de-zui-da-li-run-lcof/][剑指 Offer 63. 股票的最大利润  LCOF]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/qiu-12n-lcof/][剑指 Offer 64. 求1+2+…+n LCOF]] 
** TODO [[https://leetcode-cn.com/problems/er-cha-sou-suo-shu-de-zui-jin-gong-gong-zu-xian-lcof/][剑指 Offer 68 - I. 二叉搜索树的最近公共祖先 LCOF]] :Tree:
** TODO [[https://leetcode-cn.com/problems/er-cha-shu-de-zui-jin-gong-gong-zu-xian-lcof/][剑指 Offer 68 - II. 二叉树的最近公共祖先 LCOF]] :Tree:
** TODO [[https://leetcode-cn.com/problems/permutation-ii-lcci/][面试题 08.08. Permutation II LCCI]] :Backtracking:
** TODO [[https://leetcode-cn.com/problems/maximum-lcci/][面试题 16.07. Maximum LCCI]] :BitManipulation:Math:
** TODO [[https://leetcode-cn.com/problems/operations-lcci/][面试题 16.09. Operations LCCI]] :Design:
** TODO [[https://leetcode-cn.com/problems/living-people-lcci/][面试题 16.10. Living People LCCI]] :Array:
** TODO [[https://leetcode-cn.com/problems/diving-board-lcci/][面试题 16.11. Diving Board LCCI]] :Recursion:Memoization:
** TODO [[https://leetcode-cn.com/problems/bisect-squares-lcci/][面试题 16.13. Bisect Squares LCCI]] :Geometry:
** TODO [[https://leetcode-cn.com/problems/best-line-lcci/][面试题 16.14. Best Line LCCI]] :Geometry:HashTable:
** TODO [[https://leetcode-cn.com/problems/master-mind-lcci/][面试题 16.15. Master Mind LCCI]] :Array:
** TODO [[https://leetcode-cn.com/problems/sub-sort-lcci/][面试题 16.16. Sub Sort LCCI]] :Sort:Array:
** TODO [[https://leetcode-cn.com/problems/contiguous-sequence-lcci/][面试题 16.17. Contiguous Sequence LCCI]] :Array:DivideandConquer:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/pattern-matching-lcci/][面试题 16.18. Pattern Matching LCCI]] :String:
** TODO [[https://leetcode-cn.com/problems/pond-sizes-lcci/][面试题 16.19. Pond Sizes LCCI]] :DepthfirstSearch:BreadthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/one-away-lcci/][面试题 01.05. One Away LCCI]] :String:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/kth-node-from-end-of-list-lcci/][面试题 02.02. Kth Node From End of List LCCI]] :LinkedList:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/partition-list-lcci/][面试题 02.04. Partition List LCCI]] :LinkedList:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/paths-with-sum-lcci/][面试题 04.12. Paths with Sum LCCI]] :Tree:DepthfirstSearch:
** TODO [[https://leetcode-cn.com/problems/bst-sequences-lcci/][面试题 04.09. BST Sequences LCCI]] :Tree:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/robot-in-a-grid-lcci/][面试题 08.02. Robot in a Grid LCCI]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/sorted-merge-lcci/][面试题 10.01. Sorted Merge LCCI]] :Array:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/peaks-and-valleys-lcci/][面试题 10.11. Peaks and Valleys LCCI]] 
** TODO [[https://leetcode-cn.com/problems/hanota-lcci/][面试题 08.06. Hanota LCCI]] :Recursion:
** TODO [[https://leetcode-cn.com/problems/sorted-matrix-search-lcci/][面试题 10.09. Sorted Matrix Search LCCI]] :TwoPointers:BinarySearch:DivideandConquer:
** TODO [[https://leetcode-cn.com/problems/factorial-zeros-lcci/][面试题 16.05. Factorial Zeros LCCI]] :Math:
** TODO [[https://leetcode-cn.com/problems/english-int-lcci/][面试题 16.08. English Int LCCI]] :Math:String:
** TODO [[https://leetcode-cn.com/problems/binode-lcci/][面试题 17.12. BiNode LCCI]] :Tree:BinarySearchTree:Recursion:
** TODO [[https://leetcode-cn.com/problems/re-space-lcci/][面试题 17.13. Re-Space LCCI]] :Memoization:String:
** TODO [[https://leetcode-cn.com/problems/smallest-k-lcci/][面试题 17.14. Smallest K LCCI]] :Heap:Sort:DivideandConquer:
** TODO [[https://leetcode-cn.com/problems/longest-word-lcci/][面试题 17.15. Longest Word LCCI]] :String:
** TODO [[https://leetcode-cn.com/problems/the-masseuse-lcci/][面试题 17.16. The Masseuse LCCI]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/multi-search-lcci/][面试题 17.17. Multi Search LCCI]] :Trie:String:
** TODO [[https://leetcode-cn.com/problems/add-without-plus-lcci/][面试题 17.01. Add Without Plus LCCI]] :BitManipulation:
** TODO [[https://leetcode-cn.com/problems/lru-cache-lcci/][面试题 16.25. LRU Cache LCCI]] :Design:
** TODO [[https://leetcode-cn.com/problems/calculator-lcci/][面试题 16.26. Calculator LCCI]] :String:
** TODO [[https://leetcode-cn.com/problems/continuous-median-lcci/][面试题 17.20. Continuous Median LCCI]] :Heap:
** TODO [[https://leetcode-cn.com/problems/volume-of-histogram-lcci/][面试题 17.21. Volume of Histogram LCCI]] :Stack:Array:TwoPointers:
** TODO [[https://leetcode-cn.com/problems/word-transformer-lcci/][面试题 17.22. Word Transformer LCCI]] :DepthfirstSearch:BreadthfirstSearch:Array:String:
** TODO [[https://leetcode-cn.com/problems/boolean-evaluation-lcci/][面试题 08.14. Boolean Evaluation LCCI]] :Stack:String:
** TODO [[https://leetcode-cn.com/problems/missing-number-lcci/][面试题 17.04. Missing Number LCCI]] :BitManipulation:Array:Math:
** TODO [[https://leetcode-cn.com/problems/find-longest-subarray-lcci/][面试题 17.05. Find Longest Subarray LCCI]] :Array:
** TODO [[https://leetcode-cn.com/problems/number-of-2s-in-range-lcci/][面试题 17.06. Number Of 2s In Range LCCI]] :Math:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/baby-names-lcci/][面试题 17.07. Baby Names LCCI]] :DepthfirstSearch:BreadthfirstSearch:UnionFind:
** TODO [[https://leetcode-cn.com/problems/circus-tower-lcci/][面试题 17.08. Circus Tower LCCI]] :Sort:BinarySearch:DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/get-kth-magic-number-lcci/][面试题 17.09. Get Kth Magic Number LCCI]] :Heap:Queue:Math:
** TODO [[https://leetcode-cn.com/problems/find-majority-element-lcci/][面试题 17.10. Find Majority Element LCCI]] :BitManipulation:Array:DivideandConquer:
** TODO [[https://leetcode-cn.com/problems/find-closest-lcci/][面试题 17.11. Find Closest LCCI]] :TwoPointers:String:
** TODO [[https://leetcode-cn.com/problems/group-anagrams-lcci/][面试题 10.02. Group Anagrams LCCI]] :HashTable:String:
** TODO [[https://leetcode-cn.com/problems/rank-from-stream-lcci/][面试题 10.10. Rank from Stream LCCI]] 
** TODO [[https://leetcode-cn.com/problems/pairs-with-sum-lcci/][面试题 16.24. Pairs With Sum LCCI]] :Array:HashTable:
** TODO [[https://leetcode-cn.com/problems/shortest-supersequence-lcci/][面试题 17.18. Shortest Supersequence LCCI]] :SlidingWindow:
** TODO [[https://leetcode-cn.com/problems/missing-two-lcci/][面试题 17.19. Missing Two LCCI]] :Array:Math:
** TODO [[https://leetcode-cn.com/problems/max-black-square-lcci/][面试题 17.23. Max Black Square LCCI]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/max-submatrix-lcci/][面试题 17.24. Max Submatrix LCCI]] :DynamicProgramming:
** TODO [[https://leetcode-cn.com/problems/t9-lcci/][面试题 16.20. T9 LCCI]] :Array:
** TODO [[https://leetcode-cn.com/problems/sum-swap-lcci/][面试题 16.21. Sum Swap LCCI]] :Sort:Array:
** TODO [[https://leetcode-cn.com/problems/word-rectangle-lcci/][面试题 17.25. Word Rectangle LCCI]] 
** TODO [[https://leetcode-cn.com/problems/langtons-ant-lcci/][面试题 16.22. Langtons Ant LCCI]] :Array:
** TODO [[https://leetcode-cn.com/problems/sparse-similarity-lcci/][面试题 17.26. Sparse Similarity LCCI]] :HashTable:
** TODO [[https://leetcode-cn.com/problems/na-ying-bi/][LCP 06. 拿硬币]] 
** TODO [[https://leetcode-cn.com/problems/ju-qing-hong-fa-shi-jian/][LCP 08. 剧情触发时间]] 
** TODO [[https://leetcode-cn.com/problems/er94lq/][LCP 23. 魔术排列]] 
** TODO [[https://leetcode-cn.com/problems/qie-fen-shu-zu/][LCP 14. 切分数组]] 
** TODO [[https://leetcode-cn.com/problems/er-cha-shu-ren-wu-diao-du/][LCP 10. 二叉树任务调度]] 
** TODO [[https://leetcode-cn.com/problems/chuan-di-xin-xi/][LCP 07. 传递信息]] 
** TODO [[https://leetcode-cn.com/problems/you-le-yuan-de-you-lan-ji-hua/][LCP 16. 游乐园的游览计划]] 
** TODO [[https://leetcode-cn.com/problems/qi-wang-ge-shu-tong-ji/][LCP 11. 期望个数统计]] 
** TODO [[https://leetcode-cn.com/problems/xiao-zhang-shua-ti-ji-hua/][LCP 12. 小张刷题计划]] 
** TODO [[https://leetcode-cn.com/problems/you-le-yuan-de-mi-gong/][LCP 15. 游乐园的迷宫]] 
** TODO [[https://leetcode-cn.com/problems/zui-xiao-tiao-yue-ci-shu/][LCP 09. 最小跳跃次数]] 
** TODO [[https://leetcode-cn.com/problems/xun-bao/][LCP 13. 寻宝]] 
** TODO [[https://leetcode-cn.com/problems/UlBDOe/][LCP 19. 秋叶收藏集]] 
** TODO [[https://leetcode-cn.com/problems/5TxKeK/][LCP 24. 数字游戏]] 
** TODO [[https://leetcode-cn.com/problems/hSRGyL/][LCP 26. 导航装置]] 
** TODO [[https://leetcode-cn.com/problems/meChtZ/][LCP 20. 快速公交]] 
** TODO [[https://leetcode-cn.com/problems/Za25hA/][LCP 21. 追逐游戏]] 
** TODO [[https://leetcode-cn.com/problems/Uh984O/][LCP 25. 古董键盘]] 
** TODO [[https://leetcode-cn.com/problems/nGK0Fy/][LCP 17. 速算机器人]] 
** TODO [[https://leetcode-cn.com/problems/ccw6C7/][LCP 22. 黑白方格画]] 
** TODO [[https://leetcode-cn.com/problems/2vYnGI/][LCP 18. 早餐组合]] 
** TODO [[https://leetcode-cn.com/problems/IQvJ9i/][LCP 27. 黑盒光线反射]] 