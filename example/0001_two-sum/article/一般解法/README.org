#+TITLE: 一般解法
#+DATE: 2020-10-11 13:38
#+LAST_MODIFIED: 2020-10-11 13:38
#+STARTUP: overview
#+HUGO_WEIGHT: auto
#+HUGO_AUTO_SET_LASTMOD: t
#+EXPORT_FILE_NAME: 0001-two-sum-yi-ban-jie-fa-by-nuan-xin-shao-nian-nan-ou-ba
#+HUGO_BASE_DIR:~/G/blog
#+HUGO_SECTION: leetcode
#+HUGO_CATEGORIES:leetcode
#+HUGO_TAGS: Leetcode Algorithms Java

* [[https://leetcode-cn.com/problems/two-sum/solution/yi-ban-jie-fa-by-nuan-xin-shao-nian-nan-ou-ba/][一般解法]] :Java:
:PROPERTIES:
:VISIBILITY: children
:END:

#+begin_quote
[[https://leetcode-cn.com/problems/two-sum/][0001. Two Sum]] [[https://leetcode-cn.com/problems/two-sum/solution/yi-ban-jie-fa-by-nuan-xin-shao-nian-nan-ou-ba/][一般解法]] solution by [[https://leetcode-cn.com/u/nuan-xin-shao-nian-nan-ou-ba/][nuan-xin-shao-nian-nan-ou-ba]]
#+end_quote

** 解题思路
    :PROPERTIES:
    :CUSTOM_ID: 解题思路
    :END:

此处撰写解题思路 首先定义两个变量first
second分别保存先后两个答案的下标，定义变量text记录差值。
从数组第一个元素开始记录（将其下标保存在first），与目标值求差，在二层循环中寻找是否有解，找到后将其下标保存在second，跳出循环，如果此时循环变量j等于数组长度nums.length则说明没找到解，重新开始外层循环。如果不等于则说明找到解后跳出了二层循环，此时再次使用break跳出一层循环。创建一个大小为2的数组保存结果返回。
### 代码

#+BEGIN_SRC java
  class Solution {
      public int[] twoSum(int[] nums, int target) {
          int first=0,second=0,text=0,i,j;
         for(i=0;i<nums.length;i++){
               first=i;
               text=target-nums[i];
               for(j=i+1;j<nums.length;j++){
                   if(nums[j]==text){
                       second=j;
                       break;
                   }
               }
               if(j==nums.length){
                   continue;
               }
               else{
                   break;
               }
           }
         int [] arr=new int[2];
         arr[0]=first;
         arr[1]=second;
         return arr;
      }
  }
#+END_SRC
