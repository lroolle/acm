#+TITLE: 【Java】简单易懂的 “补数思想”
#+DATE: 2020-10-11 13:38
#+LAST_MODIFIED: 2020-10-11 13:38
#+STARTUP: overview
#+HUGO_WEIGHT: auto
#+HUGO_AUTO_SET_LASTMOD: t
#+EXPORT_FILE_NAME: 0001-two-sum-java-jian-dan-yi-dong-de-bu-shu-si-xiang-by-leetco
#+HUGO_BASE_DIR:~/G/blog
#+HUGO_SECTION: leetcode
#+HUGO_CATEGORIES:leetcode
#+HUGO_TAGS: Leetcode Algorithms Java HashTable

* [[https://leetcode-cn.com/problems/two-sum/solution/java-jian-dan-yi-dong-de-bu-shu-si-xiang-by-leetco/][【Java】简单易懂的 “补数思想”]] :Java:HashTable:
:PROPERTIES:
:VISIBILITY: children
:END:

#+begin_quote
[[https://leetcode-cn.com/problems/two-sum/][0001. Two Sum]] [[https://leetcode-cn.com/problems/two-sum/solution/java-jian-dan-yi-dong-de-bu-shu-si-xiang-by-leetco/][【Java】简单易懂的 “补数思想”]] solution by [[https://leetcode-cn.com/u/leetcoder-youzg/][leetcoder-youzg]]
#+end_quote

** 解题思路
    :PROPERTIES:
    :CUSTOM_ID: 解题思路
    :END:

#+BEGIN_QUOTE
  遍历一轮 nums数组，以 补数 为键，下标 为值，填充map
  并在map中寻找是否有这个补数 的键，其值即为 nums数组中的下标
#+END_QUOTE

** 运行结果
    :PROPERTIES:
    :CUSTOM_ID: 运行结果
    :END:

#+CAPTION: image.png
[[https://pic.leetcode-cn.com/1601689545-MUgkkv-image.png]]

** 代码
    :PROPERTIES:
    :CUSTOM_ID: 代码
    :END:

#+BEGIN_SRC java
  class Solution {
      public int[] twoSum(int[] nums, int target) {
          HashMap<Integer, Integer> map = new HashMap<>();    // 以 补数 为键，下标 为值
          int[] res = new int[2];

          for(int i=0; i < nums.length; i++) {
              int other = target - nums[i];

              if(map.get(other) !=null) {
                  res[0] = i;
                  res[1] = map.get(other);
                  return res;
              }
              map.put(nums[i], i);
          }
          return res;
      }
  }
#+END_SRC

打卡第74天，加油！！！
